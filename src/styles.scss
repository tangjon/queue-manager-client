/* You can add global styles to this file, and also import other style files */
//@import '~@angular/material/prebuilt-themes/deeppurple-amber.css';
@import '~@angular/material/theming';

@include mat-core();

$qm-app-primary: mat-palette($mat-blue, 600);
$qm-app-accent: mat-palette($mat-orange, A200, A100, A400);

// The warn palette is optional (defaults to red).
$qm-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$qm-app-theme: mat-light-theme($qm-app-primary, $qm-app-accent, $qm-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($qm-app-theme);

.fixed-nav {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
}

body {
  background-color: #eceff1;
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding: 2.5em 0 0 0;
}

/* Table CSS */
.qTable-title {
  background-color: #2c3e50;
  color: white;
  padding: 10px;
  margin: 0px;
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
}

.qTable {
  background-color: #ffffff;
  padding-bottom: 20px;
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
}

.shadow {
  box-shadow: 0px 1px 2px 1px rgba(0, 0, 0, 0.19);
}

.table-responsive.shadow {
  margin-bottom: 25px;
}

.container {
  font-family: 'Roboto', sans-serif;
}

.instruction {
  background-color: green;
  padding: 6px;
  color: white;
}

#qClipboard {
  padding: 20px 0;
}

a.nav-link.active {
  background: linear-gradient(135deg, #fbb040 50%, #1d75bc 50%);
}

/* PROPER GENERAL CSS */
.component-header {
  background-color: #2c3e50;
  color: white;
  padding: 10px;
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  box-shadow: 1px 0px #eee, 0px 1px #ccc, 2px 1px #eee, 1px 2px #ccc, 3px 2px #eee, 2px 3px #ccc, 4px 3px #eee, 3px 4px #ccc, 5px 4px #eee, 4px 5px #ccc, 6px 5px #eee, 5px 6px #ccc, 7px 6px #eee, 6px 7px #ccc, 8px 7px #eee, 7px 8px #ccc, 8px 8px #eee;
  margin-bottom: 15px;
}

.error-message {
  white-space: pre-wrap;
  word-wrap: break-word;
}

.shadow-box {
  height: 150px;
  width: 300px;
  margin: 20px;
  border: 1px solid #ccc;
}

.shadow-top {
  box-shadow: 0 -5px 5px -5px #333;
}

.shadow-right {
  box-shadow: 5px 0 5px -5px #333;
}

.shadow-bottom {
  box-shadow: 0 5px 5px -5px #333;
}

.shadow-left {
  box-shadow: -5px 0 5px -5px #333;
}

.shadow-all {
  box-shadow: 0 0 5px #333;
}

.shadow-block {
  box-shadow: 1px 0px #eee, 0px 1px #ccc, 2px 1px #eee, 1px 2px #ccc, 3px 2px #eee, 2px 3px #ccc, 4px 3px #eee, 3px 4px #ccc, 5px 4px #eee, 4px 5px #ccc, 6px 5px #eee, 5px 6px #ccc, 7px 6px #eee, 6px 7px #ccc, 8px 7px #eee, 7px 8px #ccc, 8px 8px #eee;
  margin-bottom: 15px;
}

.qm-form {
  padding: 22px;
}

/*Modals*/
.modal-body {
  word-wrap: break-word;
}

/*                     */


