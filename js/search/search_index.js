var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.076,1,0.85]],["body/components/AboutComponent.html",[0,0.123,1,1.294,2,0.976,3,0.178,4,0.205,5,0.84,6,0.84,7,0.84,8,0.84,9,0.164,10,2.971,11,1.125,12,1.567,13,0.704,14,2.037,15,1.771,16,1.206,17,5.735,18,1.206,19,4.901,20,0.393,21,0.564,22,1.713,23,0.848,24,0.539,25,3.412,26,3.412,27,0.393,28,0.014,29,0.656,30,0.294,31,0.326,32,0.191,33,0.1,34,4.505,35,3.412,36,4.901,37,3.082,38,4.267,39,4.267,40,3.85,41,2.271,42,4.901,43,3.821,44,3.85,45,4.317,46,4.267,47,4.901,48,4.267,49,4.267,50,6.268,51,6.91,52,6.91,53,6.91,54,6.91,55,4.901,56,3.682,57,4.901,58,3.538,59,4.901,60,4.901,61,4.901,62,4.901,63,4.901,64,4.901,65,4.901,66,4.901,67,3.538,68,4.901,69,3.85,70,1.598,71,6.91,72,6.91,73,6.91,74,3.877,75,1.451,76,6.017,77,6.91,78,6.91,79,6.91,80,6.91,81,6.91,82,6.91,83,0.632,84,1.206,85,1.206,86,0.84,87,1.542,88,0.84,89,3.412,90,0.491,91,0.84,92,0.73,93,0.783,94,0.84,95,0.73,96,0.588,97,0.41,98,0.84,99,0.73,100,0.84,101,0.73,102,0.704,103,1.411,104,0.73,105,0.84,106,0.73,107,0.84,108,0.73,109,0.73,110,0.84,111,0.84,112,0.73,113,0.84,114,0.73,115,1.49,116,0.84,117,0.73,118,1.411,119,0.704,120,0.84,121,0.704,122,0.704,123,0.84,124,0.73,125,0.84,126,0.73,127,1.048,128,0.84,129,0.73,130,0.73,131,0.84,132,0.73,133,0.84,134,0.704,135,0.756,136,0.84,137,0.73,138,0.704,139,0.73,140,0.753,141,0.84,142,0.68,143,1.411,144,0.704,145,0.976,146,0.73,147,0.84,148,0.704,149,0.73,150,0.783,151,0.73,152,0.84,153,0.704,154,0.73,155,0.704,156,0.84,157,0.84,158,0.006,159,0.008,160,0.006]],["title/classes/ActionEntryLog.html",[33,0.12,161,2.311]],["body/classes/ActionEntryLog.html",[3,0.199,4,0.23,9,0.184,20,0.441,21,0.612,23,0.566,24,0.89,27,0.877,28,0.014,29,1.268,30,0.458,32,0.298,33,0.112,70,2.152,90,0.612,158,0.006,159,0.009,160,0.006,161,2.983,162,2.041,163,3.008,164,0.95,165,5.318,166,5.318,167,5.318,168,5.318,169,4.327,170,5.318,171,5.318,172,6.598,173,6.598,174,6.598,175,6.598,176,6.598,177,6.598,178,6.598,179,5.317,180,5.317,181,5.317,182,5.317,183,0.975,184,0.939,185,3.334,186,0.916,187,4.763,188,3.829,189,1.579,190,3.829,191,3.829,192,3.829,193,3.829,194,3.829,195,3.99,196,3.829,197,5.317,198,5.317,199,5.317,200,3.829,201,3.829,202,3.829,203,3.829,204,3.829,205,3.829,206,5.317,207,3.829,208,5.317,209,3.829,210,3.568,211,3.829,212,1.944,213,3.829,214,3.334,215,1.295,216,3.334,217,2.148,218,3.334,219,2.041,220,3.334,221,2.408,222,3.334,223,2.765,224,3.334,225,3.008,226,3.334,227,2.765,228,5.317,229,3.829,230,6.107,231,3.829,232,5.317,233,3.829,234,6.107,235,3.829,236,5.317,237,3.829,238,6.598,239,3.829,240,3.829,241,3.829,242,3.829,243,2.234,244,3.829,245,3.829,246,3.829,247,5.317,248,3.829,249,3.829]],["title/components/ActivityLogComponent.html",[0,0.076,92,0.881]],["body/components/ActivityLogComponent.html",[0,0.126,1,0.76,2,1.031,3,0.192,4,0.222,5,0.906,6,0.906,7,0.906,8,0.906,9,0.177,11,1.187,12,1.634,13,0.76,14,2.049,15,1.781,16,1.273,18,1.273,20,0.424,21,0.595,22,1.772,23,0.544,24,0.801,27,0.424,28,0.014,29,0.708,30,0.589,31,0.351,32,0.206,33,0.108,75,1.031,83,0.683,84,1.273,85,1.273,86,0.906,87,1.596,88,0.906,90,0.599,91,0.906,92,1.387,93,1.756,94,0.906,95,0.788,96,0.634,97,0.443,98,0.906,99,0.788,100,0.906,101,0.788,102,0.76,103,1.472,104,0.788,105,0.906,106,0.788,107,0.906,108,0.788,109,0.788,110,0.906,111,0.906,112,0.788,113,0.906,114,0.788,115,1.541,116,0.906,117,0.788,118,1.472,119,0.76,120,0.906,121,0.76,122,0.76,123,0.906,124,0.788,125,0.906,126,0.788,127,1.107,128,0.906,129,0.788,130,0.788,131,0.906,132,0.788,133,0.906,134,0.76,135,0.816,136,0.906,137,0.788,138,0.76,139,0.788,140,0.795,141,0.906,142,0.734,143,1.472,144,0.76,145,1.031,146,0.788,147,0.906,148,0.76,149,0.788,150,0.845,151,0.788,152,0.906,153,0.76,154,0.788,155,0.76,156,0.906,157,0.906,158,0.006,159,0.008,160,0.006,161,2.066,164,0.924,183,0.588,184,0.566,186,0.822,250,6.469,251,5.836,252,3.206,253,3.035,254,5.98,255,5.173,256,5.98,257,5.98,258,1.413,259,4.236,260,5.98,261,3.761,262,3.682,263,5.173,264,3.682,265,3.066,266,1.578,267,1.279,268,2.897,269,3.682,270,3.682,271,1.448,272,4.504,273,3.682,274,1.75,275,3.682,276,4.504,277,1.292,278,2.182,279,2.066,280,3.206,281,3.682,282,3.682,283,2.066,284,1.201,285,3.682,286,3.682,287,3.682,288,3.682,289,3.682,290,2.472,291,3.682,292,3.253,293,5.173,294,3.253,295,3.472,296,3.735,297,5.173,298,5.173,299,5.173,300,5.173,301,5.173,302,3.682]],["title/components/AddUserFormComponent.html",[0,0.076,95,0.881]],["body/components/AddUserFormComponent.html",[0,0.127,1,0.772,2,1.042,3,0.195,4,0.225,5,0.92,6,0.92,7,0.92,8,0.92,9,0.18,11,1.2,12,1.647,13,0.772,14,2.051,15,1.783,16,1.287,18,1.287,20,0.43,21,0.602,22,1.784,23,0.553,24,0.718,27,0.602,28,0.014,29,1.005,30,0.562,31,0.357,32,0.21,33,0.109,75,1.042,83,0.693,84,1.287,85,1.287,86,0.92,87,1.607,88,0.92,90,0.747,91,0.92,92,0.8,93,0.858,94,0.92,95,1.397,96,1.322,97,0.986,98,0.92,99,0.8,100,0.92,101,0.8,102,0.772,103,1.484,104,0.8,105,0.92,106,0.8,107,0.92,108,0.8,109,0.8,110,0.92,111,0.92,112,0.8,113,0.92,114,0.8,115,1.552,116,0.92,117,0.8,118,1.484,119,0.772,120,0.92,121,0.772,122,0.772,123,0.92,124,0.8,125,0.92,126,0.8,127,1.118,128,0.92,129,0.8,130,0.8,131,0.92,132,0.8,133,0.92,134,0.772,135,0.828,136,0.92,137,0.8,138,0.772,139,0.8,140,0.804,141,0.92,142,0.745,143,1.484,144,0.772,145,1.042,146,0.8,147,0.92,148,0.772,149,0.8,150,0.858,151,0.8,152,0.92,153,0.772,154,0.8,155,0.772,156,0.92,157,0.92,158,0.006,159,0.009,160,0.006,164,0.934,183,0.835,184,0.804,186,0.725,219,2.786,227,3.775,258,1.429,284,1.219,303,4.612,304,5.983,305,5.398,306,3.256,307,3.775,308,6.03,309,5.229,310,3.227,311,4.553,312,2.937,313,3.739,314,3.739,315,4.553,316,4.383,317,3.739,318,2.509,319,3.739,320,1.992,321,1.592,322,2.098,323,2.509,324,3.256,325,2.937,326,2.937,327,2.509,328,3.256,329,3.739,330,3.256,331,3.739,332,3.256,333,3.785,334,5.686,335,5.686,336,5.686]],["title/components/AppComponent.html",[0,0.076,99,0.881]],["body/components/AppComponent.html",[0,0.132,1,0.849,2,1.113,3,0.214,4,0.247,5,1.012,6,1.012,7,1.012,8,1.012,9,0.198,13,0.849,14,2.065,15,1.795,16,1.374,18,1.374,20,0.473,23,0.608,24,0.807,28,0.014,30,0.586,31,0.392,32,0.231,33,0.12,75,1.113,83,0.762,84,1.374,85,1.374,86,1.012,87,1.673,88,1.012,90,0.635,91,1.012,92,0.88,93,0.944,94,1.012,95,0.88,96,0.708,97,0.495,98,1.012,99,1.455,100,1.012,101,0.88,102,0.849,103,1.56,104,0.88,105,1.012,106,0.88,107,1.012,108,0.88,109,0.88,110,1.012,111,1.012,112,0.88,113,1.012,114,0.88,115,1.616,116,1.012,117,0.88,118,1.56,119,0.849,120,1.012,121,0.849,122,0.849,123,1.012,124,0.88,125,1.012,126,0.88,127,1.194,128,1.012,129,0.88,130,0.88,131,1.012,132,0.88,133,1.012,134,0.849,135,0.911,136,1.012,137,0.88,138,0.849,139,0.88,140,0.858,141,1.012,142,0.819,143,1.56,144,0.849,145,1.113,146,0.88,147,1.012,148,0.849,149,0.88,150,0.944,151,0.88,152,1.012,153,0.849,154,0.88,155,0.849,156,1.012,157,1.012,158,0.007,159,0.009,160,0.007,164,0.998,183,0.657,184,0.632,186,0.855,189,1.073,258,1.943,266,1.085,267,0.88,268,3.072,274,1.889,277,1.443,284,1.342,337,3.582,338,3.748,339,6.34,340,5.584,341,4.909,342,5.133,343,6.34,344,5.52,345,4.388,346,3.231,347,5.133,348,5.584,349,5.584,350,4.113,351,4.113,352,2.761,353,3.231]],["title/modules/AppModule.html",[354,1.5,355,2.974]],["body/modules/AppModule.html",[1,1.555,3,0.235,4,0.272,9,0.217,15,0.967,28,0.014,30,0.71,31,0.431,32,0.253,33,0.132,75,0.9,83,0.838,92,1.611,99,1.726,112,1.611,126,1.611,127,0.967,134,1.555,135,1.001,140,0.694,145,0.9,158,0.007,159,0.01,160,0.007,251,3.55,320,2.408,354,1.646,355,6.094,356,2.006,357,2.189,358,3.729,359,3.22,360,2.535,361,2.094,362,3.935,363,3.935,364,3.935,365,3.935,366,4.737,367,5.056,368,5.056,369,5.056,370,5.056,371,4.014,372,5.056,373,3.336,374,1.709,375,2.094,376,4.519,377,3.018,378,5.946,379,4.671,380,3.033,381,3.018,382,4.519,383,4.519,384,4.671,385,4.519,386,4.519,387,5.946,388,4.519,389,2.842,390,6.646,391,3.033,392,3.55,393,4.519,394,3.55,395,4.519,396,4.519,397,3.935,398,2.842,399,2.842,400,3.262,401,3.935]],["title/modules/AppRoutingModule.html",[354,1.5,366,2.59]],["body/modules/AppRoutingModule.html",[0,0.146,1,1.384,3,0.284,4,0.328,9,0.262,28,0.014,30,0.697,31,0.52,32,0.306,33,0.159,75,1.086,134,1.384,135,1.485,142,1.086,144,1.384,145,1.335,148,1.384,153,1.384,158,0.009,159,0.011,160,0.009,356,2.421,361,2.527,366,4.215,377,2.768,381,3.401,397,4.748,398,3.43,399,3.43,400,3.937,401,4.748,402,5.453,403,4.748,404,3.972,405,3.059,406,5.836,407,4.498,408,3.937,409,5.453,410,4.498,411,2.527,412,6.702,413,7.046,414,6.702,415,6.702,416,5.453,417,5.453,418,4.284,419,3.66,420,4.748,421,2.906,422,5.453,423,5.453,424,2.421,425,5.453,426,4.748]],["title/components/ApplicationSettingsComponent.html",[0,0.076,101,0.881]],["body/components/ApplicationSettingsComponent.html",[0,0.107,1,0.512,2,0.769,3,0.129,4,0.149,5,0.611,6,0.611,7,0.611,8,0.611,9,0.228,11,0.886,12,1.295,13,0.512,14,1.979,15,1.72,16,0.95,18,0.95,20,0.286,21,0.444,22,1.461,23,0.367,24,0.834,27,0.737,28,0.014,29,1.231,30,0.599,31,0.237,32,0.139,33,0.072,41,2.196,75,0.769,83,0.46,84,0.95,85,1.166,86,0.611,87,1.316,88,0.611,90,0.536,91,0.611,92,0.531,93,0.569,94,0.611,95,0.531,96,0.427,97,0.57,98,0.611,99,0.531,100,0.611,101,1.144,102,1.435,103,1.166,104,0.531,105,0.611,106,0.531,107,0.611,108,0.531,109,0.531,110,0.611,111,0.611,112,0.531,113,0.611,114,0.531,115,1.271,116,0.611,117,0.531,118,1.166,119,0.512,120,0.611,121,0.512,122,0.512,123,0.611,124,0.531,125,0.611,126,0.531,127,0.826,128,0.611,129,0.531,130,0.531,131,0.611,132,0.531,133,0.611,134,0.512,135,0.55,136,0.611,137,0.531,138,0.512,139,0.531,140,1.045,141,0.611,142,0.494,143,1.166,144,0.512,145,0.769,146,0.531,147,0.611,148,0.512,149,0.531,150,0.569,151,0.531,152,0.611,153,0.512,154,0.531,155,0.512,156,0.611,157,0.611,158,0.004,159,0.006,160,0.004,164,0.69,183,0.616,184,0.593,186,0.796,212,1.959,215,0.839,217,1.392,221,1.56,253,2.94,258,2.015,259,3.9,261,2.98,266,1.25,267,1.014,274,2.519,277,0.87,279,1.392,280,2.16,284,0.809,294,2.98,310,2.467,322,1.392,361,1.789,374,2.789,379,1.949,380,1.665,421,2.849,424,2.723,427,6.645,428,5.995,429,1.949,430,3.722,431,3.033,432,4.372,433,3.704,434,4.738,435,4.738,436,4.738,437,3.888,438,5.346,439,5.342,440,5.346,441,4.738,442,5.346,443,5.346,444,5.346,445,2.481,446,3.433,447,4.738,448,5.346,449,3.86,450,2.481,451,2.481,452,3.86,453,3.18,454,2.481,455,3.86,456,2.481,457,2.481,458,2.481,459,2.481,460,2.481,461,4.738,462,2.481,463,1.714,464,2.481,465,2.481,466,2.481,467,3.033,468,1.665,469,1.791,470,1.791,471,2.481,472,1.949,473,2.481,474,3.268,475,3.528,476,2.481,477,2.481,478,0.904,479,3.86,480,4.655,481,3.86,482,3.86,483,2.481,484,5.346,485,4.297,486,2.481,487,5.792,488,4.738,489,2.481,490,2.481,491,1.949,492,2.481,493,2.808,494,2.481,495,3.362,496,1.791,497,2.481,498,1.202,499,1.949,500,1.791,501,3.361,502,2.481,503,2.481,504,1.259,505,2.481,506,2.481,507,2.481,508,2.428,509,2.591,510,2.481,511,3.033,512,2.481,513,2.481,514,2.481,515,2.481,516,2.481,517,2.481,518,2.481,519,2.481,520,2.481,521,2.481,522,2.16,523,2.481,524,2.481,525,2.481,526,2.481,527,2.481,528,2.481,529,2.16,530,2.481,531,2.481,532,2.481,533,2.481,534,3.86,535,3.86,536,3.033,537,3.361,538,3.86,539,1.87,540,3.033,541,3.86,542,3.361,543,3.86,544,3.86,545,3.361,546,3.361,547,3.86,548,3.361,549,3.361,550,3.86,551,3.86,552,3.361,553,2.787,554,2.591,555,3.361]],["title/injectables/ArchiveService.html",[432,2.59,556,1.558]],["body/injectables/ArchiveService.html",[3,0.189,4,0.219,9,0.175,20,0.419,21,0.591,23,0.538,24,0.857,27,0.783,28,0.014,29,0.7,30,0.608,31,0.347,32,0.204,33,0.106,58,2.628,70,1.938,90,0.707,96,0.884,97,0.891,158,0.006,159,0.008,160,0.006,161,4.156,164,0.917,183,1.087,184,1.046,186,0.937,189,1.357,195,3.016,243,2.066,253,3.275,258,1.859,266,1.703,267,1.38,268,1.764,276,3.169,277,1.277,284,1.187,294,3.227,321,1.55,333,1.847,411,2.378,432,3.227,439,2.859,467,2.859,478,2.837,504,3.275,511,2.859,556,1.941,557,1.94,558,3.169,559,5.943,560,5.943,561,5.943,562,4.912,563,3.62,564,3.989,565,5.131,566,5.131,567,5.131,568,3.62,569,2.628,570,4.567,571,3.625,572,3.64,573,5.131,574,3.64,575,5.131,576,3.64,577,7.633,578,4.058,579,5.131,580,3.334,581,3.64,582,5.131,583,3.64,584,3.64,585,5.131,586,3.64,587,5.131,588,3.64,589,5.131,590,3.64,591,5.131,592,1.55,593,3.444,594,3.989,595,3.041,596,3.444,597,3.64,598,2.157,599,2.628,600,1.847,601,3.64,602,3.64,603,3.64,604,3.169,605,3.64,606,5.175,607,3.64,608,3.64,609,3.64,610,4.468,611,3.64,612,3.169,613,4.058,614,3.64,615,3.64,616,3.705,617,3.64,618,1.674,619,3.64,620,3.64,621,3.64,622,3.64,623,3.64,624,3.64,625,3.64,626,3.64,627,3.64,628,3.64,629,3.169,630,3.169,631,2.443,632,2.443,633,3.64,634,1.764,635,3.64,636,3.169,637,3.64,638,2.157,639,3.64]],["title/classes/BodyParser.html",[33,0.12,640,3.236]],["body/classes/BodyParser.html",[3,0.295,4,0.34,9,0.272,20,0.651,21,0.789,24,0.754,27,0.789,28,0.014,32,0.317,33,0.165,90,0.687,158,0.009,159,0.011,160,0.009,162,3.015,183,1.095,184,1.053,243,2.327,411,3.176,478,2.686,613,4.311,640,5.385,641,4.927,642,5.761,643,5.968,644,6.855,645,6.855,646,5.658,647,6.855,648,5.658,649,5.658,650,5.658,651,6.855,652,6.855,653,7.665,654,5.658,655,5.658]],["title/components/ClipboardComponent.html",[0,0.076,104,0.881]],["body/components/ClipboardComponent.html",[0,0.133,1,0.874,2,1.135,3,0.22,4,0.255,5,1.042,6,1.042,7,1.042,8,1.042,9,0.204,11,1.307,12,1.758,13,0.874,14,2.069,15,1.798,16,1.401,18,1.401,20,0.487,21,0.655,22,1.88,23,0.951,24,0.757,27,0.487,28,0.014,29,0.814,30,0.365,31,0.404,32,0.237,33,0.124,75,1.135,83,0.785,84,1.401,85,1.401,86,1.042,87,1.693,88,1.042,90,0.571,91,1.042,92,0.906,93,0.972,94,1.042,95,0.906,96,0.729,97,0.509,98,1.042,99,0.906,100,1.042,101,0.906,102,0.874,103,1.583,104,1.472,105,1.042,106,0.906,107,1.042,108,0.906,109,0.906,110,1.042,111,1.042,112,0.906,113,1.042,114,0.906,115,1.635,116,1.042,117,0.906,118,1.583,119,0.874,120,1.042,121,0.874,122,0.874,123,1.042,124,0.906,125,1.042,126,0.906,127,1.218,128,1.042,129,0.906,130,0.906,131,1.042,132,0.906,133,1.042,134,0.874,135,0.938,136,1.042,137,0.906,138,0.874,139,0.906,140,0.875,141,1.042,142,0.844,143,1.583,144,0.874,145,1.135,146,0.906,147,1.042,148,0.874,149,0.906,150,0.972,151,0.906,152,1.042,153,0.874,154,0.906,155,0.874,156,1.042,157,1.042,158,0.007,159,0.009,160,0.007,164,1.018,186,0.509,189,0.814,266,1.503,267,1.218,274,1.926,656,3.058,657,3.687,658,4.474,659,6.434,660,5.695,661,6.434,662,6.434,663,5.695,664,4.234,665,5.695,666,4.234,667,3.822,668,4.234,669,2.376,670,3.687,671,2.149,672,2.842]],["title/components/ComponentBarComponent.html",[0,0.076,106,0.881]],["body/components/ComponentBarComponent.html",[0,0.147,1,0.702,2,1.247,3,0.177,4,0.205,5,0.837,6,0.837,7,0.837,8,0.837,9,0.164,11,1.122,12,1.564,13,0.702,14,2.037,15,1.771,16,1.203,18,1.203,20,0.391,21,0.563,22,1.71,23,0.503,24,0.759,27,0.659,28,0.014,29,0.654,30,0.421,31,0.325,32,0.191,33,0.099,75,0.974,83,0.63,84,1.203,85,1.203,86,0.837,87,1.54,88,0.837,90,0.664,91,0.837,92,0.728,93,0.781,94,0.837,95,0.728,96,0.586,97,0.409,98,0.837,99,0.728,100,0.837,101,0.728,102,0.702,103,1.409,104,0.728,105,0.837,106,1.339,107,0.837,108,0.728,109,0.728,110,0.837,111,0.837,112,0.728,113,0.837,114,0.728,115,1.487,116,0.837,117,0.728,118,1.409,119,0.702,120,0.837,121,0.702,122,0.702,123,0.837,124,0.728,125,0.837,126,0.728,127,1.046,128,0.837,129,0.728,130,0.728,131,0.837,132,0.728,133,0.837,134,0.702,135,0.754,136,0.837,137,0.728,138,0.702,139,0.728,140,0.751,141,0.837,142,0.678,143,1.409,144,0.702,145,0.974,146,0.728,147,0.837,148,0.702,149,0.728,150,0.781,151,0.728,152,0.837,153,0.702,154,0.728,155,0.702,156,0.837,157,0.837,158,0.006,159,0.008,160,0.006,164,0.874,183,0.914,184,0.88,186,0.688,189,1.1,221,2.139,258,1.336,284,1.109,433,3.949,453,2.283,469,2.456,618,1.595,656,3.029,671,1.726,673,6.193,674,5.587,675,2.962,676,3.075,677,5.724,678,4.889,679,5.724,680,4.889,681,4.889,682,2.962,683,4.889,684,4.889,685,3.401,686,1.908,687,3.401,688,3.401,689,3.401,690,3.401,691,3.401,692,3.401,693,3.401,694,3.401,695,3.401,696,3.401,697,3.401,698,3.401,699,4.889,700,3.401,701,4.257,702,6.63,703,5.773,704,3.533,705,3.79,706,2.962,707,4.889,708,2.962,709,3.401,710,2.962,711,3.53,712,3.401,713,3.401,714,4.257,715,4.201,716,2.962,717,2.898,718,2.962,719,2.962,720,1.812,721,2.456,722,2.962,723,3.841,724,2.171,725,2.139,726,2.672,727,2.962,728,3.176,729,2.743,730,3.282,731,3.841,732,3.709,733,3.401,734,3.401,735,3.841,736,3.282,737,2.962,738,2.672,739,2.962,740,2.962,741,2.962,742,2.016,743,2.672]],["title/components/ComponentSettingsComponent.html",[0,0.076,108,0.881]],["body/components/ComponentSettingsComponent.html",[0,0.144,1,0.659,2,0.93,3,0.166,4,0.192,5,0.785,6,0.785,7,0.785,8,0.785,9,0.154,11,1.072,12,1.509,13,0.659,14,2.026,15,1.761,16,1.149,18,1.149,20,0.367,21,0.537,22,1.66,23,0.472,24,0.816,27,0.699,28,0.014,29,1.168,30,0.582,31,0.305,32,0.179,33,0.093,43,2.37,45,3.601,70,2.108,75,0.93,83,0.592,84,1.149,85,1.149,86,0.785,87,1.495,88,0.785,90,0.677,91,0.785,92,0.683,93,0.732,94,0.785,95,0.683,96,1.113,97,0.384,98,0.785,99,0.683,100,0.785,101,0.683,102,0.659,103,1.359,104,0.683,105,0.785,106,0.683,107,0.785,108,1.299,109,0.683,110,0.785,111,0.785,112,0.683,113,0.785,114,0.683,115,1.444,116,0.785,117,0.683,118,1.359,119,0.659,120,0.785,121,0.659,122,0.659,123,0.785,124,0.683,125,0.785,126,0.683,127,0.999,128,0.785,129,0.683,130,0.683,131,0.785,132,0.683,133,0.785,134,0.659,135,0.707,136,0.785,137,0.683,138,0.659,139,0.683,140,0.718,141,0.785,142,0.636,143,1.359,144,0.659,145,0.93,146,0.683,147,0.785,148,0.659,149,0.683,150,0.732,151,0.683,152,0.785,153,0.659,154,0.683,155,0.659,156,0.785,157,0.785,158,0.005,159,0.008,160,0.005,164,0.834,183,0.97,184,0.934,186,0.812,189,0.613,215,1.579,243,1.418,258,1.954,261,3.472,266,1.232,267,0.999,274,2.055,278,1.892,279,1.791,284,1.041,310,3.157,316,4.078,318,2.142,320,1.701,322,1.791,327,2.142,328,2.779,421,2.488,424,2.697,429,2.507,430,4.337,431,3.668,433,3.888,437,4.339,446,3.831,469,2.304,481,2.304,482,2.304,485,4.532,495,3.472,498,1.546,508,2.937,509,3.134,539,2.262,568,1.791,676,2.007,682,2.779,744,6.544,745,5.904,746,4.337,747,4.066,748,3.668,749,4.066,750,4.669,751,4.066,752,3.192,753,4.667,754,3.192,755,3.668,756,3.192,757,4.066,758,3.192,759,5.521,760,3.192,761,2.142,762,3.192,763,3.192,764,2.488,765,2.779,766,3.472,767,3.192,768,3.192,769,2.779,770,2.779,771,3.192,772,3.192,773,3.192,774,3.192,775,3.192,776,3.192,777,2.507,778,3.371,779,3.192,780,1.791,781,3.371,782,3.134,783,3.134,784,3.192]],["title/modules/CoreModule.html",[354,1.5,367,2.764]],["body/modules/CoreModule.html",[3,0.28,4,0.323,9,0.258,28,0.013,30,0.709,31,0.512,32,0.301,33,0.157,83,0.995,158,0.009,159,0.011,160,0.009,259,4.421,310,3.356,345,4.421,352,3.604,354,1.956,356,2.384,357,2.602,358,3.013,359,2.602,360,4.043,361,2.488,367,5.587,373,3.724,374,2.031,375,2.488,377,2.725,381,3.369,432,4.956,433,4.199,598,3.183,600,2.725,785,4.676,786,4.676,787,5.37,788,5.37,789,4.676,790,4.676,791,6.639,792,6.639,793,5.37,794,4.219,795,2.384,796,2.725,797,6.639,798,5.37,799,5.37,800,5.37]],["title/classes/Detail.html",[33,0.12,169,2.311]],["body/classes/Detail.html",[3,0.291,4,0.337,9,0.269,20,0.644,21,0.784,23,0.827,24,0.808,27,0.644,28,0.014,32,0.314,33,0.163,90,0.682,158,0.009,159,0.011,160,0.009,162,2.983,164,1.217,169,3.821,183,1.088,184,1.047,186,0.819,189,1.468,243,2.229,801,4.874,802,6.391,803,6.81,804,6.81,805,7.637,806,7.34,807,6.81,808,6.81,809,4.616,810,4.118,811,6.81,812,5.598,813,2.594,814,6.81,815,5.598,816,5.598]],["title/pipes/FilterPipe.html",[817,1.828,818,2.195]],["body/pipes/FilterPipe.html",[0,0.073,3,0.204,4,0.236,9,0.189,11,1.604,13,0.809,21,0.451,24,0.431,27,0.451,28,0.014,30,0.465,31,0.374,32,0.392,33,0.204,90,0.742,97,0.907,158,0.006,159,0.009,160,0.006,183,0.626,184,0.602,186,0.471,189,0.753,215,2.254,243,2.501,267,1.546,271,2.431,274,2.364,321,1.669,463,1.74,478,2.546,580,2.199,592,2.301,618,2.28,634,2.618,638,3.202,656,2.301,686,3.738,764,3.295,809,2.465,810,3.469,817,3.208,818,2.879,819,2.465,820,2.465,821,3.626,822,2.465,823,4.85,824,4.692,825,3.92,826,4.85,827,4.396,828,2.879,829,2.631,830,2.631,831,2.631,832,2.879,833,2.631,834,2.631,835,2.631,836,3.202,837,2.631,838,2.631,839,2.631,840,2.879,841,2.631,842,3.626,843,3.626,844,2.631,845,3.626,846,3.626,847,3.626,848,2.631,849,3.626,850,2.631,851,2.631,852,3.888,853,2.631,854,2.631,855,2.631,856,2.631,857,3.888,858,2.631,859,2.631,860,2.631,861,2.631,862,2.631,863,2.631,864,2.323,865,2.631,866,2.631,867,2.631,868,2.465,869,2.631,870,2.631,871,2.631,872,2.631]],["title/classes/Helper.html",[33,0.12,873,2.311]],["body/classes/Helper.html",[3,0.216,4,0.249,9,0.199,20,0.477,21,0.646,24,0.809,27,0.846,28,0.014,30,0.588,32,0.232,33,0.121,90,0.736,158,0.007,159,0.009,160,0.007,162,2.209,183,1.174,184,1.129,186,0.765,189,1.223,195,4.091,210,4.272,212,2.104,215,1.402,243,2.282,266,1.094,277,1.454,463,2.492,498,3.305,499,4.41,598,2.457,613,3.531,618,1.831,642,5.915,686,2.326,764,2.991,809,3.531,813,3.663,873,3.149,874,3.61,875,5.614,876,5.614,877,5.614,878,5.614,879,4.888,880,5.614,881,5.614,882,4.596,883,4.579,884,4.146,885,5.614,886,6.365,887,6.365,888,4.146,889,5.614,890,4.146,891,5.543,892,5.614,893,4.146,894,5.614,895,7.129,896,4.146,897,5.614,898,4.146,899,4.146,900,5.543,901,4.146,902,4.146,903,4.146,904,4.146,905,4.146,906,4.146,907,4.146,908,4.146,909,5.614,910,5.614,911,2.104,912,4.146,913,4.888,914,6.822,915,4.146,916,4.888,917,5.614,918,4.146,919,4.888,920,4.053,921,4.146,922,4.146,923,4.146,924,4.146,925,4.888,926,4.146,927,2.993,928,4.146,929,4.146,930,4.146,931,4.146,932,4.146,933,4.41,934,4.146]],["title/pipes/IsAvailable.html",[634,1.996,817,1.828]],["body/pipes/IsAvailable.html",[0,0.114,3,0.203,4,0.234,9,0.187,11,1.601,13,0.804,21,0.448,24,0.429,27,0.448,28,0.014,30,0.463,31,0.372,32,0.391,33,0.204,90,0.741,97,0.906,158,0.006,159,0.009,160,0.006,183,0.622,184,0.599,186,0.468,189,1.184,215,2.248,243,2.499,267,1.543,271,2.423,274,2.359,321,1.659,463,2.736,478,2.54,580,2.185,592,2.291,618,2.275,634,3.22,638,3.189,656,2.291,686,3.729,764,3.284,810,3.457,817,3.202,818,2.076,819,2.45,820,2.45,821,2.615,822,2.45,823,4.841,824,4.136,826,4.841,827,4.386,828,2.867,829,2.615,830,2.615,831,2.615,832,2.867,833,2.615,834,2.615,835,2.615,836,3.939,837,2.615,838,2.615,839,2.615,840,2.867,841,2.615,842,3.611,843,3.611,844,2.615,845,3.611,846,3.611,847,3.611,848,2.615,849,3.611,850,2.615,851,2.615,852,3.876,853,2.615,854,2.615,855,2.615,856,2.615,857,3.876,858,2.615,859,2.615,860,2.615,861,2.615,862,2.615,863,2.615,864,2.309,865,2.615,866,2.615,867,2.615,868,2.45,869,2.615,870,2.615,871,2.615,872,2.615,935,3.896]],["title/components/LoadingSpinnerComponent.html",[0,0.076,109,0.881]],["body/components/LoadingSpinnerComponent.html",[0,0.125,1,0.74,2,1.012,3,0.187,4,0.216,5,0.883,6,0.883,7,0.883,8,0.883,9,0.172,11,1.165,12,1.611,13,0.74,14,2.045,15,1.778,16,1.25,18,1.25,20,0.413,21,0.584,22,1.752,23,0.871,24,0.649,27,0.413,28,0.014,29,0.689,30,0.309,31,0.342,32,0.201,33,0.105,38,4.421,75,1.012,83,0.665,84,1.25,85,1.25,86,0.883,87,1.578,88,0.883,90,0.509,91,0.883,92,0.767,93,0.823,94,0.883,95,0.767,96,0.618,97,0.431,98,0.883,99,0.767,100,0.883,101,0.767,102,0.74,103,1.451,104,0.767,105,0.883,106,0.767,107,0.883,108,0.767,109,1.371,110,1.872,111,0.883,112,0.767,113,0.883,114,0.767,115,1.523,116,0.883,117,0.767,118,1.451,119,0.74,120,0.883,121,0.74,122,0.74,123,0.883,124,0.767,125,0.883,126,0.767,127,1.086,128,0.883,129,0.767,130,0.767,131,0.883,132,0.767,133,0.883,134,0.74,135,0.795,136,0.883,137,0.767,138,0.74,139,0.767,140,0.78,141,0.883,142,0.714,143,1.451,144,0.74,145,1.012,146,0.767,147,0.883,148,0.74,149,0.767,150,0.823,151,0.767,152,0.883,153,0.74,154,0.767,155,0.74,156,0.883,157,0.883,158,0.006,159,0.008,160,0.006,186,0.431,189,0.976,325,3.989,375,2.353,453,2.407,618,1.923,669,2.849,671,2.577,672,2.407,704,1.911,705,1.911,724,2.254,729,2.012,736,2.407,742,3.009,813,3.256,822,4.418,936,5.582,937,5.036,938,3.123,939,7.505,940,5.895,941,5.078,942,5.078,943,3.586,944,3.666,945,3.586,946,3.586,947,3.408,948,3.586,949,2.589,950,2.589,951,3.586,952,3.586,953,4.256,954,3.123,955,2.255,956,3.123,957,2.589,958,5.978,959,7.609,960,6.411,961,6.411,962,5.078,963,5.078,964,3.586,965,7.379,966,5.078,967,3.586,968,5.078,969,3.586,970,5.078,971,3.586,972,5.078,973,5.078,974,5.078,975,5.895,976,5.078,977,5.895,978,2.817]],["title/injectables/LogService.html",[259,2.311,556,1.558]],["body/injectables/LogService.html",[3,0.148,4,0.171,9,0.137,20,0.327,21,0.493,23,0.42,24,0.841,27,0.854,28,0.014,29,0.991,30,0.621,31,0.271,32,0.159,33,0.083,70,2.352,90,0.617,96,0.888,97,0.832,158,0.005,159,0.007,160,0.008,161,3.88,164,0.766,165,6.162,166,4.999,167,4.999,168,4.491,169,4.163,170,4.999,171,4.491,183,0.984,184,0.882,185,2.477,186,0.867,187,4.145,189,0.991,212,3.51,243,2.224,253,3.51,258,1.683,259,2.405,265,3.403,266,1.515,267,1.228,268,3.596,271,1.685,277,0.998,278,1.686,279,1.596,284,0.928,290,1.909,294,4.606,296,3.095,321,1.211,333,2.176,374,1.076,411,1.318,424,1.263,468,2.877,478,2.703,491,2.235,511,3.367,556,1.621,557,1.516,563,3.456,564,3.462,569,2.054,570,4.134,571,3.282,592,1.211,593,2.877,594,3.462,595,2.541,596,2.877,598,1.686,599,2.054,600,1.444,606,2.477,613,3.244,616,2.054,781,4.145,795,1.263,796,1.444,817,1.263,864,1.686,873,2.405,883,1.909,911,2.914,979,2.477,980,5.158,981,4.287,982,4.491,983,5.158,984,3.854,985,3.282,986,5.158,987,4.287,988,5.742,989,5.742,990,5.742,991,5.742,992,4.287,993,4.287,994,4.287,995,4.287,996,2.845,997,2.845,998,2.845,999,4.287,1000,4.287,1001,4.287,1002,2.845,1003,2.845,1004,2.845,1005,3.095,1006,2.845,1007,4.287,1008,2.845,1009,4.287,1010,2.845,1011,3.095,1012,2.845,1013,4.287,1014,4.491,1015,2.845,1016,4.287,1017,2.176,1018,2.877,1019,4.287,1020,4.287,1021,2.845,1022,2.054,1023,2.477,1024,1.909,1025,2.477,1026,4.287,1027,2.477,1028,2.845,1029,4.511,1030,1.516,1031,2.845,1032,2.845,1033,2.845,1034,4.491,1035,2.845,1036,5.158,1037,5.158,1038,5.158,1039,5.158,1040,5.158,1041,5.158,1042,5.158,1043,5.158,1044,2.845,1045,2.845,1046,5.742,1047,5.742,1048,4.145,1049,4.287,1050,2.477,1051,2.477,1052,2.477,1053,2.235,1054,1.909,1055,4.287,1056,2.845,1057,2.477,1058,2.477,1059,2.845,1060,2.845,1061,2.845,1062,2.845,1063,2.845,1064,2.845,1065,2.845,1066,2.845,1067,2.845,1068,2.845,1069,3.732,1070,2.845,1071,2.845,1072,2.477,1073,2.845,1074,2.845,1075,2.845,1076,3.732,1077,2.845,1078,2.845,1079,2.845,1080,2.477]],["title/components/LoginComponent.html",[0,0.076,112,0.881]],["body/components/LoginComponent.html",[0,0.118,1,0.64,2,0.911,3,0.161,4,0.187,5,0.763,6,0.763,7,0.763,8,0.763,9,0.149,13,0.64,14,2.022,15,1.757,16,1.125,18,1.125,20,0.526,21,0.526,23,0.458,24,0.797,27,0.69,28,0.014,29,1.152,30,0.516,31,0.296,32,0.174,33,0.091,43,1.574,75,0.911,83,0.575,84,1.125,85,1.125,86,0.763,87,1.474,88,0.763,90,0.67,91,0.763,92,0.663,93,0.712,94,0.763,95,0.663,96,0.534,97,0.55,98,0.763,99,0.663,100,0.763,101,0.663,102,0.64,103,1.336,104,0.663,105,0.763,106,0.663,107,0.763,108,0.663,109,0.663,110,0.763,111,0.763,112,1.282,113,0.763,114,0.663,115,1.424,116,0.763,117,0.663,118,1.336,119,0.64,120,0.763,121,0.64,122,0.64,123,0.763,124,0.663,125,0.763,126,0.663,127,0.978,128,0.763,129,0.663,130,0.663,131,0.763,132,0.663,133,0.763,134,0.64,135,0.687,136,0.763,137,0.663,138,0.64,139,0.663,140,0.703,141,0.763,142,0.618,143,1.336,144,0.64,145,0.911,146,0.663,147,0.763,148,0.64,149,0.663,150,0.712,151,0.663,152,0.763,153,0.64,154,0.663,155,0.64,156,0.763,157,0.763,158,0.005,159,0.007,160,0.005,164,0.817,183,0.957,184,0.921,186,0.804,189,1.328,217,1.74,258,1.746,266,1.206,267,0.978,274,1.049,284,1.011,307,5.122,316,4.022,318,2.081,320,1.652,327,2.081,341,4.326,344,2.7,345,4.132,346,2.436,347,4.613,352,2.081,353,2.436,424,2.029,491,2.436,496,3.92,500,2.239,553,2.239,618,2.084,669,2.565,671,2.756,672,3.068,703,2.7,704,1.652,705,1.652,720,2.436,724,2.029,725,1.95,728,3.242,729,3.361,735,3.591,736,3.068,742,1.838,748,3.591,755,3.591,780,2.565,783,4.761,868,1.95,879,3.981,911,1.574,947,3.644,949,2.239,950,3.3,953,3.3,955,1.95,978,2.436,1054,2.081,1081,2.7,1082,5.217,1083,5.43,1084,4.572,1085,5.43,1086,6.389,1087,5.217,1088,4.572,1089,4.572,1090,3.101,1091,4.572,1092,3.101,1093,3.981,1094,3.101,1095,3.101,1096,4.572,1097,3.101,1098,3.101,1099,2.7,1100,3.101,1101,3.101,1102,4.572,1103,3.101,1104,3.101,1105,2.7,1106,3.101,1107,3.101,1108,3.101,1109,2.7,1110,3.101,1111,3.101,1112,3.101,1113,3.101,1114,3.101,1115,3.101,1116,3.101,1117,5.217,1118,4.572,1119,3.981,1120,6.684,1121,3.101,1122,2.7,1123,2.7,1124,2.7,1125,2.7,1126,2.436,1127,3.101,1128,3.591,1129,3.101,1130,3.101,1131,2.239,1132,3.101,1133,2.7,1134,2.875,1135,4.022,1136,2.875,1137,3.101,1138,2.7,1139,4.572,1140,3.101,1141,3.101,1142,3.101,1143,3.101,1144,3.101,1145,3.101,1146,3.101,1147,3.101,1148,3.101]],["title/injectables/LoginService.html",[345,2.311,556,1.558]],["body/injectables/LoginService.html",[0,0.056,3,0.158,4,0.182,9,0.146,20,0.348,21,0.517,23,0.447,24,0.871,27,0.843,28,0.014,29,1.216,30,0.648,31,0.289,32,0.17,33,0.088,56,1.613,70,1.464,90,0.687,97,0.847,119,0.625,121,0.625,122,1.223,158,0.005,159,0.007,160,0.005,164,0.802,183,1.095,184,1.054,186,0.847,189,1.216,243,1.92,258,2.196,266,1.412,267,1.145,274,2.003,278,1.794,279,1.698,283,1.698,284,0.987,310,2.921,321,1.289,333,3.005,341,4.566,345,2.519,347,4.566,352,2.032,411,2.081,424,3.194,468,3.593,478,1.635,496,3.242,498,1.467,500,2.185,556,1.698,557,1.613,563,3.322,564,3.014,569,2.185,570,4.245,580,1.698,593,3.014,594,3.593,595,2.661,596,3.014,598,1.794,618,0.987,780,1.698,783,4.728,789,2.636,795,1.344,796,1.536,809,1.904,873,1.698,913,2.636,984,3.593,1011,3.242,1022,2.185,1024,2.032,1029,3.527,1048,3.242,1050,3.91,1093,5.156,1099,3.91,1149,2.636,1150,5.353,1151,5.353,1152,5.353,1153,4.661,1154,4.49,1155,4.49,1156,4.49,1157,5.922,1158,5.922,1159,4.49,1160,5.922,1161,4.49,1162,4.49,1163,5.922,1164,4.205,1165,4.652,1166,4.49,1167,4.49,1168,3.027,1169,6.859,1170,4.49,1171,3.027,1172,4.49,1173,3.027,1174,3.027,1175,3.027,1176,4.49,1177,3.027,1178,3.027,1179,4.49,1180,3.027,1181,4.49,1182,3.027,1183,3.027,1184,3.027,1185,3.91,1186,3.027,1187,3.027,1188,3.027,1189,4.49,1190,3.027,1191,4.49,1192,3.027,1193,3.027,1194,1.536,1195,2.378,1196,3.366,1197,4.205,1198,1.794,1199,2.032,1200,2.378,1201,2.185,1202,2.636,1203,5.922,1204,3.027,1205,3.027,1206,3.027,1207,4.49,1208,4.49,1209,4.49,1210,4.49,1211,3.027,1212,3.027,1213,3.91,1214,3.527,1215,3.027,1216,3.027,1217,3.027,1218,3.027,1219,2.032,1220,3.027,1221,3.027,1222,3.027,1223,3.027,1224,3.027,1225,4.49,1226,3.027,1227,3.027,1228,3.027,1229,3.027,1230,3.027,1231,2.661,1232,2.636,1233,4.49,1234,4.49,1235,4.49,1236,4.49,1237,3.527,1238,2.185,1239,3.527,1240,2.636,1241,3.027,1242,2.378,1243,3.027,1244,3.027,1245,3.027,1246,2.636,1247,3.027,1248,4.49,1249,4.49,1250,3.027,1251,3.027,1252,2.636,1253,2.636,1254,3.027,1255,3.027,1256,3.027,1257,3.027,1258,2.636,1259,3.027,1260,3.027,1261,3.027]],["title/modules/MaterialModule.html",[354,1.5,1262,2.764]],["body/modules/MaterialModule.html",[3,0.316,4,0.365,9,0.292,28,0.013,30,0.616,31,0.579,32,0.34,33,0.177,158,0.01,159,0.012,160,0.01,356,2.695,361,2.813,377,3.081,381,3.628,470,4.383,1262,4.798,1263,6.071,1264,7.599,1265,7.599,1266,7.599,1267,8.002,1268,7.599,1269,7.599]],["title/components/ModalConfirmComponent.html",[0,0.076,114,0.881]],["body/components/ModalConfirmComponent.html",[0,0.124,1,0.722,2,0.994,3,0.182,4,0.21,5,0.861,6,0.861,7,0.861,8,0.861,9,0.168,11,1.145,12,1.589,13,0.722,14,2.041,15,1.774,16,1.228,18,1.228,20,0.403,21,0.574,22,1.732,23,0.517,24,0.833,27,0.73,28,0.014,29,1.378,30,0.501,31,0.334,32,0.196,33,0.102,70,1.897,74,3.76,75,0.994,83,0.649,84,1.228,85,1.228,86,0.861,87,1.56,88,0.861,90,0.583,91,0.861,92,0.748,93,0.803,94,0.861,95,0.748,96,0.603,97,0.421,98,0.861,99,0.748,100,0.861,101,0.748,102,0.722,103,1.431,104,0.748,105,0.861,106,0.748,107,0.861,108,0.748,109,0.748,110,0.861,111,0.861,112,0.748,113,0.861,114,1.356,115,1.838,116,0.861,117,0.748,118,1.431,119,0.722,120,0.861,121,0.722,122,0.722,123,0.861,124,0.748,125,0.861,126,0.748,127,1.067,128,0.861,129,0.748,130,0.748,131,0.861,132,0.748,133,0.861,134,0.722,135,0.775,136,0.861,137,0.748,138,0.722,139,0.748,140,0.767,141,0.861,142,0.697,143,1.431,144,0.722,145,0.994,146,0.748,147,0.861,148,0.722,149,0.748,150,0.803,151,0.748,152,0.861,153,0.722,154,0.748,155,0.722,156,0.861,157,0.861,158,0.006,159,0.008,160,0.006,164,0.892,183,0.559,184,0.538,186,0.838,189,0.959,258,2.251,266,1.317,267,1.067,277,1.228,780,2.799,813,3.106,1017,3.842,1194,1.776,1231,3.758,1270,4.817,1271,5.53,1272,3.047,1273,5.08,1274,5.815,1275,4.99,1276,3.903,1277,3.903,1278,3.903,1279,4.677,1280,4.577,1281,2.526,1282,4.99,1283,3.602,1284,3.499,1285,3.499,1286,3.499,1287,3.499,1288,3.499,1289,3.499,1290,3.499,1291,3.499,1292,2.526,1293,2.526,1294,2.749,1295,2.526,1296,2.526,1297,2.526,1298,3.047,1299,4.199,1300,2.526,1301,2.526,1302,2.526]],["title/components/ModalInfoComponent.html",[0,0.076,117,0.881]],["body/components/ModalInfoComponent.html",[0,0.123,1,0.704,2,0.976,3,0.298,4,0.205,5,0.84,6,0.84,7,0.84,8,0.84,9,0.164,11,1.125,12,1.567,13,0.704,14,2.037,15,1.771,16,1.206,18,1.206,20,0.393,21,0.564,22,1.713,23,0.504,24,0.838,27,0.721,28,0.014,29,1.368,30,0.494,31,0.326,32,0.191,33,0.1,70,1.87,74,3.724,75,0.976,83,0.632,84,1.206,85,1.206,86,0.84,87,1.542,88,0.84,90,0.628,91,0.84,92,0.73,93,0.783,94,0.84,95,0.73,96,0.588,97,0.41,98,0.84,99,0.73,100,0.84,101,0.73,102,0.704,103,1.411,104,0.73,105,0.84,106,0.73,107,0.84,108,0.73,109,0.73,110,0.84,111,0.84,112,0.73,113,0.84,114,0.73,115,1.83,116,0.84,117,1.341,118,1.411,119,0.704,120,0.84,121,0.704,122,0.704,123,0.84,124,0.73,125,0.84,126,0.73,127,1.048,128,0.84,129,0.73,130,0.73,131,0.84,132,0.73,133,0.84,134,0.704,135,0.756,136,0.84,137,0.73,138,0.704,139,0.73,140,0.753,141,0.84,142,0.68,143,1.411,144,0.704,145,0.976,146,0.73,147,0.84,148,0.704,149,0.73,150,0.783,151,0.73,152,0.84,153,0.704,154,0.73,155,0.704,156,0.84,157,0.84,158,0.006,159,0.008,160,0.006,164,0.876,183,0.783,184,0.753,186,0.876,189,1.276,258,2.255,266,1.293,267,1.048,277,1.197,284,1.113,780,2.749,813,3.076,944,2.464,1017,3.821,1194,1.732,1231,3.934,1270,4.842,1273,4.638,1276,3.849,1277,3.849,1278,3.849,1279,4.638,1280,4.525,1281,2.464,1283,4.525,1292,2.464,1293,2.464,1295,2.464,1296,2.464,1297,2.464,1299,4.14,1300,2.464,1301,2.464,1302,2.464,1303,6.049,1304,2.464,1305,4.505,1306,3.85,1307,4.901,1308,3.412,1309,4.267,1310,3.412,1311,3.412,1312,3.412,1313,3.412,1314,2.971,1315,3.412,1316,2.681,1317,2.971,1318,2.971,1319,2.971]],["title/components/ModalInputComponent.html",[0,0.076,119,0.85]],["body/components/ModalInputComponent.html",[0,0.123,1,0.713,2,0.985,3,0.18,4,0.208,5,0.85,6,0.85,7,0.85,8,0.85,9,0.166,11,1.134,12,1.577,13,0.713,14,2.039,15,1.773,16,1.216,18,1.216,20,0.397,21,0.569,22,1.722,23,0.51,24,0.83,27,0.725,28,0.014,29,1.373,30,0.497,31,0.33,32,0.194,33,0.101,70,1.883,74,3.741,75,0.985,83,0.64,84,1.216,85,1.216,86,0.85,87,1.551,88,0.85,90,0.631,91,0.85,92,0.739,93,0.792,94,0.85,95,0.739,96,0.595,97,0.415,98,0.85,99,0.739,100,0.85,101,0.739,102,0.713,103,1.421,104,0.739,105,0.85,106,0.739,107,0.85,108,0.739,109,0.739,110,0.85,111,0.85,112,0.739,113,0.85,114,0.739,115,1.834,116,0.85,117,0.739,118,1.421,119,1.301,120,0.85,121,0.713,122,0.713,123,0.85,124,0.739,125,0.85,126,0.739,127,1.057,128,0.85,129,0.739,130,0.739,131,0.85,132,0.739,133,0.85,134,0.713,135,0.765,136,0.85,137,0.739,138,0.713,139,0.739,140,0.76,141,0.85,142,0.688,143,1.421,144,0.713,145,0.985,146,0.739,147,0.85,148,0.713,149,0.739,150,0.792,151,0.739,152,0.85,153,0.713,154,0.739,155,0.713,156,0.85,157,0.85,158,0.006,159,0.008,160,0.006,164,0.883,183,0.789,184,0.76,186,0.859,189,1.282,258,2.249,266,1.304,267,1.057,277,1.212,780,2.773,813,3.09,944,4.168,1017,3.831,1194,1.753,1199,5.127,1231,3.735,1270,4.804,1273,4.657,1276,3.875,1277,3.875,1278,3.875,1279,4.657,1280,4.55,1281,2.493,1283,3.569,1292,2.493,1293,2.493,1294,2.713,1295,2.493,1296,2.493,1297,2.493,1299,4.168,1300,2.493,1301,2.493,1302,2.493,1309,4.304,1318,3.007,1319,3.007,1320,3.007,1321,5.773,1322,4.943,1323,4.943,1324,3.453,1325,3.453,1326,3.453,1327,3.453,1328,3.453,1329,3.453,1330,3.453,1331,3.453]],["title/interfaces/ModalInterface.html",[1196,2.59,1198,2.441]],["body/interfaces/ModalInterface.html",[3,0.316,4,0.365,9,0.292,20,0.699,28,0.013,30,0.523,32,0.34,74,3.406,158,0.01,159,0.012,160,0.01,164,1.277,184,1.099,186,0.914,189,1.374,277,2.13,595,4.65,813,2.813,1017,3.982,1196,4.496,1198,3.598,1270,3.818,1276,4.075,1277,4.075,1278,4.075,1332,6.071,1333,5.286,1334,7.149]],["title/components/ModalServerErrorComponent.html",[0,0.076,121,0.85]],["body/components/ModalServerErrorComponent.html",[0,0.121,1,0.681,2,0.953,3,0.172,4,0.198,5,0.812,6,0.812,7,0.812,8,0.812,9,0.159,11,1.097,12,1.537,13,0.681,14,2.032,15,1.766,16,1.177,18,1.177,20,0.38,21,0.55,22,1.686,23,0.487,24,0.822,27,0.71,28,0.014,29,1.354,30,0.485,31,0.315,32,0.185,33,0.096,70,1.835,74,3.675,75,0.953,83,0.611,84,1.177,85,1.177,86,0.812,87,1.518,88,0.812,90,0.564,91,0.812,92,0.706,93,0.757,94,0.812,95,0.706,96,0.568,97,0.397,98,0.812,99,0.706,100,0.812,101,0.706,102,0.681,103,1.384,104,0.706,105,0.812,106,0.706,107,0.812,108,0.706,109,0.706,110,0.812,111,0.812,112,0.706,113,0.812,114,0.706,115,1.818,116,0.812,117,0.706,118,1.384,119,0.681,120,0.812,121,1.274,122,1.702,123,0.812,124,0.706,125,0.812,126,0.706,127,1.023,128,0.812,129,0.706,130,0.706,131,0.812,132,0.706,133,0.812,134,0.681,135,0.731,136,0.812,137,0.706,138,0.681,139,0.706,140,0.735,141,0.812,142,0.657,143,1.384,144,0.681,145,0.953,146,0.706,147,0.812,148,0.681,149,0.706,150,0.757,151,0.706,152,0.812,153,0.681,154,0.706,155,0.681,156,0.812,157,0.812,158,0.005,159,0.008,160,0.005,164,0.855,183,0.527,184,0.507,186,0.821,189,0.919,212,2.427,215,1.617,217,2.683,219,2.548,258,2.239,266,1.262,267,1.023,277,1.157,380,3.21,493,2.834,498,2.317,780,2.683,781,3.453,813,3.035,1017,3.792,1194,1.674,1201,5.464,1231,3.657,1270,4.759,1273,4.585,1276,3.776,1277,3.776,1278,3.776,1279,4.141,1280,4.455,1281,2.381,1283,3.453,1292,2.381,1293,2.381,1294,2.591,1295,2.381,1296,2.381,1297,2.381,1298,2.872,1299,4.062,1300,2.381,1301,2.381,1302,2.381,1335,2.872,1336,5.626,1337,4.782,1338,4.782,1339,3.298,1340,3.298,1341,3.298,1342,3.298,1343,3.298,1344,3.298,1345,3.298,1346,3.298,1347,3.757,1348,3.757,1349,4.164,1350,3.757,1351,4.782,1352,4.782,1353,4.782]],["title/components/NavbarComponent.html",[0,0.076,124,0.881]],["body/components/NavbarComponent.html",[0,0.123,1,0.706,2,0.978,3,0.178,4,0.206,5,0.842,6,0.842,7,0.842,8,0.842,9,0.164,11,1.126,12,1.569,13,0.706,14,2.038,15,1.771,16,1.208,18,1.208,20,0.565,21,0.565,22,1.714,23,0.505,24,0.802,27,0.565,28,0.014,29,1.103,30,0.495,31,0.326,32,0.192,33,0.1,34,4.929,69,3.856,75,1.25,83,0.634,84,1.208,85,1.208,86,0.842,87,1.544,88,0.842,90,0.575,91,0.842,92,0.731,93,0.785,94,0.842,95,0.731,96,0.589,97,0.411,98,0.842,99,0.731,100,0.842,101,0.731,102,0.706,103,1.413,104,0.731,105,0.842,106,0.731,107,0.842,108,0.731,109,0.731,110,0.842,111,0.842,112,0.731,113,0.842,114,0.731,115,1.491,116,0.842,117,0.731,118,1.413,119,0.706,120,0.842,121,0.706,122,0.706,123,0.842,124,1.342,125,0.842,126,0.731,127,1.05,128,0.842,129,0.731,130,0.731,131,0.842,132,0.731,133,0.842,134,0.706,135,0.758,136,0.842,137,0.731,138,0.706,139,0.731,140,0.754,141,0.842,142,0.681,143,1.413,144,0.706,145,1.25,146,0.731,147,0.842,148,0.706,149,0.731,150,0.785,151,0.731,152,0.842,153,0.706,154,0.731,155,0.706,156,0.842,157,0.842,158,0.006,159,0.008,160,0.006,164,0.877,183,0.546,184,0.526,186,0.69,189,0.657,258,1.341,266,1.655,267,1.342,284,1.115,345,4.163,353,2.686,411,1.585,418,3.856,419,3.294,421,2.615,618,1.601,671,1.736,701,2.978,704,3.059,705,3.685,706,2.978,708,2.978,714,6.462,715,2.295,716,2.978,717,2.909,718,2.978,720,1.822,721,2.469,724,2.549,725,3.087,726,3.856,728,1.736,730,2.295,731,2.686,795,1.518,796,1.736,953,2.469,1076,2.978,1087,6.021,1109,2.978,1131,2.469,1134,2.151,1135,2.295,1354,2.978,1355,5.742,1356,4.908,1357,5.785,1358,6.644,1359,5.742,1360,4.999,1361,3.42,1362,4.908,1363,3.42,1364,3.42,1365,4.908,1366,3.42,1367,3.42,1368,4.908,1369,3.42,1370,3.42,1371,4.908,1372,3.42,1373,3.42,1374,3.42,1375,3.42,1376,3.42,1377,3.544,1378,4.274,1379,4.908,1380,4.274,1381,3.42,1382,2.978,1383,2.295,1384,3.42,1385,3.42,1386,3.42,1387,3.42,1388,3.42,1389,3.42,1390,4.908,1391,4.908,1392,2.978,1393,3.42,1394,3.42,1395,4.908,1396,3.42,1397,3.42,1398,4.274,1399,3.42,1400,5.742,1401,3.42,1402,3.42,1403,3.42,1404,3.42,1405,3.42,1406,3.42,1407,3.42]],["title/components/NoticeBoardComponent.html",[0,0.076,126,0.881]],["body/components/NoticeBoardComponent.html",[0,0.129,1,0.811,2,1.078,3,0.205,4,0.236,5,0.967,6,0.967,7,0.967,8,0.967,9,0.189,11,1.242,12,1.692,13,0.811,14,2.059,15,1.789,16,1.332,18,1.332,20,0.452,21,0.623,22,1.823,23,0.581,24,0.796,27,0.452,28,0.014,29,0.755,30,0.533,31,0.375,32,0.22,33,0.115,75,1.078,83,0.728,84,1.332,85,1.332,86,0.967,87,1.642,88,0.967,90,0.62,91,0.967,92,0.84,93,0.902,94,0.967,95,0.84,96,0.677,97,0.473,98,0.967,99,0.84,100,0.967,101,0.84,102,0.811,103,1.523,104,0.84,105,0.967,106,0.84,107,0.967,108,0.84,109,0.84,110,0.967,111,0.967,112,0.84,113,0.967,114,0.84,115,1.585,116,0.967,117,0.84,118,1.523,119,0.811,120,0.967,121,0.811,122,0.811,123,0.967,124,0.84,125,0.967,126,1.427,127,1.711,128,0.967,129,0.84,130,1.497,131,0.967,132,0.84,133,0.967,134,0.811,135,0.871,136,0.967,137,0.84,138,0.811,139,0.84,140,0.832,141,0.967,142,0.783,143,1.523,144,0.811,145,1.078,146,0.84,147,0.967,148,0.811,149,0.84,150,0.902,151,0.84,152,0.967,153,0.811,154,0.84,155,0.811,156,0.967,157,0.967,158,0.006,159,0.009,160,0.006,164,0.967,183,0.628,184,0.604,186,0.651,258,1.479,274,1.329,284,1.282,394,5.821,571,3.728,600,1.994,717,2.329,780,3.036,795,1.744,796,1.994,813,3.351,985,3.555,1408,6.452,1409,3.421,1410,6.191,1411,5.412,1412,5.391,1413,2.837,1414,5.412,1415,3.929,1416,3.929,1417,3.929,1418,3.929,1419,3.929,1420,3.421,1421,3.929,1422,3.421,1423,3.929,1424,3.929,1425,3.929,1426,5.412,1427,5.412,1428,5.412,1429,3.929,1430,3.929,1431,3.929]],["title/components/NoticeBoardSettingComponent.html",[0,0.076,129,0.881]],["body/components/NoticeBoardSettingComponent.html",[0,0.124,1,0.726,2,0.997,3,0.183,4,0.211,5,0.865,6,0.865,7,0.865,8,0.865,9,0.169,11,1.149,12,1.593,13,0.726,14,2.042,15,1.775,16,1.232,18,1.232,20,0.404,21,0.576,22,1.736,23,0.519,24,0.808,27,0.576,28,0.014,29,0.962,30,0.578,31,0.335,32,0.197,33,0.103,75,0.997,83,0.651,84,1.232,85,1.232,86,0.865,87,1.563,88,0.865,90,0.637,91,0.865,92,0.752,93,0.807,94,0.865,95,0.752,96,0.605,97,0.423,98,0.865,99,0.752,100,0.865,101,0.752,102,0.726,103,1.435,104,0.752,105,0.865,106,0.752,107,0.865,108,0.752,109,0.752,110,0.865,111,0.865,112,0.752,113,0.865,114,0.752,115,1.51,116,0.865,117,0.752,118,1.435,119,0.726,120,0.865,121,0.726,122,0.726,123,0.865,124,0.752,125,0.865,126,0.752,127,1.703,128,0.865,129,1.359,130,1.772,131,0.865,132,0.752,133,0.865,134,0.726,135,0.779,136,0.865,137,0.752,138,0.726,139,0.752,140,0.769,141,0.865,142,0.7,143,1.435,144,0.726,145,0.997,146,0.752,147,0.865,148,0.726,149,0.752,150,0.807,151,0.752,152,0.865,153,0.726,154,0.752,155,0.726,156,0.865,157,0.865,158,0.006,159,0.008,160,0.006,164,0.894,183,0.799,184,0.769,186,0.807,258,1.834,274,1.189,284,1.146,316,4.264,318,2.359,320,1.873,327,2.359,341,4.586,346,2.761,347,4.847,352,2.359,411,2.32,571,3.578,600,1.784,748,3.932,755,3.932,795,1.56,796,1.784,985,3.578,1185,3.06,1350,3.932,1412,3.06,1420,5.076,1432,6.504,1433,5.868,1434,3.06,1435,5.006,1436,5.83,1437,5.006,1438,5.83,1439,6.979,1440,5.006,1441,3.515,1442,3.515,1443,5.006,1444,3.515,1445,5.83,1446,3.515,1447,3.515,1448,3.515,1449,3.515,1450,3.515,1451,3.515,1452,3.515,1453,2.761,1454,3.515,1455,3.515,1456,3.515,1457,3.515,1458,5.006,1459,5.006]],["title/classes/Notification.html",[33,0.12,1460,2.974]],["body/classes/Notification.html",[3,0.35,4,0.329,9,0.263,20,0.63,21,0.773,23,0.809,24,0.856,27,0.63,28,0.014,32,0.307,33,0.16,90,0.548,158,0.009,159,0.011,160,0.009,162,2.916,164,1.2,183,0.874,184,0.841,186,0.964,189,1.456,243,2.039,274,1.851,463,3.226,802,4.765,813,3.716,955,4.766,1422,5.848,1460,4.849,1461,4.765,1462,7.267,1463,7.578,1464,6.716,1465,6.716,1466,5.472,1467,5.472,1468,5.472,1469,6.716,1470,5.472,1471,5.472,1472,3.951,1473,5.472]],["title/components/NotificationComponent.html",[0,0.076,132,0.881]],["body/components/NotificationComponent.html",[0,0.131,1,0.843,2,1.107,3,0.289,4,0.246,5,1.004,6,1.004,7,1.004,8,1.004,9,0.196,11,1.275,12,1.725,13,0.843,14,2.064,15,1.794,16,1.367,18,1.367,20,0.47,21,0.639,22,1.852,23,0.603,24,0.746,27,0.47,28,0.014,29,0.784,30,0.544,31,0.389,32,0.229,33,0.119,75,1.107,83,0.757,84,1.367,85,1.367,86,1.004,87,1.668,88,1.004,90,0.633,91,1.004,92,0.873,93,0.937,94,1.004,95,0.873,96,0.703,97,0.491,98,1.004,99,0.873,100,1.004,101,0.873,102,0.843,103,1.554,104,0.873,105,1.004,106,0.873,107,1.004,108,0.873,109,0.873,110,1.004,111,1.004,112,0.873,113,1.004,114,0.873,115,1.611,116,1.004,117,0.873,118,1.554,119,0.843,120,1.004,121,0.843,122,0.843,123,1.004,124,0.873,125,1.004,126,0.873,127,1.188,128,1.004,129,0.873,130,0.873,131,1.004,132,1.45,133,1.004,134,0.843,135,0.904,136,1.004,137,0.873,138,0.843,139,0.873,140,0.854,141,1.004,142,0.813,143,1.554,144,0.843,145,1.107,146,0.873,147,1.004,148,0.843,149,0.873,150,0.937,151,0.873,152,1.004,153,0.843,154,0.873,155,0.843,156,1.004,157,1.004,158,0.007,159,0.009,160,0.007,164,0.993,183,0.652,184,0.627,186,0.759,258,1.518,266,1.077,267,0.873,284,1.331,424,1.812,711,2.947,728,2.819,732,2.419,1135,2.739,1383,2.739,1460,5.281,1474,3.554,1475,6.315,1476,5.555,1477,6.315,1478,5.576,1479,4.081,1480,5.555,1481,4.081,1482,4.081,1483,4.081,1484,4.081,1485,4.081,1486,4.081,1487,4.081,1488,4.081,1489,4.081,1490,5.555,1491,5.555,1492,4.081,1493,4.081]],["title/injectables/NotificationService.html",[556,1.558,1478,2.974]],["body/injectables/NotificationService.html",[3,0.288,4,0.333,9,0.266,20,0.638,21,0.779,23,0.819,24,0.837,27,0.638,28,0.014,29,1.065,30,0.629,31,0.529,32,0.311,33,0.162,90,0.678,158,0.009,159,0.011,160,0.009,164,1.209,183,1.081,184,1.04,186,0.879,189,1.065,266,1.462,267,1.185,338,3.718,478,2.661,556,2.559,557,2.952,578,4.595,1017,3.708,1453,4.351,1478,4.885,1494,4.823,1495,7.804,1496,6.767,1497,5.892,1498,5.329,1499,6.767,1500,6.767,1501,5.539,1502,5.539,1503,4.823,1504,4.823,1505,4.351,1506,5.539,1507,4.823,1508,5.539]],["title/components/PatchNotesComponent.html",[0,0.076,134,0.85]],["body/components/PatchNotesComponent.html",[0,0.122,1,0.685,2,1.233,3,0.294,4,0.2,5,0.817,6,0.817,7,0.817,8,0.817,9,0.16,11,1.102,12,1.543,13,0.685,14,2.033,15,1.767,16,1.182,18,1.182,20,0.382,21,0.553,22,1.691,23,0.834,24,0.529,27,0.382,28,0.013,29,0.638,30,0.286,31,0.317,32,0.186,33,0.097,37,3.021,41,3.172,43,3.141,56,2.56,70,2.233,75,1.233,83,0.615,84,1.182,85,1.182,86,0.817,87,1.523,88,0.817,90,0.481,91,0.817,92,0.71,93,1.507,94,0.817,95,0.71,96,0.972,97,0.399,98,0.817,99,0.71,100,0.817,101,0.71,102,0.685,103,1.389,104,0.71,105,0.817,106,0.71,107,0.817,108,0.71,109,0.71,110,0.817,111,0.817,112,0.71,113,0.817,114,0.71,115,1.471,116,0.817,117,0.71,118,1.389,119,0.685,120,0.817,121,0.685,122,0.685,123,0.817,124,0.71,125,0.817,126,0.71,127,1.028,128,0.817,129,0.71,130,0.71,131,0.817,132,0.71,133,0.817,134,1.278,135,1.602,136,0.817,137,0.71,138,1.564,139,0.71,140,0.951,141,0.817,142,0.661,143,1.389,144,0.685,145,1.233,146,0.71,147,0.817,148,0.685,149,0.71,150,1.296,151,0.71,152,0.817,153,0.685,154,0.71,155,1.166,156,0.817,157,0.817,158,0.005,159,0.008,160,0.005,195,2.438,210,3.224,215,1.625,253,3.141,271,1.889,292,3.021,295,4.153,374,2.341,400,4.076,421,2.56,474,3.297,475,2.56,498,2.328,536,3.774,539,2.328,563,2.695,724,2.133,782,3.224,920,3.468,1018,3.224,1030,2.56,1242,3.774,1348,3.774,1472,3.468,1509,4.916,1510,2.89,1511,4.468,1512,5.646,1513,4.804,1514,3.319,1515,3.319,1516,4.183,1517,4.861,1518,5.388,1519,4.183,1520,4.183,1521,3.892,1522,3.774,1523,2.847,1524,4.183,1525,3.774,1526,4.183,1527,3.468,1528,4.153,1529,3.774,1530,4.183,1531,4.183,1532,4.183,1533,4.183,1534,4.183,1535,4.183,1536,4.183,1537,4.183,1538,4.183,1539,4.183,1540,4.183,1541,4.183,1542,4.183,1543,4.183,1544,4.183,1545,4.183,1546,4.183,1547,4.183,1548,3.774,1549,2.847,1550,3.224,1551,3.892,1552,3.774,1553,3.468,1554,3.774,1555,3.774,1556,3.774,1557,3.774,1558,3.774,1559,3.468,1560,3.774,1561,4.183,1562,4.183,1563,4.183,1564,4.183,1565,3.468,1566,4.183,1567,3.468,1568,4.183,1569,3.774,1570,4.183,1571,3.774,1572,3.774,1573,4.183,1574,3.774]],["title/injectables/ProductService.html",[433,2.195,556,1.558]],["body/injectables/ProductService.html",[3,0.239,4,0.276,9,0.22,20,0.528,21,0.691,23,0.677,24,0.848,27,0.77,28,0.014,30,0.651,31,0.437,32,0.257,33,0.134,45,3.558,70,1.958,90,0.671,96,0.789,158,0.007,159,0.01,160,0.007,164,1.073,183,1.069,184,1.029,186,0.909,189,1.154,243,2.156,258,1.64,265,2.717,266,1.584,267,1.284,268,3.734,277,1.608,278,2.717,279,2.572,284,1.495,411,2.124,433,3.199,478,2.754,556,2.27,557,2.443,563,3.984,564,4.492,568,2.572,569,3.31,570,4.947,592,1.952,593,4.029,594,4.492,595,3.558,596,4.029,598,2.717,616,3.31,746,4.716,747,5.227,749,5.227,751,5.227,753,4.832,757,5.227,766,3.775,795,2.035,796,2.327,873,2.572,984,4.492,1011,4.334,1022,3.31,1024,3.077,1029,3.601,1034,3.992,1048,4.334,1069,3.992,1214,4.716,1575,3.992,1576,7.102,1577,4.584,1578,4.584,1579,4.584,1580,4.584,1581,4.584,1582,4.584,1583,4.584,1584,3.992,1585,3.601,1586,3.601,1587,4.584,1588,4.584,1589,4.584,1590,4.584,1591,4.584,1592,4.584,1593,6.003,1594,4.584]],["title/components/QmInfoComponent.html",[0,0.076,137,0.881]],["body/components/QmInfoComponent.html",[0,0.123,1,0.713,2,0.985,3,0.372,4,0.208,5,0.85,6,0.85,7,0.85,8,0.85,9,0.166,11,1.134,12,1.577,13,0.713,14,2.039,15,1.773,16,1.216,18,1.216,20,0.397,21,0.569,22,1.722,23,0.51,24,0.763,27,0.569,28,0.014,29,0.95,30,0.598,31,0.33,32,0.194,33,0.101,75,0.985,83,0.64,84,1.216,85,1.216,86,0.85,87,1.551,88,0.85,90,0.695,91,0.85,92,0.739,93,0.792,94,0.85,95,0.739,96,0.595,97,0.594,98,0.85,99,0.739,100,0.85,101,0.739,102,0.713,103,1.421,104,0.739,105,0.85,106,0.739,107,0.85,108,0.739,109,0.739,110,0.85,111,0.85,112,0.739,113,0.85,114,0.739,115,1.498,116,0.85,117,0.739,118,1.421,119,0.713,120,0.85,121,0.713,122,0.713,123,0.85,124,0.739,125,0.85,126,0.739,127,1.057,128,0.85,129,0.739,130,0.739,131,0.85,132,0.739,133,0.85,134,0.713,135,0.765,136,0.85,137,1.348,138,1.536,139,0.739,140,1.025,141,0.85,142,0.688,143,1.421,144,0.713,145,0.985,146,0.739,147,0.85,148,0.713,149,0.739,150,0.792,151,0.739,152,0.85,153,0.713,154,0.739,155,1.301,156,0.85,157,0.85,158,0.006,159,0.008,160,0.006,164,0.883,183,0.551,184,0.531,186,0.758,258,1.822,268,2.797,277,1.212,284,1.126,310,3.168,312,2.713,321,1.471,322,1.937,333,1.753,437,4.476,446,3.953,478,1.258,495,2.172,508,2.172,509,2.318,571,3.358,600,1.753,656,3.042,669,1.937,671,2.509,672,2.318,676,2.172,704,2.634,705,3.554,715,3.318,717,2.93,720,1.84,724,2.194,725,2.172,726,2.713,728,2.93,729,1.937,730,3.318,732,2.047,742,2.047,743,2.713,761,2.318,957,2.493,985,3.076,1105,3.007,1135,2.318,1304,2.493,1305,4.535,1306,3.883,1316,3.883,1383,2.318,1595,6.221,1596,5.612,1597,4.168,1598,6.302,1599,3.453,1600,3.453,1601,4.943,1602,4.943,1603,4.943,1604,4.943,1605,3.453,1606,3.453,1607,3.453,1608,3.453,1609,3.453,1610,3.453,1611,3.569,1612,4.943,1613,3.109,1614,3.453,1615,3.453,1616,5.773,1617,3.453,1618,3.453,1619,3.453]],["title/classes/QmUser.html",[33,0.12,1597,2.974]],["body/classes/QmUser.html",[3,0.263,4,0.304,9,0.243,20,0.582,21,0.735,23,0.747,24,0.867,27,0.848,28,0.014,29,1.347,32,0.283,33,0.148,90,0.799,158,0.008,159,0.01,160,0.008,162,2.692,164,1.142,183,1.119,184,1.077,186,0.914,189,1.603,243,2.128,266,1.333,267,1.081,333,4,478,2.826,1597,4.614,1620,4.4,1621,7.366,1622,7.366,1623,6.391,1624,6.391,1625,5.565,1626,6.391,1627,6.391,1628,5.053,1629,5.053,1630,5.053,1631,6.391,1632,5.053,1633,6.391,1634,5.053,1635,6.414,1636,6.103]],["title/components/QueueControlComponent.html",[0,0.076,139,0.881]],["body/components/QueueControlComponent.html",[0,0.086,1,0.338,2,0.549,3,0.144,4,0.099,5,0.403,6,0.403,7,0.403,8,0.403,9,0.079,11,0.633,12,0.976,13,0.338,14,1.878,15,1.633,16,0.679,18,0.679,20,0.189,21,0.317,22,1.144,23,0.408,24,0.833,27,0.65,28,0.014,29,1.086,30,0.551,31,0.156,32,0.092,33,0.048,37,1.735,41,2.725,45,0.971,56,0.873,74,2.349,75,0.549,83,0.304,84,0.679,85,0.679,86,0.403,87,1.03,88,0.403,90,0.641,91,0.403,92,0.351,93,0.376,94,0.403,95,0.351,96,0.282,97,0.897,98,0.403,99,0.351,100,0.403,101,0.351,102,0.338,103,0.879,104,0.351,105,0.403,106,0.351,107,0.403,108,0.351,109,0.351,110,0.403,111,0.403,112,0.351,113,0.403,114,0.59,115,0.995,116,0.403,117,0.351,118,0.879,119,0.338,120,0.403,121,0.338,122,0.338,123,0.403,124,0.351,125,0.403,126,0.351,127,0.59,128,0.403,129,0.351,130,0.351,131,0.403,132,0.351,133,0.403,134,0.338,135,0.363,136,0.403,137,0.351,138,0.865,139,0.896,140,0.904,141,0.403,142,0.327,143,0.879,144,0.338,145,0.549,146,0.351,147,0.403,148,0.338,149,0.351,150,0.376,151,0.351,152,0.403,153,0.338,154,0.351,155,0.338,156,0.403,157,0.403,158,0.003,159,0.004,160,0.003,164,0.493,169,0.92,183,0.808,184,0.778,186,0.874,189,1.168,195,1.4,212,0.832,215,1.712,219,1.47,243,1.084,258,1.383,261,2.246,265,2.482,266,1.688,267,1.397,268,2.263,271,2.116,272,1.427,274,1.416,277,0.575,278,0.971,279,0.92,283,1.547,290,1.1,310,2.588,321,0.698,322,0.92,323,2.811,342,3.373,375,1.278,389,4.781,408,1.183,424,2.074,437,3.136,446,2.769,453,1.851,468,1.1,474,3.238,478,1.843,485,1.851,495,2.938,498,2.453,504,2.371,508,2.634,509,2.397,554,1.1,568,2.349,592,1.174,612,1.427,618,1.366,631,1.851,632,1.851,656,3.237,669,2.003,671,2.371,672,1.851,676,1.031,704,1.903,705,1.903,711,1.183,717,0.971,720,1.47,721,1.183,724,0.728,728,1.4,729,0.92,732,0.971,737,1.427,738,1.288,739,1.427,740,1.427,741,1.427,742,0.971,743,2.167,761,1.1,766,1.031,777,1.288,781,3.023,852,2.938,873,0.92,925,3.646,950,1.991,957,1.991,1024,1.1,1030,2.231,1054,1.1,1125,2.402,1134,1.031,1136,1.735,1164,2.805,1165,3.29,1194,0.832,1195,1.288,1196,2.246,1197,2.167,1198,0.971,1231,1.635,1237,2.167,1239,2.167,1246,2.402,1258,2.402,1271,1.183,1347,1.288,1383,1.851,1521,2.246,1523,2.769,1525,2.167,1552,3.977,1553,1.991,1565,2.578,1637,5.972,1638,1.427,1639,3.571,1640,2.758,1641,4.687,1642,3.571,1643,5.383,1644,3.571,1645,5.383,1646,3.571,1647,4.672,1648,4.672,1649,3.571,1650,3.571,1651,3.571,1652,3.571,1653,3.571,1654,4.672,1655,2.758,1656,4.188,1657,2.758,1658,2.758,1659,2.758,1660,2.758,1661,4.188,1662,1.639,1663,4.188,1664,3.886,1665,2.758,1666,2.758,1667,2.758,1668,1.639,1669,1.639,1670,1.639,1671,2.758,1672,1.639,1673,2.758,1674,1.639,1675,2.758,1676,1.639,1677,2.758,1678,3.109,1679,1.639,1680,1.639,1681,1.639,1682,1.639,1683,1.639,1684,1.639,1685,1.639,1686,1.639,1687,1.639,1688,1.639,1689,2.811,1690,1.639,1691,2.758,1692,1.639,1693,2.758,1694,2.805,1695,3.646,1696,1.639,1697,4.672,1698,2.758,1699,2.758,1700,1.639,1701,2.402,1702,2.758,1703,2.758,1704,1.639,1705,2.402,1706,1.991,1707,1.639,1708,1.639,1709,1.639,1710,1.639,1711,1.639,1712,1.639,1713,1.639,1714,1.427,1715,1.639,1716,1.639,1717,4.62,1718,1.639,1719,1.639,1720,1.639,1721,3.571,1722,1.427,1723,1.639,1724,1.427,1725,1.639,1726,1.639,1727,1.639,1728,1.639,1729,1.639,1730,1.639,1731,1.639,1732,1.639,1733,1.639,1734,1.639,1735,1.639,1736,1.639,1737,3.571,1738,1.639,1739,1.427,1740,3.571,1741,3.571,1742,1.639,1743,1.639,1744,1.639,1745,1.639,1746,1.639,1747,1.639,1748,2.811,1749,2.758,1750,2.758,1751,2.758,1752,1.639,1753,2.758,1754,2.758,1755,1.427,1756,2.758,1757,3.571,1758,1.639,1759,1.639,1760,1.639,1761,1.427,1762,1.427,1763,3.698,1764,1.639,1765,1.639,1766,1.639,1767,1.639,1768,1.639,1769,3.571,1770,1.639,1771,3.571,1772,1.639,1773,3.571,1774,1.639,1775,2.758,1776,1.639,1777,1.639,1778,1.639,1779,1.639,1780,1.427,1781,1.288,1782,1.639,1783,1.639,1784,1.639,1785,1.639,1786,1.288,1787,4.188,1788,4.188,1789,2.758,1790,2.482,1791,2.758,1792,3.646,1793,3.646,1794,4.081,1795,2.758,1796,2.758,1797,2.758,1798,2.758,1799,1.639,1800,2.758,1801,2.758,1802,2.758,1803,2.758,1804,2.758,1805,1.639,1806,2.402,1807,1.639,1808,2.758,1809,4.188,1810,2.758,1811,2.758,1812,2.758,1813,2.758,1814,2.758,1815,2.758,1816,1.639,1817,2.758,1818,1.427,1819,1.639,1820,1.639,1821,1.639,1822,1.639,1823,1.639,1824,1.639,1825,1.427,1826,1.288,1827,1.427,1828,1.639,1829,1.639,1830,1.639]],["title/components/QueueDashboardComponent.html",[0,0.076,142,0.821]],["body/components/QueueDashboardComponent.html",[0,0.135,1,0.91,2,1.165,3,0.229,4,0.265,5,1.084,6,1.084,7,1.084,8,1.084,9,0.212,11,1.342,12,1.793,13,0.91,14,2.074,15,1.803,16,1.439,18,1.439,20,0.507,21,0.673,22,1.91,23,0.97,24,0.643,27,0.507,28,0.013,29,0.847,30,0.379,31,0.42,32,0.247,33,0.129,75,1.165,83,0.817,84,1.439,85,1.439,86,1.084,87,1.721,88,1.084,90,0.586,91,1.084,92,0.942,93,1.011,94,1.084,95,0.942,96,0.759,97,0.53,98,1.084,99,0.942,100,1.084,101,0.942,102,0.91,103,1.615,104,0.942,105,1.084,106,0.942,107,1.084,108,0.942,109,0.942,110,1.084,111,1.084,112,0.942,113,1.084,114,0.942,115,1.662,116,1.084,117,0.942,118,1.615,119,0.91,120,1.084,121,0.91,122,0.91,123,1.084,124,0.942,125,1.084,126,0.942,127,1.251,128,1.084,129,0.942,130,0.942,131,1.084,132,0.942,133,1.084,134,0.91,135,0.976,136,1.084,137,0.942,138,0.91,139,0.942,140,1.205,141,1.084,142,1.393,143,1.615,144,0.91,145,1.165,146,0.942,147,1.084,148,0.91,149,0.942,150,1.011,151,0.942,152,1.084,153,0.91,154,0.942,155,0.91,156,1.084,157,1.084,158,0.007,159,0.01,160,0.007,389,4.128,656,2.795,1549,3.466,1831,3.181,1832,5.156,1833,4.594,1834,3.461,1835,3.461]],["title/modules/QueueDashboardModule.html",[354,1.5,368,2.764]],["body/modules/QueueDashboardModule.html",[0,0.087,3,0.244,4,0.281,9,0.225,28,0.014,30,0.699,31,0.446,32,0.262,33,0.137,83,0.867,104,1.627,106,1.627,137,1.627,138,0.966,139,1.627,140,1.039,142,1.515,149,1.627,150,1.074,158,0.008,159,0.01,160,0.008,354,1.704,356,2.077,357,2.267,358,3.792,359,2.267,360,2.625,361,2.168,368,5.672,371,4.053,373,3.413,374,1.77,375,2.168,377,3.088,381,3.088,389,2.943,391,3.14,392,3.676,404,3.606,405,2.625,410,3.14,634,3.685,656,1.992,658,3.676,674,3.676,818,4.053,828,4.053,832,4.053,840,4.053,1194,2.375,1549,2.773,1596,3.676,1637,3.676,1836,4.074,1837,4.074,1838,4.074,1839,5.105,1840,3.676,1841,4.679,1842,4.679,1843,6.084,1844,3.676,1845,5.297,1846,4.679,1847,4.679]],["title/modules/QueueDashboardRoutingModule.html",[354,1.5,1839,2.764]],["body/modules/QueueDashboardRoutingModule.html",[0,0.111,3,0.311,4,0.36,9,0.288,28,0.014,30,0.672,31,0.571,32,0.335,33,0.175,140,0.919,142,1.411,158,0.01,159,0.012,160,0.01,356,2.654,361,2.771,377,3.034,381,3.596,389,3.76,403,5.206,404,4.199,405,3.354,406,6.169,407,5.24,408,4.317,410,4.013,411,2.771,413,5.206,420,5.206,656,2.546,1549,3.544,1839,4.755,1848,5.979]],["title/injectables/QueueStateService.html",[556,1.558,1664,2.974]],["body/injectables/QueueStateService.html",[3,0.283,4,0.327,9,0.262,20,0.627,21,0.771,23,0.805,24,0.854,27,0.627,28,0.014,29,1.046,30,0.624,31,0.519,32,0.305,33,0.159,90,0.545,140,1.029,158,0.009,159,0.011,160,0.009,164,1.196,183,0.869,184,0.837,186,0.91,189,1.046,258,1.829,266,1.436,267,1.164,284,1.776,338,3.654,478,2.64,556,2.532,557,2.901,578,4.56,1017,3.68,1497,4.74,1498,5.506,1503,4.74,1504,4.74,1505,4.277,1507,4.74,1664,4.834,1849,4.74,1850,6.313,1851,7.564,1852,6.695,1853,5.444,1854,6.695,1855,5.444,1856,5.444,1857,5.444,1858,5.444,1859,5.444,1860,5.444]],["title/components/RccDashboardComponent.html",[0,0.076,144,0.85]],["body/components/RccDashboardComponent.html",[0,0.135,1,0.91,2,1.165,3,0.229,4,0.265,5,1.084,6,1.084,7,1.084,8,1.084,9,0.212,11,1.342,12,1.793,13,0.91,14,2.074,15,1.803,16,1.439,18,1.439,20,0.507,21,0.673,22,1.91,23,0.97,24,0.643,27,0.507,28,0.013,29,0.847,30,0.379,31,0.42,32,0.247,33,0.129,75,1.165,83,0.817,84,1.439,85,1.439,86,1.084,87,1.721,88,1.084,90,0.586,91,1.084,92,0.942,93,1.011,94,1.084,95,0.942,96,0.759,97,0.53,98,1.084,99,0.942,100,1.084,101,0.942,102,0.91,103,1.615,104,0.942,105,1.084,106,0.942,107,1.084,108,0.942,109,0.942,110,1.084,111,1.084,112,0.942,113,1.084,114,0.942,115,1.662,116,1.084,117,0.942,118,1.615,119,0.91,120,1.084,121,0.91,122,0.91,123,1.084,124,0.942,125,1.084,126,0.942,127,1.251,128,1.084,129,0.942,130,0.942,131,1.084,132,0.942,133,1.084,134,0.91,135,0.976,136,1.084,137,0.942,138,0.91,139,0.942,140,0.899,141,1.084,142,0.878,143,1.615,144,1.443,145,1.563,146,0.942,147,1.084,148,0.91,149,0.942,150,1.011,151,0.942,152,1.084,153,0.91,154,0.942,155,0.91,156,1.084,157,1.084,158,0.007,159,0.01,160,0.007,398,4.128,1549,3.466,1831,3.181,1832,5.156,1833,4.594,1834,3.461,1835,3.461,1861,4.739]],["title/modules/RccDashboardModule.html",[354,1.5,369,2.764]],["body/modules/RccDashboardModule.html",[3,0.295,4,0.34,9,0.272,28,0.013,30,0.676,31,0.54,32,0.317,33,0.165,83,1.049,144,1.647,145,1.366,146,1.707,158,0.009,159,0.011,160,0.009,354,2.061,356,2.512,357,2.741,358,4.137,359,2.741,360,3.174,361,2.622,369,5.537,371,4.252,373,3.845,374,2.14,375,2.622,377,3.479,381,3.479,391,3.798,398,3.558,404,4.063,405,3.174,410,3.798,1840,4.445,1861,4.085,1862,4.927,1863,4.927,1864,5.658,1865,4.445,1866,5.658]],["title/components/RccManagementComponent.html",[0,0.076,146,0.881]],["body/components/RccManagementComponent.html",[0,0.1,1,0.387,2,0.615,3,0.161,4,0.113,5,0.462,6,0.462,7,0.462,8,0.462,9,0.09,11,0.708,12,1.074,13,0.387,14,1.927,15,1.664,16,0.759,18,0.759,20,0.355,21,0.355,22,1.245,23,0.277,24,0.815,27,0.713,28,0.014,29,1.1,30,0.563,31,0.179,32,0.105,33,0.055,70,1.486,74,1.053,75,0.615,83,0.348,84,0.759,85,0.759,86,0.462,87,1.121,88,0.462,90,0.655,91,0.462,92,0.401,93,0.431,94,0.462,95,0.401,96,0.867,97,0.878,98,0.462,99,0.401,100,0.462,101,0.401,102,0.387,103,0.967,104,0.401,105,0.462,106,0.401,107,0.462,108,0.401,109,0.401,110,0.462,111,0.462,112,0.401,113,0.462,114,0.401,115,1.083,116,0.462,117,0.401,118,0.967,119,0.637,120,0.462,121,0.387,122,0.387,123,0.462,124,0.401,125,0.462,126,0.401,127,0.66,128,0.462,129,0.401,130,0.401,131,0.462,132,0.401,133,0.462,134,0.387,135,0.416,136,0.462,137,0.401,138,0.387,139,0.401,140,0.879,141,0.462,142,0.374,143,0.967,144,0.387,145,1.394,146,0.974,147,0.462,148,0.387,149,0.401,150,0.431,151,0.401,152,0.462,153,0.387,154,0.401,155,0.387,156,0.462,157,0.462,158,0.003,159,0.005,160,0.003,161,2.206,164,0.552,183,0.914,184,0.879,186,0.83,189,0.593,195,3.143,215,1.831,217,2.556,219,3.049,221,2.865,243,1.194,258,1.785,261,2.473,265,1.829,266,0.814,267,1.077,268,1.905,274,0.635,277,0.658,284,0.612,290,1.259,292,1.941,307,2.228,310,2.715,321,0.799,322,1.053,323,2.071,342,3.635,359,0.909,374,1.487,398,4.692,411,0.869,424,1.37,446,3.779,463,1.37,470,1.355,472,3.089,475,2.885,481,1.355,482,2.228,485,1.259,495,3.599,496,2.838,498,0.909,499,1.474,500,2.838,504,1.995,508,2.865,509,1.259,529,4.714,553,1.355,554,1.259,571,2.683,578,1.941,592,0.799,599,1.355,600,0.952,618,2.02,631,2.071,632,3.379,643,2.687,669,1.053,671,2.312,704,3.185,705,2.683,715,1.259,717,1.112,719,2.687,720,2.683,724,0.833,728,0.952,729,2.206,730,1.259,736,2.071,742,1.112,782,1.259,864,2.7,883,2.071,911,1.566,933,1.474,944,1.355,947,2.639,949,1.355,955,1.18,956,1.634,957,1.355,958,2.425,985,2.427,1054,2.639,1080,1.634,1123,3.966,1126,3.089,1128,2.425,1131,1.355,1133,3.423,1136,1.941,1138,1.634,1164,3.955,1165,3.955,1194,0.952,1196,1.941,1197,2.425,1198,1.112,1199,1.259,1200,1.474,1231,1.112,1232,1.634,1237,1.474,1238,1.355,1239,1.474,1273,2.071,1392,1.634,1413,1.355,1453,1.474,1523,1.112,1550,2.071,1551,1.941,1567,2.228,1611,3.909,1641,3.423,1694,1.474,1706,2.838,1739,1.634,1748,4.386,1781,1.474,1793,1.634,1861,5.386,1865,5.861,1867,1.634,1868,2.838,1869,3.932,1870,3.086,1871,3.932,1872,5.035,1873,3.932,1874,3.086,1875,3.086,1876,3.086,1877,4.555,1878,3.086,1879,3.086,1880,4.555,1881,2.687,1882,3.086,1883,3.086,1884,3.932,1885,1.876,1886,3.086,1887,1.876,1888,5.723,1889,3.086,1890,1.876,1891,1.876,1892,3.086,1893,1.876,1894,1.876,1895,3.086,1896,1.876,1897,1.876,1898,2.687,1899,1.876,1900,1.876,1901,1.876,1902,1.876,1903,1.876,1904,1.876,1905,1.876,1906,1.876,1907,1.876,1908,1.876,1909,1.876,1910,1.876,1911,1.876,1912,1.634,1913,1.876,1914,4.555,1915,1.876,1916,1.876,1917,3.932,1918,4.555,1919,5.009,1920,3.932,1921,3.086,1922,3.086,1923,3.086,1924,3.086,1925,3.932,1926,3.932,1927,3.932,1928,3.086,1929,1.876,1930,1.876,1931,1.876,1932,1.474,1933,1.876,1934,3.086,1935,1.876,1936,3.086,1937,3.086,1938,3.932,1939,1.876,1940,2.687,1941,1.876,1942,1.876,1943,1.876,1944,1.634,1945,1.876,1946,1.634,1947,3.932,1948,3.932,1949,3.932,1950,3.932,1951,3.932,1952,3.932,1953,3.932,1954,3.932,1955,1.876,1956,1.259,1957,1.876,1958,1.876,1959,1.876,1960,1.876,1961,1.876,1962,1.876,1963,1.876,1964,1.876,1965,1.876,1966,1.876,1967,1.876,1968,1.876,1969,1.876,1970,3.966,1971,3.086,1972,3.086,1973,2.687,1974,2.687,1975,3.086,1976,2.425,1977,3.086,1978,1.876,1979,1.876,1980,2.687,1981,1.876,1982,1.634,1983,1.634,1984,3.932,1985,1.634,1986,1.876,1987,1.634,1988,1.634,1989,1.876,1990,1.876,1991,3.932,1992,3.932,1993,1.634,1994,4.555,1995,1.474,1996,3.086,1997,1.876,1998,1.876,1999,1.876,2000,1.876,2001,1.876,2002,1.876,2003,1.876,2004,5.035,2005,1.876,2006,1.876,2007,1.876]],["title/components/SettingsComponent.html",[0,0.076,148,0.85]],["body/components/SettingsComponent.html",[0,0.129,1,0.798,2,1.066,3,0.201,4,0.233,5,0.952,6,0.952,7,0.952,8,0.952,9,0.186,11,1.228,12,1.677,13,0.798,14,2.056,15,1.787,16,1.317,18,1.317,20,0.445,21,0.616,22,1.81,23,0.791,24,0.765,27,0.445,28,0.013,29,0.743,30,0.571,31,0.369,32,0.217,33,0.113,41,2.48,75,1.066,83,0.717,84,1.317,85,1.317,86,0.952,87,1.63,88,0.952,90,0.615,91,0.952,92,0.827,93,1.409,94,0.952,95,0.827,96,0.666,97,0.465,98,0.952,99,0.827,100,0.952,101,0.827,102,0.798,103,1.511,104,0.827,105,0.952,106,0.827,107,0.952,108,0.827,109,0.827,110,0.952,111,0.952,112,0.827,113,0.952,114,0.827,115,1.575,116,0.952,117,0.827,118,1.511,119,0.798,120,0.952,121,0.798,122,0.798,123,0.952,124,0.827,125,0.952,126,0.827,127,1.145,128,0.952,129,0.827,130,0.827,131,0.952,132,0.827,133,0.952,134,0.798,135,0.857,136,0.952,137,0.827,138,0.798,139,0.827,140,0.823,141,0.952,142,0.77,143,1.511,144,0.798,145,1.32,146,0.827,147,0.952,148,1.368,149,0.827,150,0.887,151,0.827,152,0.952,153,0.798,154,0.827,155,0.798,156,0.952,157,0.952,158,0.006,159,0.009,160,0.006,164,0.956,183,0.618,184,0.594,186,0.797,253,2.717,258,2.086,310,3.251,312,3.038,322,2.169,374,2.844,421,3.53,430,4.823,431,4.205,446,4.58,542,4.661,571,3.707,600,1.963,618,1.746,671,2.717,676,2.432,720,2.06,728,1.963,732,2.292,761,2.595,985,3.707,1134,2.432,1136,2.432,1219,3.593,2008,3.367,2009,3.867,2010,3.867,2011,3.867,2012,3.867,2013,3.867,2014,5.353,2015,7.52,2016,3.367,2017,3.867,2018,3.867,2019,3.867]],["title/modules/SettingsModule.html",[354,1.5,370,2.764]],["body/modules/SettingsModule.html",[3,0.279,4,0.322,9,0.258,28,0.013,30,0.695,31,0.512,32,0.301,33,0.157,45,3.177,83,0.994,101,1.685,102,1.107,108,1.685,127,1.147,129,1.685,130,1.419,148,1.626,158,0.009,159,0.011,160,0.009,320,2.857,354,1.952,356,2.38,357,2.597,358,4.04,359,2.597,360,3.008,361,2.484,370,5.586,371,4.197,373,3.721,374,2.028,375,2.484,377,3.366,381,3.366,384,5.21,391,3.598,404,3.931,405,3.008,428,4.211,745,4.211,1433,4.211,2020,4.668,2021,4.668,2022,5.361,2023,5.361,2024,7.201,2025,6.632,2026,5.361]],["title/modules/SharedModule.html",[354,1.5,371,2.195]],["body/modules/SharedModule.html",[2,0.872,3,0.228,4,0.263,9,0.21,15,0.936,28,0.014,30,0.696,31,0.417,32,0.245,33,0.128,83,0.811,109,1.718,114,1.655,115,1.04,117,1.655,119,1.598,121,1.598,122,1.202,124,1.718,132,1.718,151,1.718,158,0.007,159,0.009,160,0.007,354,1.593,356,1.942,357,2.12,358,3.669,359,2.12,360,2.454,361,3.031,366,4.695,371,4.479,373,3.265,374,1.655,375,2.027,377,2.954,381,2.954,392,3.437,404,3.45,405,2.454,937,3.437,1194,2.22,1195,3.437,1199,2.936,1200,3.437,1201,3.159,1202,3.809,1219,2.936,1262,5.391,1271,3.159,1303,3.437,1714,3.809,1845,3.809,2027,3.809,2028,3.809,2029,3.809,2030,3.809,2031,4.375,2032,6.541,2033,4.375,2034,4.375,2035,4.375,2036,4.375,2037,4.375,2038,6.972,2039,4.375,2040,4.375,2041,3.809,2042,3.809,2043,3.809,2044,4.375,2045,4.375,2046,4.375]],["title/components/ShiftInfoComponent.html",[0,0.076,149,0.881]],["body/components/ShiftInfoComponent.html",[0,0.125,1,0.737,2,1.008,3,0.306,4,0.215,5,0.879,6,0.879,7,0.879,8,0.879,9,0.172,11,1.162,12,1.607,13,0.737,14,2.044,15,1.777,16,1.246,18,1.246,20,0.411,21,0.583,22,1.748,23,0.869,24,0.772,27,0.411,28,0.014,29,0.686,30,0.436,31,0.341,32,0.2,33,0.104,67,3.654,70,2.645,75,1.008,83,0.662,84,1.246,85,1.246,86,0.879,87,1.574,88,0.879,90,0.507,91,0.879,92,0.764,93,0.819,94,0.879,95,0.764,96,0.615,97,0.429,98,0.879,99,0.764,100,0.879,101,0.764,102,0.737,103,1.447,104,0.764,105,0.879,106,0.764,107,0.879,108,0.764,109,0.764,110,0.879,111,0.879,112,0.764,113,0.879,114,0.764,115,1.52,116,0.879,117,0.764,118,1.447,119,0.737,120,0.879,121,0.737,122,0.737,123,0.879,124,0.764,125,0.879,126,0.764,127,1.083,128,0.879,129,0.764,130,0.764,131,0.879,132,0.764,133,0.879,134,0.737,135,0.791,136,0.879,137,0.764,138,0.737,139,0.764,140,0.778,141,0.879,142,0.711,143,1.447,144,0.737,145,1.008,146,0.764,147,0.879,148,0.737,149,1.368,150,1.721,151,0.764,152,0.879,153,0.737,154,0.764,155,0.737,156,0.879,157,0.879,158,0.006,159,0.008,160,0.006,164,0.904,186,0.429,266,1.688,267,1.368,656,3.072,1304,2.578,1305,4.619,1306,3.976,1314,3.109,1316,3.976,1317,3.109,1844,5.667,1956,3.397,2047,6.281,2048,6.398,2049,5.88,2050,5.88,2051,5.88,2052,3.57,2053,5.062,2054,7.885,2055,6.865,2056,7.885,2057,5.062,2058,5.062,2059,5.062,2060,5.062,2061,5.062,2062,5.062,2063,5.062,2064,5.062,2065,3.57,2066,5.062,2067,5.062,2068,5.062,2069,3.654,2070,3.57,2071,3.57,2072,3.57,2073,3.57,2074,3.57,2075,4.407,2076,5.062,2077,3.57]],["title/components/SidebarComponent.html",[0,0.076,151,0.881]],["body/components/SidebarComponent.html",[0,0.131,1,0.696,2,0.968,3,0.176,4,0.203,5,0.83,6,0.83,7,0.83,8,0.83,9,0.162,11,1.115,12,1.556,13,0.696,14,2.036,15,1.775,16,1.196,18,1.196,20,0.656,21,0.559,22,1.703,23,0.842,24,0.727,27,0.388,28,0.014,29,0.648,30,0.419,31,0.322,32,0.189,33,0.098,41,2.252,56,3.322,75,0.968,83,0.625,84,1.196,85,1.196,86,0.83,87,1.534,88,0.83,90,0.487,91,0.83,92,0.721,93,0.774,94,0.83,95,0.721,96,0.581,97,0.685,98,0.83,99,0.721,100,0.83,101,0.721,102,0.696,103,1.402,104,0.721,105,0.83,106,0.721,107,0.83,108,0.721,109,0.721,110,0.83,111,0.83,112,0.721,113,0.83,114,0.721,115,1.481,116,0.83,117,0.721,118,1.402,119,0.696,120,0.83,121,0.696,122,0.696,123,0.83,124,0.721,125,0.83,126,0.721,127,1.039,128,0.83,129,0.721,130,0.721,131,0.83,132,0.721,133,0.83,134,0.696,135,0.747,136,0.83,137,0.721,138,1.364,139,0.721,140,1.058,141,0.83,142,0.672,143,1.402,144,0.696,145,0.968,146,0.721,147,0.83,148,0.696,149,0.721,150,0.774,151,1.333,152,0.83,153,0.696,154,0.721,155,1.176,156,0.83,157,0.83,158,0.005,159,0.008,160,0.005,164,0.868,186,0.406,189,0.648,215,2.108,217,2.726,219,2.589,221,3.056,253,2.466,266,1.503,267,1.219,292,3.056,323,3.262,475,2.589,504,2.466,595,1.999,618,1.585,669,1.892,704,3.668,705,2.589,715,3.262,720,1.797,723,4.897,724,1.497,725,2.121,728,2.891,729,1.892,730,2.263,732,3.376,735,4.475,795,1.497,796,1.712,947,2.263,953,4.113,1018,3.262,1124,2.936,1126,3.817,1131,3.508,1134,2.121,1136,2.121,1360,4.96,1380,2.936,1383,3.824,1398,4.231,1511,2.435,1521,3.056,1528,2.263,1550,3.262,1572,5.704,1613,3.92,1689,3.262,1932,3.817,1985,2.936,1987,2.936,1988,2.936,2078,2.936,2079,5.697,2080,4.859,2081,6.608,2082,5.753,2083,4.859,2084,3.372,2085,4.859,2086,3.372,2087,4.859,2088,3.372,2089,4.231,2090,4.859,2091,4.859,2092,3.056,2093,2.649,2094,3.817,2095,4.231,2096,3.817,2097,4.231,2098,4.859,2099,6.234,2100,4.859,2101,4.859,2102,3.372,2103,3.372,2104,3.372,2105,3.372,2106,3.372,2107,3.372,2108,3.372,2109,3.372,2110,3.372,2111,3.372,2112,3.372,2113,3.372,2114,4.859,2115,3.372,2116,4.859,2117,4.859,2118,3.817,2119,3.372,2120,4.859,2121,3.372]],["title/pipes/SortByAVGQDay.html",[817,1.828,832,2.195]],["body/pipes/SortByAVGQDay.html",[0,0.073,3,0.204,4,0.236,9,0.189,11,1.604,13,0.809,21,0.451,24,0.431,27,0.451,28,0.014,30,0.465,31,0.374,32,0.392,33,0.204,90,0.742,97,0.907,158,0.006,159,0.009,160,0.006,183,0.626,184,0.602,186,0.471,189,0.753,215,2.254,243,2.501,267,1.546,271,2.431,274,2.364,321,1.669,463,1.74,478,2.546,580,2.199,592,2.301,618,2.28,634,2.618,638,3.202,656,2.301,686,3.738,764,3.295,809,2.465,810,3.469,817,3.208,818,2.089,819,2.465,820,2.465,821,2.631,822,2.465,823,4.85,824,4.692,826,4.85,827,4.396,828,2.879,829,2.631,830,2.631,831,2.631,832,3.551,833,2.631,834,2.631,835,2.631,836,3.202,837,2.631,838,2.631,839,2.631,840,2.879,841,2.631,842,3.626,843,3.626,844,2.631,845,3.626,846,3.626,847,3.626,848,2.631,849,3.626,850,2.631,851,2.631,852,3.888,853,2.631,854,2.631,855,2.631,856,2.631,857,3.888,858,2.631,859,2.631,860,2.631,861,2.631,862,2.631,863,2.631,864,2.323,865,2.631,866,2.631,867,2.631,868,2.465,869,2.631,870,2.631,871,2.631,872,2.631,2122,3.92]],["title/pipes/SortByAlpha.html",[817,1.828,828,2.195]],["body/pipes/SortByAlpha.html",[0,0.073,3,0.204,4,0.236,9,0.189,11,1.604,13,0.809,21,0.451,24,0.431,27,0.451,28,0.014,30,0.465,31,0.374,32,0.392,33,0.204,90,0.742,97,0.907,158,0.006,159,0.009,160,0.006,183,0.626,184,0.602,186,0.471,189,0.753,215,2.254,243,2.501,267,1.546,271,2.431,274,2.364,321,1.669,463,1.74,478,2.546,580,2.199,592,2.301,618,2.28,634,2.618,638,3.202,656,2.301,686,3.738,764,3.295,809,2.465,810,3.469,817,3.208,818,2.089,819,2.465,820,2.465,821,2.631,822,2.465,823,4.85,824,4.692,826,4.85,827,4.396,828,3.551,829,2.631,830,2.631,831,2.631,832,2.879,833,2.631,834,2.631,835,2.631,836,3.202,837,2.631,838,2.631,839,2.631,840,2.879,841,2.631,842,3.626,843,3.626,844,2.631,845,3.626,846,3.626,847,3.626,848,2.631,849,3.626,850,2.631,851,2.631,852,3.888,853,2.631,854,2.631,855,2.631,856,2.631,857,3.888,858,2.631,859,2.631,860,2.631,861,2.631,862,2.631,863,2.631,864,2.323,865,2.631,866,2.631,867,2.631,868,2.465,869,2.631,870,2.631,871,2.631,872,2.631,2123,3.92]],["title/pipes/SortByPriority.html",[817,1.828,840,2.195]],["body/pipes/SortByPriority.html",[0,0.066,3,0.185,4,0.214,9,0.171,11,1.547,13,0.733,21,0.409,24,0.77,27,0.806,28,0.014,30,0.434,31,0.339,32,0.378,33,0.197,90,0.777,97,0.947,158,0.006,159,0.008,160,0.006,183,1.118,184,1.076,186,0.767,189,0.682,215,2.158,243,2.476,267,1.498,271,2.944,274,2.279,321,1.512,463,1.576,478,2.765,580,1.992,592,2.147,618,2.198,634,2.443,638,2.988,656,3.067,686,3.781,764,3.124,810,3.289,817,3.108,818,1.892,819,2.233,820,2.233,821,2.383,822,2.233,823,4.7,824,3.935,826,4.7,827,4.239,828,2.686,829,2.383,830,2.383,831,2.383,832,2.686,833,2.383,834,2.383,835,2.383,836,2.988,837,2.383,838,2.383,839,2.383,840,3.4,841,3.384,842,3.384,843,3.384,844,2.383,845,3.384,846,3.384,847,3.384,848,3.384,849,3.384,850,2.383,851,3.384,852,4.529,853,3.935,854,2.383,855,2.383,856,3.384,857,3.687,858,2.383,859,2.383,860,3.384,861,2.383,862,2.383,863,2.383,864,2.104,865,2.383,866,2.383,867,2.383,868,2.233,869,2.383,870,2.383,871,2.383,872,2.383,2124,3.55,2125,3.55,2126,3.55,2127,3.55,2128,3.091,2129,3.55,2130,3.55,2131,3.55,2132,5.041,2133,3.55,2134,3.55,2135,3.55]],["title/components/TeamDashboardComponent.html",[0,0.076,153,0.85]],["body/components/TeamDashboardComponent.html",[0,0.135,1,0.907,2,1.163,3,0.229,4,0.264,5,1.081,6,1.081,7,1.081,8,1.081,9,0.211,11,1.339,12,1.791,13,0.907,14,2.074,15,1.802,16,1.436,18,1.436,20,0.506,21,0.672,22,1.908,23,0.969,24,0.642,27,0.506,28,0.013,29,0.844,30,0.378,31,0.419,32,0.246,33,0.128,75,1.562,83,0.814,84,1.436,85,1.436,86,1.081,87,1.719,88,1.081,90,0.585,91,1.081,92,0.94,93,1.008,94,1.081,95,0.94,96,0.757,97,0.528,98,1.081,99,0.94,100,1.081,101,0.94,102,0.907,103,1.613,104,0.94,105,1.081,106,0.94,107,1.081,108,0.94,109,0.94,110,1.081,111,1.081,112,0.94,113,1.081,114,0.94,115,1.66,116,1.081,117,0.94,118,1.613,119,0.907,120,1.081,121,0.907,122,0.907,123,1.081,124,0.94,125,1.081,126,0.94,127,1.248,128,1.081,129,0.94,130,0.94,131,1.081,132,0.94,133,1.081,134,0.907,135,0.973,136,1.081,137,0.94,138,0.907,139,0.94,140,0.897,141,1.081,142,0.875,143,1.613,144,0.907,145,1.163,146,0.94,147,1.081,148,0.907,149,0.94,150,1.008,151,0.94,152,1.081,153,1.442,154,0.94,155,0.907,156,1.081,157,1.081,158,0.007,159,0.009,160,0.007,303,4.399,399,4.122,1549,3.459,1831,3.172,1832,5.149,1833,4.585,1834,3.451,1835,3.451]],["title/modules/TeamDashboardModule.html",[354,1.5,372,2.764]],["body/modules/TeamDashboardModule.html",[3,0.285,4,0.329,9,0.263,28,0.013,30,0.691,31,0.522,32,0.307,33,0.16,75,1.338,83,1.014,95,1.693,96,0.942,97,0.808,153,1.634,154,1.693,158,0.009,159,0.011,160,0.009,303,3.673,305,4.299,320,2.916,354,1.993,356,2.429,357,2.651,358,4.077,359,2.651,360,3.07,361,2.536,371,4.218,372,5.562,373,3.768,374,2.07,375,2.536,377,3.409,381,3.409,384,5.276,391,3.673,399,3.441,404,3.981,405,3.07,410,3.673,1840,4.299,2136,4.765,2137,4.765,2138,5.472,2139,4.299,2140,5.472,2141,5.472]],["title/components/TeamManagerComponent.html",[0,0.076,154,0.881]],["body/components/TeamManagerComponent.html",[0,0.108,1,0.46,2,0.706,3,0.116,4,0.134,5,0.548,6,0.548,7,0.548,8,0.548,9,0.107,13,0.46,14,1.956,15,1.7,16,0.872,18,0.872,20,0.508,21,0.408,23,0.329,24,0.809,27,0.633,28,0.014,29,1.057,30,0.549,31,0.212,32,0.125,33,0.065,45,2.101,75,1.394,83,0.413,84,0.872,85,0.872,86,0.548,87,1.239,88,0.548,90,0.761,91,0.548,92,0.476,93,0.511,94,0.548,95,0.476,96,0.867,97,0.918,98,0.548,99,0.476,100,0.548,101,0.476,102,0.46,103,1.087,104,0.476,105,0.548,106,0.476,107,0.548,108,0.476,109,0.476,110,0.548,111,0.548,112,0.476,113,0.548,114,0.476,115,1.197,116,0.548,117,0.476,118,1.087,119,0.46,120,0.548,121,0.46,122,0.46,123,0.548,124,0.476,125,0.548,126,0.476,127,0.758,128,0.548,129,0.476,130,0.476,131,0.548,132,0.476,133,0.548,134,0.46,135,0.493,136,0.548,137,0.476,138,1.209,139,0.476,140,0.545,141,0.548,142,0.443,143,1.087,144,0.46,145,0.706,146,0.476,147,0.548,148,0.46,149,0.476,150,0.511,151,0.476,152,0.548,153,0.46,154,1.077,155,0.912,156,0.548,157,0.548,158,0.004,159,0.006,160,0.004,164,0.633,169,2.825,183,0.878,184,0.845,186,0.876,189,1.449,215,0.753,219,1.889,227,2.559,243,1.076,258,1.879,261,2.777,265,2.101,266,0.587,267,0.476,268,2.14,274,0.753,277,0.781,284,0.726,303,4.983,307,2.559,310,2.868,311,3.086,315,3.086,316,3.38,318,1.494,320,1.186,321,0.948,322,1.249,324,1.938,325,1.749,327,1.494,330,1.938,332,1.938,333,3.606,334,4.385,335,4.385,336,4.385,342,3.97,399,4.669,424,1.573,433,3.589,437,3.69,446,3.259,453,1.494,463,1.573,469,1.607,480,1.938,481,2.559,482,2.559,485,1.494,495,2.777,498,1.717,504,2.556,508,2.777,571,2.93,600,1.13,618,1.156,631,2.379,632,2.379,669,1.249,671,2.973,676,1.4,704,2.353,705,2.353,710,3.086,711,2.559,717,2.101,720,3.502,721,1.607,722,1.938,723,4.601,724,1.573,725,1.4,727,3.086,728,1.799,729,3.085,731,2.784,732,1.319,736,3.69,742,1.319,746,3.469,761,1.494,764,1.186,765,1.938,766,3.167,769,1.938,770,1.938,777,1.749,778,2.559,810,1.249,857,2.229,933,1.749,947,2.379,949,1.607,950,1.607,954,4.788,958,1.749,978,2.784,985,2.683,1005,3.188,1030,1.889,1054,1.494,1122,4.788,1128,2.784,1134,1.4,1135,1.494,1238,1.607,1413,1.607,1567,1.607,1585,1.749,1586,1.749,1613,1.4,1763,2.777,1780,3.845,1781,1.749,1794,1.607,1806,1.938,1818,1.938,1827,1.938,1868,2.559,1946,1.938,1980,1.938,1982,1.938,1983,3.845,1993,3.086,1995,1.749,2092,2.229,2139,5.832,2142,1.938,2143,4.416,2144,3.545,2145,4.416,2146,4.416,2147,3.545,2148,5.036,2149,3.545,2150,3.545,2151,3.545,2152,3.545,2153,2.226,2154,2.226,2155,2.226,2156,3.545,2157,4.788,2158,2.226,2159,3.545,2160,5.1,2161,5.036,2162,2.226,2163,5.036,2164,2.226,2165,4.416,2166,2.226,2167,2.226,2168,2.226,2169,2.226,2170,2.226,2171,2.226,2172,2.226,2173,2.226,2174,3.545,2175,2.226,2176,1.938,2177,1.938,2178,2.226,2179,1.749,2180,1.749,2181,2.226,2182,2.226,2183,2.226,2184,2.226,2185,3.545,2186,2.226,2187,2.226,2188,3.545,2189,2.226,2190,2.226,2191,2.226,2192,2.226,2193,2.226,2194,2.226,2195,2.226,2196,2.226,2197,2.559,2198,2.226,2199,6.572,2200,2.226,2201,2.226,2202,2.226,2203,5.036,2204,3.545,2205,2.226,2206,2.226,2207,2.226,2208,2.226,2209,2.226,2210,2.226,2211,2.226]],["title/classes/User.html",[33,0.12,97,0.495]],["body/classes/User.html",[3,0.169,4,0.195,9,0.156,20,0.373,21,0.544,23,0.479,24,0.891,27,0.878,28,0.014,29,0.908,32,0.182,33,0.095,70,1.058,90,0.734,97,0.843,158,0.005,159,0.008,160,0.005,162,1.729,164,0.844,183,1.085,184,1.044,186,0.933,189,1.528,212,2.398,243,2.337,265,3.629,271,2.926,274,1.598,333,3.303,424,1.44,463,3.015,580,1.82,592,2.607,613,2.972,618,1.818,634,3.397,636,6.104,638,4.155,642,4.024,667,3.171,686,2.651,753,2.342,810,2.651,982,2.825,1625,4.114,1635,4.114,1636,2.825,1790,1.923,1792,4.853,1794,2.342,1919,2.549,2096,4.378,2179,2.549,2180,2.549,2212,2.825,2213,6.256,2214,5.573,2215,7.011,2216,7.011,2217,5.573,2218,6.122,2219,6.122,2220,6.122,2221,4.725,2222,6.122,2223,6.122,2224,5.331,2225,6.122,2226,4.725,2227,4.725,2228,4.725,2229,6.122,2230,6.792,2231,4.725,2232,3.244,2233,3.244,2234,3.244,2235,3.244,2236,3.244,2237,3.244,2238,3.244,2239,3.244,2240,3.244,2241,3.244,2242,4.725,2243,3.244,2244,3.244,2245,4.114,2246,4.114,2247,4.114,2248,4.114,2249,4.114,2250,3.244,2251,3.244,2252,4.725,2253,3.244,2254,3.244,2255,3.244,2256,3.244,2257,3.244,2258,4.725,2259,3.244,2260,3.244,2261,4.725,2262,3.244,2263,4.114,2264,4.725,2265,3.244,2266,6.122,2267,4.725,2268,4.725,2269,6.507,2270,6.122,2271,4.725,2272,3.244,2273,3.244,2274,3.244,2275,3.244,2276,2.825,2277,3.244,2278,3.244,2279,3.244,2280,3.244,2281,3.244,2282,3.244,2283,3.244,2284,3.244,2285,3.244,2286,3.244,2287,5.573,2288,3.244,2289,2.342,2290,3.244,2291,2.825,2292,2.825,2293,3.244,2294,2.825,2295,2.825,2296,3.244,2297,3.244]],["title/injectables/UserService.html",[310,1.754,556,1.558]],["body/injectables/UserService.html",[3,0.102,4,0.118,9,0.095,20,0.226,21,0.369,23,0.291,24,0.852,27,0.833,28,0.014,30,0.571,31,0.188,32,0.11,33,0.057,41,1.487,43,0.998,70,2.383,90,0.7,96,0.552,97,0.967,138,0.662,140,0.624,158,0.003,159,0.005,160,0.003,161,1.8,164,0.573,169,1.104,183,1.116,184,1.074,186,0.915,187,1.42,189,1.526,195,0.998,215,1.374,243,2.343,258,1.664,259,3.634,266,1.541,267,1.249,268,3.43,277,0.69,278,1.902,279,1.104,284,0.642,290,1.32,292,1.237,294,1.237,310,1.366,321,0.838,326,1.545,333,3.197,374,1.537,411,2.919,424,1.424,463,2.458,467,2.52,468,3.92,474,2.165,475,1.71,478,2.66,498,0.953,501,1.713,504,2.379,556,1.214,557,1.048,563,2.896,564,2.727,568,1.104,570,3.465,571,2.751,592,0.838,593,2.153,594,2.727,595,1.902,596,2.153,598,1.166,599,1.42,600,0.998,613,4.329,616,4.548,618,0.642,629,1.713,630,1.713,631,3.146,632,1.32,753,5.111,764,1.048,766,2.018,778,1.42,790,1.713,795,0.873,796,0.998,817,2.876,836,1.166,873,1.104,891,2.794,900,1.713,919,1.713,985,2.497,1005,1.42,1011,4.397,1014,3.538,1022,1.42,1023,1.713,1024,1.32,1025,1.713,1027,1.713,1048,5.044,1058,1.713,1072,2.794,1213,5.641,1214,5.488,1413,1.42,1523,1.166,1584,1.713,1585,1.545,1586,3.682,1613,1.237,1748,3.717,1755,1.713,1761,1.713,1790,1.166,1794,1.42,1881,2.794,1898,2.794,1919,1.545,1944,1.713,1956,1.32,2092,2.948,2176,1.713,2177,1.713,2179,1.545,2180,1.545,2213,2.794,2245,4.822,2246,3.538,2247,3.538,2248,2.794,2249,2.794,2263,5.303,2276,1.713,2289,1.42,2291,1.713,2292,1.713,2294,1.713,2295,2.794,2298,1.713,2299,4.063,2300,4.063,2301,4.063,2302,4.063,2303,4.063,2304,4.063,2305,3.208,2306,3.208,2307,3.208,2308,3.208,2309,4.687,2310,4.687,2311,3.208,2312,3.208,2313,4.687,2314,3.208,2315,4.687,2316,3.208,2317,3.208,2318,3.208,2319,3.208,2320,3.208,2321,3.208,2322,3.208,2323,1.967,2324,3.208,2325,1.967,2326,3.208,2327,1.967,2328,3.208,2329,1.967,2330,1.967,2331,1.967,2332,3.208,2333,1.967,2334,3.208,2335,1.967,2336,1.967,2337,3.208,2338,1.967,2339,1.967,2340,3.208,2341,1.967,2342,3.208,2343,1.967,2344,3.208,2345,1.967,2346,1.967,2347,3.208,2348,1.967,2349,3.208,2350,1.967,2351,1.967,2352,1.967,2353,1.967,2354,1.967,2355,1.967,2356,1.967,2357,3.208,2358,1.967,2359,4.687,2360,1.967,2361,1.967,2362,1.713,2363,1.967,2364,3.208,2365,1.967,2366,4.063,2367,1.967,2368,1.713,2369,1.967,2370,1.967,2371,1.967,2372,1.967,2373,1.967,2374,1.967,2375,1.967,2376,1.967,2377,1.967,2378,1.967,2379,5.163,2380,1.967,2381,4.063,2382,1.967,2383,1.967,2384,1.967,2385,1.967,2386,1.967,2387,1.967,2388,1.967,2389,1.967,2390,1.967,2391,1.967,2392,1.967,2393,1.967,2394,1.967,2395,4.063,2396,3.208,2397,1.967,2398,1.967,2399,1.967,2400,1.967,2401,1.967,2402,1.967,2403,1.967,2404,1.967,2405,1.967,2406,5.538,2407,1.967,2408,1.967,2409,1.967,2410,1.967,2411,1.967,2412,1.967,2413,3.208,2414,3.208,2415,1.967,2416,3.208,2417,3.208,2418,1.967,2419,1.967,2420,1.967,2421,1.967,2422,1.967,2423,1.967,2424,1.967,2425,1.967,2426,3.208,2427,1.967,2428,1.967,2429,1.967,2430,1.967,2431,1.967,2432,1.967,2433,1.967,2434,1.967,2435,1.967,2436,1.967,2437,1.967,2438,1.967,2439,1.967,2440,1.967,2441,1.967,2442,3.208,2443,3.208,2444,1.967,2445,1.967,2446,1.967,2447,1.713,2448,1.967,2449,1.967,2450,1.967,2451,1.967,2452,1.967,2453,1.967,2454,1.967,2455,1.967,2456,3.208,2457,1.967,2458,1.967,2459,1.967,2460,1.967,2461,1.967,2462,1.967]],["title/injectables/WebSocketAbstractService.html",[556,1.558,1498,2.764]],["body/injectables/WebSocketAbstractService.html",[2,0.966,3,0.253,4,0.292,9,0.233,20,0.558,21,0.717,23,1.016,24,0.757,27,0.558,28,0.014,30,0.625,31,0.463,32,0.272,33,0.142,70,1.582,90,0.486,122,1.42,158,0.008,159,0.01,160,0.008,164,1.113,183,0.775,184,0.746,186,0.583,189,1.322,243,2.088,268,3.636,277,1.702,283,2.722,338,3.256,556,2.355,557,2.585,578,3.051,592,2.066,795,2.764,796,2.462,813,2.248,911,3.16,920,3.502,927,3.502,1017,3.683,1498,4.18,1505,3.811,1551,3.916,1722,4.224,1762,4.224,2362,5.988,2463,4.224,2464,7.504,2465,6.227,2466,6.227,2467,6.227,2468,4.851,2469,4.851,2470,5.422,2471,4.851,2472,4.224,2473,4.851,2474,4.851,2475,4.851,2476,4.851,2477,4.224,2478,6.227,2479,6.227,2480,4.851,2481,4.851,2482,4.851,2483,4.851,2484,4.851,2485,4.851,2486,6.227,2487,4.851,2488,4.851,2489,4.851,2490,4.851,2491,4.851,2492,4.851,2493,4.851,2494,4.851,2495,6.877,2496,4.851,2497,4.851,2498,4.851,2499,4.851,2500,4.851,2501,4.851,2502,4.851,2503,4.851,2504,4.851]],["title/classes/WorkShift.html",[33,0.12,2069,2.974]],["body/classes/WorkShift.html",[3,0.266,4,0.308,9,0.246,20,0.589,21,0.741,23,0.756,24,0.87,27,0.811,28,0.014,32,0.287,33,0.149,70,1.669,90,0.646,158,0.008,159,0.01,160,0.008,162,2.727,164,1.151,183,1.029,184,0.99,186,0.89,189,1.466,195,4.148,243,1.554,271,2.012,463,2.272,478,2.836,882,5.706,883,5.305,1558,4.021,1706,3.695,2069,4.651,2224,6.14,2505,4.456,2506,7.627,2507,6.443,2508,7.401,2509,6.443,2510,6.443,2511,5.118,2512,5.118,2513,5.118,2514,5.118,2515,5.118,2516,4.021,2517,4.021,2518,5.118,2519,5.118,2520,5.118,2521,5.118,2522,5.118,2523,5.118,2524,5.118,2525,6.443,2526,5.118,2527,5.118,2528,5.118,2529,5.118,2530,5.118]],["title/changelog.html",[2531,2.495,2532,2.495,2533,3.455]],["body/changelog.html",[2,1.036,3,0.271,15,1.113,28,0.013,37,3.272,41,3.292,43,3.304,56,2.772,70,2.317,75,1.036,93,1.494,96,0.896,135,1.153,138,1.582,140,1,145,1.036,150,1.194,155,1.344,158,0.008,159,0.011,160,0.008,195,2.64,210,3.492,215,1.759,253,3.304,271,2.045,292,3.272,295,4.369,374,2.462,421,2.772,474,3.468,475,2.772,498,2.52,536,4.087,539,2.52,563,2.918,724,2.309,782,3.492,920,3.756,1018,3.492,1030,2.772,1242,4.087,1348,4.087,1472,3.756,1511,4.699,1516,4.53,1517,5.113,1518,5.668,1519,4.53,1520,4.53,1521,4.094,1522,4.087,1523,3.083,1524,4.53,1525,4.087,1526,4.53,1527,3.756,1528,4.369,1529,4.087,1530,4.53,1531,4.53,1532,4.53,1533,4.53,1534,4.53,1535,4.53,1536,4.53,1537,4.53,1538,4.53,1539,4.53,1540,4.53,1541,4.53,1542,4.53,1543,4.53,1544,4.53,1545,4.53,1546,4.53,1547,4.53,1548,4.087,1549,3.083,1550,3.492,1551,4.094,1552,4.087,1553,3.756,1554,4.087,1555,4.087,1556,4.087,1557,4.087,1558,4.087,1559,3.756,1560,4.087,1561,4.53,1562,4.53,1563,4.53,1564,4.53,1565,3.756,1566,4.53,1567,3.756,1568,4.53,1569,4.087,1570,4.53,1571,4.087,1572,4.087,1573,4.53,1574,4.087,2534,4.087,2535,5.202,2536,5.202]],["title/coverage.html",[2537,4.867]],["body/coverage.html",[0,0.153,1,0.747,9,0.174,10,3.151,28,0.014,33,0.216,70,1.18,92,0.774,95,0.774,97,0.712,99,0.774,101,0.774,104,0.774,106,0.774,108,0.774,109,0.774,112,0.774,114,0.774,117,0.774,119,0.747,121,0.747,122,1.055,124,0.774,126,0.774,129,0.774,130,1.093,132,0.774,134,0.747,137,0.774,139,0.774,142,0.721,144,0.747,146,0.774,148,0.747,149,0.774,151,0.774,153,0.747,154,0.774,158,0.006,159,0.008,160,0.006,161,2.03,163,2.843,169,2.03,186,0.435,250,3.151,251,2.843,252,3.151,259,2.03,303,3.976,304,3.151,305,2.843,306,3.151,310,1.541,337,3.151,345,2.03,389,3.214,394,2.843,398,3.214,399,3.214,400,2.613,427,3.151,428,2.843,429,4.015,432,2.276,433,1.928,556,2.798,558,3.151,618,2.762,634,1.753,640,2.843,641,3.151,656,3.283,657,3.151,673,3.151,674,2.843,675,3.151,744,3.151,745,2.843,795,2.63,801,3.151,817,3.014,818,1.928,820,4.27,828,1.928,832,1.928,840,1.928,873,2.03,874,3.151,936,3.151,937,2.843,938,3.151,979,3.151,1081,3.151,1149,3.151,1196,2.276,1198,2.145,1199,2.429,1201,2.613,1270,4.27,1271,2.613,1272,3.151,1303,2.843,1304,4.277,1320,3.151,1333,3.151,1335,3.151,1354,3.151,1377,2.613,1408,3.151,1409,3.151,1432,3.151,1433,2.843,1434,3.151,1460,2.613,1461,3.151,1474,3.151,1478,2.613,1494,3.151,1498,2.429,1509,3.151,1510,3.151,1575,3.151,1595,3.151,1596,2.843,1597,2.613,1620,3.151,1637,2.843,1638,3.151,1664,2.613,1717,4.654,1831,4.277,1844,2.843,1849,3.151,1861,3.69,1865,2.843,1867,3.151,2008,3.151,2047,3.151,2055,3.151,2069,2.613,2078,3.151,2139,2.843,2142,3.151,2212,3.151,2298,3.151,2463,3.151,2505,3.151,2537,3.151,2538,3.619,2539,3.619,2540,7.046,2541,7.046,2542,3.619,2543,3.619,2544,3.619,2545,6.437,2546,6.437,2547,6.437,2548,3.619,2549,5.924,2550,3.619,2551,7.397,2552,3.619,2553,3.619,2554,5.111,2555,5.111,2556,6.437,2557,3.619,2558,3.619,2559,3.619,2560,3.619,2561,3.151,2562,3.151,2563,3.151,2564,3.619,2565,3.619]],["title/dependencies.html",[357,2.396,2566,3.455]],["body/dependencies.html",[28,0.014,31,0.531,158,0.009,159,0.011,160,0.009,210,3.737,277,1.954,320,2.967,357,2.698,359,3.289,379,5.333,380,4.556,405,3.124,408,4.02,470,4.02,472,4.374,562,4.02,658,4.374,724,2.472,794,4.374,927,4.02,1194,3.445,1559,4.02,2470,4.849,2567,5.569,2568,8.183,2569,5.569,2570,6.788,2571,5.569,2572,5.569,2573,5.569,2574,5.569,2575,5.569,2576,5.569,2577,5.569,2578,4.849,2579,5.569,2580,5.569,2581,5.569,2582,5.569,2583,5.569,2584,5.569,2585,5.569,2586,5.569,2587,5.569,2588,5.569,2589,5.569,2590,4.849,2591,5.569,2592,5.569,2593,5.569,2594,5.569,2595,5.569,2596,5.569]],["title/miscellaneous/enumerations.html",[2597,2.495,2598,4.306]],["body/miscellaneous/enumerations.html",[20,0.708,28,0.014,158,0.01,159,0.012,160,0.01,163,4.834,187,5.202,214,5.358,215,2.081,216,5.358,217,3.452,218,5.358,219,3.279,220,5.358,221,3.87,222,5.358,223,4.443,224,5.358,225,4.834,226,5.358,227,4.443,267,1.756,2597,4.443,2598,5.358,2599,6.153]],["title/index.html",[20,0.398,2531,2.495,2532,2.495]],["body/index.html",[9,0.264,15,0.991,28,0.014,32,0.177,37,3.452,39,2.752,56,1.684,67,2.281,69,5.717,97,0.727,102,1.502,122,1.502,140,0.712,155,0.652,158,0.005,159,0.008,160,0.005,212,3.806,219,1.684,225,2.482,294,1.987,326,2.482,338,3.684,357,2.66,359,1.531,411,2.148,504,2.352,562,2.281,563,1.773,604,2.752,610,2.752,642,3.346,667,3.111,724,1.403,738,2.482,783,4.516,794,2.482,795,2.684,827,1.987,882,4.648,883,4.321,911,2.786,916,5.606,927,2.281,984,3.684,985,1.684,1018,2.121,1030,1.684,1051,5.265,1057,4.78,1119,2.752,1219,3.111,1253,2.752,1349,4.036,1472,2.281,1511,2.281,1559,2.281,1571,2.482,1574,2.482,1724,2.752,1850,2.752,1868,2.281,1912,2.752,1956,2.121,1995,3.641,2016,2.752,2041,4.036,2042,2.752,2095,2.752,2097,2.752,2368,2.752,2447,2.752,2472,2.752,2531,3.346,2532,3.346,2534,3.641,2578,2.752,2590,2.752,2600,2.752,2601,3.16,2602,4.635,2603,6.046,2604,3.16,2605,2.752,2606,3.16,2607,3.16,2608,3.16,2609,3.16,2610,3.16,2611,3.16,2612,3.16,2613,4.635,2614,4.635,2615,7.277,2616,5.606,2617,5.606,2618,6.046,2619,3.16,2620,3.16,2621,4.635,2622,4.635,2623,7.499,2624,3.16,2625,4.635,2626,3.16,2627,3.16,2628,4.635,2629,3.641,2630,4.635,2631,6.53,2632,6.336,2633,3.16,2634,4.635,2635,4.635,2636,3.16,2637,4.635,2638,5.606,2639,4.635,2640,6.954,2641,3.16,2642,3.16,2643,3.16,2644,6.53,2645,3.16,2646,4.78,2647,3.16,2648,6.055,2649,3.16,2650,4.635,2651,5.489,2652,3.16,2653,3.16,2654,3.16,2655,5.489,2656,3.16,2657,3.16,2658,3.16,2659,3.16,2660,3.16,2661,3.16,2662,3.16,2663,3.16,2664,3.16,2665,6.729,2666,3.16,2667,3.16,2668,6.729,2669,5.489,2670,3.16,2671,5.606,2672,4.635,2673,3.16,2674,3.16,2675,3.16,2676,6.21,2677,3.16,2678,6.21,2679,4.635,2680,4.78,2681,4.78,2682,5.265,2683,3.16,2684,3.16,2685,3.16,2686,3.16,2687,4.312,2688,4.635,2689,3.16,2690,3.16,2691,2.752,2692,4.635,2693,3.16,2694,3.16,2695,3.16,2696,3.16,2697,3.16,2698,3.16,2699,4.635,2700,3.16,2701,2.482,2702,3.16,2703,2.752,2704,4.635,2705,4.635,2706,3.16,2707,3.16,2708,3.16,2709,3.16,2710,3.16,2711,4.635,2712,3.16,2713,3.16,2714,3.16,2715,3.16,2716,3.16,2717,3.16,2718,3.16,2719,3.16,2720,3.16,2721,4.635,2722,4.635,2723,2.752,2724,3.16,2725,4.036,2726,5.489,2727,5.489,2728,3.16,2729,3.16,2730,3.16,2731,3.16,2732,3.16,2733,3.16,2734,3.16,2735,4.635,2736,3.16,2737,3.16,2738,2.752,2739,3.16,2740,3.16,2741,4.635,2742,3.16,2743,3.641,2744,3.16,2745,2.752,2746,2.752,2747,3.16,2748,2.752,2749,3.16,2750,3.16]],["title/license.html",[2531,2.495,2532,2.495,2743,2.714]],["body/license.html",[28,0.011,48,4.815,49,4.815,58,3.992,127,1.446,158,0.009,159,0.011,160,0.009,375,2.562,540,4.344,667,4.537,1017,2.806,1053,4.344,1377,3.992,1678,4.815,1956,4.537,1973,4.815,2128,4.815,2477,4.815,2638,4.815,2682,4.815,2691,4.815,2703,7.117,2743,4.344,2746,4.815,2751,7.301,2752,5.53,2753,6.759,2754,5.53,2755,5.53,2756,5.53,2757,5.53,2758,5.53,2759,5.53,2760,5.53,2761,5.53,2762,6.357,2763,5.53,2764,6.759,2765,5.53,2766,5.53,2767,5.53,2768,5.53,2769,4.815,2770,5.53,2771,5.53,2772,5.53,2773,6.759,2774,5.53,2775,5.53,2776,5.53,2777,5.53,2778,5.53,2779,6.759,2780,5.53,2781,5.53,2782,5.53,2783,5.53,2784,5.53,2785,5.53,2786,5.53,2787,5.53,2788,5.53,2789,5.53,2790,5.53,2791,5.53,2792,5.53,2793,5.53,2794,5.53,2795,5.53,2796,5.53,2797,5.53,2798,5.53,2799,5.53,2800,5.53,2801,5.53,2802,5.53,2803,5.53]],["title/modules.html",[356,2.481]],["body/modules.html",[28,0.012,43,4.146,158,0.01,159,0.012,160,0.01,355,4.333,356,2.664,366,3.774,367,4.028,368,4.028,369,4.028,370,4.028,371,3.198,372,4.028,380,5.483,1262,4.028,1790,4.482,1839,4.028,2804,8.169,2805,8.32,2806,7.562]],["title/overview.html",[2807,4.867]],["body/overview.html",[1,1.226,2,0.724,28,0.014,83,0.674,92,1.27,95,1.27,99,1.551,101,1.27,104,1.27,106,1.27,108,1.27,109,1.551,112,1.27,114,1.27,117,1.27,119,1.226,121,1.226,124,1.551,126,1.27,129,1.27,132,1.551,134,1.226,137,1.27,139,1.27,142,1.183,144,1.226,146,1.27,148,1.226,149,1.27,151,1.551,153,1.226,154,1.27,158,0.006,159,0.008,160,0.006,162,1.937,215,1.23,223,2.625,259,3.332,310,2.529,345,3.332,354,1.324,355,5.989,356,1.614,357,1.762,358,2.04,359,1.762,360,2.04,361,1.685,362,3.166,363,3.166,364,3.166,365,3.166,366,4.056,367,5.27,368,5.567,369,5.053,370,5.27,371,4.439,372,5.179,373,2.876,374,1.375,375,1.685,407,2.44,432,3.735,433,3.165,522,5.171,557,1.937,634,2.878,785,3.166,786,3.166,818,3.165,819,2.287,828,3.165,832,3.165,840,3.165,1198,2.155,1262,4.867,1836,3.166,1837,3.166,1838,3.166,1839,3.986,1862,3.166,1863,3.166,2020,3.166,2021,3.166,2027,3.166,2028,3.166,2029,3.166,2030,3.166,2118,2.856,2136,3.166,2137,3.166,2807,3.166,2808,3.636]],["title/routes.html",[407,3.751]],["body/routes.html",[28,0.012,158,0.011,159,0.012,160,0.011,407,4.423]],["title/miscellaneous/variables.html",[283,2.774,2597,2.495]],["body/miscellaneous/variables.html",[20,0.485,28,0.014,34,5.044,58,4.636,138,1.326,140,1.227,155,1.676,158,0.007,159,0.009,160,0.007,186,0.772,266,1.694,267,1.374,274,2.425,283,2.366,424,3.05,562,5.333,592,2.734,795,3.279,911,3.259,984,5.066,1153,5.591,1357,5.591,1717,5.044,2082,5.591,2089,5.591,2289,4.636,2561,3.672,2562,3.672,2563,3.672,2597,3.045,2600,4.945,2616,5.982,2631,4.945,2632,4.945,2644,5.591,2646,5.591,2648,4.945,2671,4.945,2676,6.244,2678,4.945,2681,4.945,2725,3.672,2738,4.945,2809,4.217,2810,4.217,2811,4.217,2812,6.421,2813,6.421,2814,6.421,2815,6.421,2816,6.421,2817,5.044,2818,5.044,2819,4.217,2820,4.217,2821,6.421,2822,6.421,2823,6.421,2824,5.679,2825,6.421,2826,6.421,2827,6.421,2828,6.421,2829,7.987,2830,6.421,2831,6.421,2832,6.421,2833,6.421,2834,6.421,2835,6.421,2836,6.421,2837,6.421,2838,6.421,2839,6.421,2840,6.421,2841,6.421,2842,4.217,2843,4.217,2844,4.217,2845,4.217,2846,4.217]],["title/additional-documentation/introduction.html",[539,1.674,2847,2.173,2848,3.009]],["body/additional-documentation/introduction.html",[0,0.091,3,0.257,28,0.014,40,4.95,41,3.386,43,3.198,44,4.95,46,5.487,56,4.022,67,3.568,75,1.456,76,4.303,93,1.134,96,1.195,97,0.758,102,1.301,130,1.057,140,1.16,145,1.382,155,1.558,158,0.008,159,0.01,160,0.008,212,2.508,253,2.508,375,2.29,418,3.882,419,4.656,474,3.358,475,2.633,493,2.929,504,3.198,568,3.535,667,3.317,813,2.29,911,2.508,955,3.108,1030,2.633,1219,3.317,1240,4.303,1377,3.568,1378,4.303,1517,3.882,1521,3.108,1527,3.568,1528,4.229,1551,3.108,1555,3.882,1556,3.882,1557,3.882,1565,3.568,1569,3.882,1611,3.568,1689,3.317,1695,5.487,1705,4.303,1763,3.963,1786,3.882,1790,3.735,1825,4.303,1868,3.568,1976,3.882,2075,4.303,2092,3.108,2094,4.95,2197,3.568,2516,3.882,2517,3.882,2605,4.303,2701,3.882,2748,4.303,2769,4.303,2817,3.882,2818,3.882,2848,4.303,2849,4.942,2850,4.942,2851,4.942,2852,4.942,2853,4.942,2854,4.942,2855,4.942,2856,4.942,2857,4.942,2858,4.942,2859,4.942,2860,4.942,2861,3.882,2862,4.303,2863,7.547,2864,6.302,2865,4.942,2866,4.942,2867,4.942,2868,6.041,2869,4.303,2870,4.942,2871,4.942,2872,4.942,2873,4.303,2874,4.942,2875,4.942]],["title/additional-documentation/manual-queue-dispatcher.html",[40,2.053,140,0.402,539,1.266,2818,2.053,2847,1.643]],["body/additional-documentation/manual-queue-dispatcher.html",[0,0.109,2,1.178,28,0.014,41,3.261,43,3,44,4.644,97,0.969,138,1.551,158,0.01,159,0.011,160,0.01,217,3.317,271,2.324,474,3.75,568,3.317,836,3.504,1052,5.148,1521,3.718,1560,4.644,1613,4.726,1689,3.968,1706,4.268,1763,3.718,1790,4.454,1932,4.644,2197,4.268,2517,4.644,2687,4.644,2873,5.148,2876,5.912,2877,5.912,2878,7.038,2879,5.912,2880,5.912,2881,5.148]],["title/additional-documentation/manage-team.html",[75,0.593,419,1.997,539,1.442,2847,1.872]],["body/additional-documentation/manage-team.html",[0,0.14,28,0.014,37,3.459,41,2.549,70,2.197,90,0.73,96,1.254,97,0.953,140,0.845,155,1.136,158,0.009,159,0.011,160,0.009,271,2.864,283,3.086,295,3.692,296,3.971,426,4.79,474,3.59,493,3.993,540,4.321,568,3.086,618,1.794,911,2.792,1252,4.79,1350,4.321,1522,5.293,1523,3.993,1527,4.864,1553,3.971,1554,4.321,1613,3.459,1689,3.692,1694,4.321,1748,4.522,1763,3.459,1826,4.321,2092,3.459,2093,5.722,2157,4.79,2160,4.79,2197,3.971,2289,3.971,2629,4.321,2869,4.79,2882,5.501,2883,5.501,2884,5.501,2885,5.501,2886,5.501,2887,5.501,2888,5.501,2889,5.501,2890,5.501,2891,5.501]],["title/additional-documentation/rcc.html",[145,0.688,539,1.674,2847,2.173]],["body/additional-documentation/rcc.html",[28,0.014,56,2.857,96,1.331,97,0.645,140,1.25,158,0.009,159,0.011,160,0.009,195,3.366,215,2.243,223,3.87,267,1.147,271,2.108,283,3.008,296,3.87,323,3.598,374,2.508,475,4.009,493,4.268,539,3.213,554,3.598,578,4.171,670,4.668,782,3.598,1030,2.857,1053,4.211,1136,4.171,1523,4.781,1528,3.598,1548,4.211,1550,3.598,1551,3.371,1611,5.823,1701,4.668,1970,6.732,1974,4.668,2092,4.171,2093,4.211,2687,4.211,2892,5.361,2893,5.361,2894,5.361,2895,7.201,2896,5.361,2897,6.632,2898,5.361,2899,5.361,2900,5.361,2901,5.361,2902,5.361,2903,5.361,2904,5.361,2905,5.361]],["title/additional-documentation/settings.html",[421,1.841,539,1.674,2847,2.173]],["body/additional-documentation/settings.html",[0,0.121,2,1.04,9,0.251,28,0.014,41,3.555,43,2.649,45,3.866,90,0.523,96,1.123,102,1.539,127,1.395,130,1.395,140,1.093,158,0.008,159,0.011,160,0.008,186,0.628,253,3.611,271,2.052,295,3.503,333,2.649,374,2.96,419,4.378,421,2.781,439,5.124,474,2.781,475,3.791,493,3.866,504,2.649,545,5.679,546,5.679,548,6.195,549,4.545,552,4.545,553,3.768,554,3.503,555,4.545,766,3.282,778,3.768,911,2.649,955,4.102,1005,3.768,1117,4.545,1238,3.768,1529,4.1,1748,3.503,1763,3.282,1790,3.093,1826,4.1,1940,4.545,2096,5.124,2118,4.1,2629,4.1,2680,4.545,2881,4.545,2906,5.219,2907,5.219,2908,5.219,2909,5.219,2910,5.219,2911,5.219,2912,5.219,2913,5.219,2914,5.219,2915,5.219,2916,5.219,2917,5.219,2918,5.219,2919,5.219,2920,5.219,2921,5.219]],["title/additional-documentation/hana-cloud-cockpit.html",[539,1.266,2817,2.053,2847,1.643,2861,2.053,2862,2.275]],["body/additional-documentation/hana-cloud-cockpit.html",[28,0.013,97,0.7,102,1.44,158,0.009,159,0.011,160,0.009,212,2.956,493,4.134,537,5.072,783,3.91,882,4.205,1030,3.104,1082,5.072,1279,3.91,1347,4.576,1382,5.072,1786,4.576,1976,4.576,2043,5.072,2094,4.576,2516,4.576,2534,4.576,2617,5.072,2701,4.576,2723,5.072,2745,5.072,2762,5.072,2861,4.576,2868,5.072,2922,5.825,2923,5.825,2924,5.825,2925,6.976,2926,5.825,2927,5.825,2928,5.825,2929,6.976,2930,6.976,2931,5.825,2932,5.825,2933,5.825,2934,5.825,2935,5.825,2936,7.467,2937,5.825,2938,5.825,2939,5.825,2940,5.825,2941,5.825,2942,5.825,2943,5.825,2944,5.825,2945,5.825,2946,5.825,2947,5.825,2948,5.825]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["0",{"_index":618,"title":{},"body":{"injectables/ArchiveService.html":{},"components/ComponentBarComponent.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"additional-documentation/manage-team.html":{}}}],["0\">+{{variable",{"_index":1803,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["0,'badge",{"_index":1799,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["0,\\'badge",{"_index":1828,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["0.4",{"_index":2106,"title":{},"body":{"components/SidebarComponent.html":{}}}],["0.5px",{"_index":2200,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["0.8.26",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["0.8s",{"_index":972,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.9",{"_index":1399,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.9s",{"_index":970,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0/1",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2550,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2558,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2553,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2559,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2548,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2549,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":713,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["04:30:00",{"_index":2057,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["05:00:00",{"_index":2072,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["06:00:00",{"_index":2060,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["08:00:00",{"_index":2063,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["0d62a7",{"_index":2211,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["0px",{"_index":723,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["1",{"_index":215,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/ModalServerErrorComponent.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/rcc.html":{}}}],["1.0",{"_index":2889,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["1.0s",{"_index":968,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["1.1s",{"_index":966,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["1.2s",{"_index":962,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["1.428571429",{"_index":2207,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["1.5rem",{"_index":2017,"title":{},"body":{"components/SettingsComponent.html":{}}}],["10",{"_index":2118,"title":{},"body":{"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/settings.html":{}}}],["100",{"_index":953,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["1000",{"_index":509,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["1000px",{"_index":1986,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["100px",{"_index":945,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["100vh",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["1044152156042",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":736,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["11.1.1",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":1819,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["12px",{"_index":1982,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["13.5px",{"_index":1823,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["13px",{"_index":2113,"title":{},"body":{"components/SidebarComponent.html":{}}}],["14:00:00",{"_index":2058,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["14px",{"_index":743,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{}}}],["15:00:00",{"_index":2061,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["15px",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/TeamManagerComponent.html":{}}}],["16.67",{"_index":2107,"title":{},"body":{"components/SidebarComponent.html":{}}}],["16a085",{"_index":709,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["16h24m4",{"_index":1406,"title":{},"body":{"components/NavbarComponent.html":{}}}],["16px",{"_index":978,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/TeamManagerComponent.html":{}}}],["17:00:00",{"_index":2064,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["17:00:00').gettime",{"_index":2074,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["17px",{"_index":1614,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["1995",{"_index":2056,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["19px",{"_index":1820,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["1archive",{"_index":544,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["1d75bc",{"_index":1818,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["1px",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/RccManagementComponent.html":{}}}],["2",{"_index":217,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ApplicationSettingsComponent.html":{},"components/LoginComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["2.0",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["2.0.8",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":976,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["200",{"_index":1586,"title":{},"body":{"injectables/ProductService.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["2000",{"_index":1926,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["201",{"_index":2398,"title":{},"body":{"injectables/UserService.html":{}}}],["2017",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["2018",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ArchiveService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["20px",{"_index":1980,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["21px",{"_index":722,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["23px",{"_index":1615,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["24",{"_index":1557,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["24h24'/%3e%3c/svg%3e",{"_index":1407,"title":{},"body":{"components/NavbarComponent.html":{}}}],["25",{"_index":2895,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["255",{"_index":1398,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["25px",{"_index":1994,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["27px",{"_index":1619,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["29",{"_index":2808,"title":{},"body":{"overview.html":{}}}],["29th",{"_index":603,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["2c3e50",{"_index":715,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["2px",{"_index":711,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NotificationComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["2rem",{"_index":2018,"title":{},"body":{"components/SettingsComponent.html":{}}}],["2reset",{"_index":547,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["3",{"_index":219,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/AddUserFormComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["3.0",{"_index":2600,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":670,"title":{},"body":{"components/ClipboardComponent.html":{},"additional-documentation/rcc.html":{}}}],["3000",{"_index":1780,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["30px",{"_index":1993,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["31",{"_index":2055,"title":{},"body":{"components/ShiftInfoComponent.html":{},"coverage.html":{}}}],["32",{"_index":1395,"title":{},"body":{"components/NavbarComponent.html":{}}}],["330px",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["333",{"_index":952,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["38",{"_index":1817,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["3a5066",{"_index":2102,"title":{},"body":{"components/SidebarComponent.html":{}}}],["3px",{"_index":721,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["3reset",{"_index":551,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["4",{"_index":221,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentBarComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4.1.3",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":974,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["400",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["40px",{"_index":948,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["42px",{"_index":1978,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["43",{"_index":1959,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["43586d",{"_index":2101,"title":{},"body":{"components/SidebarComponent.html":{}}}],["464446",{"_index":2117,"title":{},"body":{"components/SidebarComponent.html":{}}}],["465b77",{"_index":706,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["46px",{"_index":2109,"title":{},"body":{"components/SidebarComponent.html":{}}}],["4px",{"_index":731,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["5",{"_index":223,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/rcc.html":{}}}],["5.0.0",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["5/16",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":272,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/QueueControlComponent.html":{}}}],["500",{"_index":726,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{}}}],["5000",{"_index":1931,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["50px",{"_index":946,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["5px",{"_index":1383,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/SidebarComponent.html":{}}}],["6",{"_index":225,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["6.1.0",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["6.4.2",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":954,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/TeamManagerComponent.html":{}}}],["7",{"_index":227,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["70",{"_index":1618,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["7px",{"_index":2104,"title":{},"body":{"components/SidebarComponent.html":{}}}],["8",{"_index":522,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"overview.html":{}}}],["8.64e7",{"_index":1965,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["8081",{"_index":2647,"title":{},"body":{"index.html":{}}}],["8081/api",{"_index":2645,"title":{},"body":{"index.html":{}}}],["8082",{"_index":2650,"title":{},"body":{"index.html":{}}}],["8082/api",{"_index":2649,"title":{},"body":{"index.html":{}}}],["8083",{"_index":2653,"title":{},"body":{"index.html":{}}}],["8083/api",{"_index":2652,"title":{},"body":{"index.html":{}}}],["8h24m4",{"_index":1405,"title":{},"body":{"components/NavbarComponent.html":{}}}],["8px",{"_index":1617,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["94",{"_index":2116,"title":{},"body":{"components/SidebarComponent.html":{}}}],["9a3636",{"_index":2120,"title":{},"body":{"components/SidebarComponent.html":{}}}],["9px",{"_index":712,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["__metadata",{"_index":652,"title":{},"body":{"classes/BodyParser.html":{}}}],["_bsmodalref",{"_index":1283,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["_userlist",{"_index":1641,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["a.firstname",{"_index":2176,"title":{},"body":{"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["a.getaverageqday",{"_index":834,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["a.getincidenttotal",{"_index":862,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["a.name",{"_index":830,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["a.nav",{"_index":707,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["a:hover",{"_index":701,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["about'},{'name",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["about.component.css",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":2778,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1985,"title":{},"body":{"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["accordingly",{"_index":931,"title":{},"body":{"classes/Helper.html":{}}}],["acknowledgments",{"_index":2749,"title":{},"body":{"index.html":{}}}],["acount",{"_index":2928,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["action",{"_index":1973,"title":{},"body":{"components/RccManagementComponent.html":{},"license.html":{}}}],["action.affectedinumber.touppercase",{"_index":1079,"title":{},"body":{"injectables/LogService.html":{}}}],["action_id",{"_index":199,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["actionactiveloglist",{"_index":256,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["actionactiveloglist).length",{"_index":293,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["actiondid",{"_index":187,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["actiondid.availability_changed",{"_index":2407,"title":{},"body":{"injectables/UserService.html":{}}}],["actiondid.incident_assigned",{"_index":2415,"title":{},"body":{"injectables/UserService.html":{}}}],["actiondid.incident_unassigned",{"_index":2420,"title":{},"body":{"injectables/UserService.html":{}}}],["actiondid.prdouct_support_changed",{"_index":2411,"title":{},"body":{"injectables/UserService.html":{}}}],["actiondid.qm_changed",{"_index":2445,"title":{},"body":{"injectables/UserService.html":{}}}],["actiondid.queue_days_changed",{"_index":2426,"title":{},"body":{"injectables/UserService.html":{}}}],["actionentrylog",{"_index":161,"title":{"classes/ActionEntryLog.html":{}},"body":{"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["actionentrylogs",{"_index":1871,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["actionid",{"_index":165,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["actionlist",{"_index":983,"title":{},"body":{"injectables/LogService.html":{}}}],["actions",{"_index":1030,"title":{},"body":{"injectables/LogService.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["activatedroute",{"_index":1663,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["active",{"_index":1462,"title":{},"body":{"classes/Notification.html":{}}}],["activity",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["activitylog",{"_index":257,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["activitylogcomponent",{"_index":92,"title":{"components/ActivityLogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actual_component",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["add",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["add(logs",{"_index":573,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["addamount",{"_index":1884,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["addcustomdetail",{"_index":803,"title":{},"body":{"classes/Detail.html":{}}}],["addcustomdetail(message",{"_index":811,"title":{},"body":{"classes/Detail.html":{}}}],["added",{"_index":1755,"title":{},"body":{"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["addincident",{"_index":2305,"title":{},"body":{"injectables/UserService.html":{}}}],["addincident(user",{"_index":2322,"title":{},"body":{"injectables/UserService.html":{}}}],["adding",{"_index":782,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"changelog.html":{},"additional-documentation/rcc.html":{}}}],["additional",{"_index":2847,"title":{"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}},"body":{}}],["addlog",{"_index":987,"title":{},"body":{"injectables/LogService.html":{}}}],["addlog(affecteduser",{"_index":995,"title":{},"body":{"injectables/LogService.html":{}}}],["addproduct",{"_index":747,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{}}}],["addproduct(productshortname",{"_index":751,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{}}}],["addqueueday",{"_index":1874,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["addqueueday(user",{"_index":1883,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["address",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["adduser",{"_index":2306,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(firstname",{"_index":2324,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserformcomponent",{"_index":95,"title":{"components/AddUserFormComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["advanced",{"_index":555,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["advised",{"_index":1426,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["afauth",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["affected_user_id",{"_index":198,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["affectedinumber",{"_index":166,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["affecteduser",{"_index":997,"title":{},"body":{"injectables/LogService.html":{}}}],["affecteduser.inumber",{"_index":1061,"title":{},"body":{"injectables/LogService.html":{}}}],["affecteduser.name",{"_index":1060,"title":{},"body":{"injectables/LogService.html":{}}}],["affectedusername",{"_index":167,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["again",{"_index":1941,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["ahaan",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["aizasycoesp_ykwmmpjagwo3po7a9vgjnrrmlxq",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajs",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajs.appspot.com",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajs.firebaseapp.com",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajs.firebaseio.com",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":1716,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["alert(e.message",{"_index":1610,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["alert(error.message",{"_index":1768,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["align",{"_index":949,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["allen",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["alphabetically",{"_index":1591,"title":{},"body":{"injectables/ProductService.html":{}}}],["amount",{"_index":1748,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["amount).subscribe(r",{"_index":1945,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["and/or",{"_index":2771,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2613,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":2636,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":598,"title":{},"body":{"injectables/ArchiveService.html":{},"modules/CoreModule.html":{},"classes/Helper.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":320,"title":{},"body":{"components/AddUserFormComponent.html":{},"modules/AppModule.html":{},"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"modules/SettingsModule.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":470,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"modules/MaterialModule.html":{},"components/RccManagementComponent.html":{},"dependencies.html":{}}}],["angular/material/snack",{"_index":761,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["angular/platform",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QueueControlComponent.html":{},"modules/QueueDashboardRoutingModule.html":{},"dependencies.html":{}}}],["angular2html",{"_index":2639,"title":{},"body":{"index.html":{}}}],["angularfire2",{"_index":794,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["angularfire2/database",{"_index":600,"title":{},"body":{"injectables/ArchiveService.html":{},"modules/CoreModule.html":{},"injectables/LogService.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["angularfireauth",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["angularfireauthmodule",{"_index":791,"title":{},"body":{"modules/CoreModule.html":{}}}],["angularfiredatabase",{"_index":571,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["angularfiredatabasemodule",{"_index":797,"title":{},"body":{"modules/CoreModule.html":{}}}],["angularfirelist",{"_index":2165,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["angularfiremodule",{"_index":793,"title":{},"body":{"modules/CoreModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":800,"title":{},"body":{"modules/CoreModule.html":{}}}],["angularfireobject",{"_index":1445,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["animated",{"_index":1233,"title":{},"body":{"injectables/LoginService.html":{}}}],["animation",{"_index":959,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["announcements",{"_index":1458,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["another",{"_index":2854,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["api",{"_index":984,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.component",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["app.js",{"_index":2733,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":99,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applastupdate",{"_index":2081,"title":{},"body":{"components/SidebarComponent.html":{}}}],["applcations",{"_index":2942,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["application",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["application/json",{"_index":596,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["applicationchangeflag",{"_index":1642,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["applications",{"_index":537,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["applicationsettingscomponent",{"_index":101,"title":{"components/ApplicationSettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":355,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutes",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":366,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["appshort",{"_index":1357,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["appversion",{"_index":2082,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["apr",{"_index":1951,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["archive",{"_index":439,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"additional-documentation/settings.html":{}}}],["archive.service",{"_index":799,"title":{},"body":{"modules/CoreModule.html":{}}}],["archive_entry",{"_index":587,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archive_key",{"_index":577,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archive_log",{"_index":585,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archive_user",{"_index":589,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archiveentry",{"_index":607,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archivelogapi",{"_index":559,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archiventryapi",{"_index":560,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archives",{"_index":543,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["archiveservice",{"_index":432,"title":{"injectables/ArchiveService.html":{}},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["archiveuserapi",{"_index":561,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["archiving",{"_index":503,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["area",{"_index":2920,"title":{},"body":{"additional-documentation/settings.html":{}}}],["aren't",{"_index":2480,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["args",{"_index":824,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["argument",{"_index":2383,"title":{},"body":{"injectables/UserService.html":{}}}],["arising",{"_index":2802,"title":{},"body":{"license.html":{}}}],["around",{"_index":1220,"title":{},"body":{"injectables/LoginService.html":{}}}],["arr",{"_index":686,"title":{},"body":{"components/ComponentBarComponent.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{}}}],["arr.foreach(r",{"_index":858,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["arr.push(key",{"_index":2282,"title":{},"body":{"classes/User.html":{}}}],["arr.slice(0",{"_index":287,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["arr.sort(function",{"_index":934,"title":{},"body":{"classes/Helper.html":{}}}],["arr[i",{"_index":846,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["array",{"_index":265,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/LogService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{}}}],["ase",{"_index":2937,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["ask",{"_index":1693,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["assign",{"_index":1689,"title":{},"body":{"components/QueueControlComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{}}}],["assignable",{"_index":2886,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["assigned",{"_index":1521,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["assigning",{"_index":1694,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"additional-documentation/manage-team.html":{}}}],["assignment",{"_index":1565,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["assisted",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["associated",{"_index":2760,"title":{},"body":{"license.html":{}}}],["async",{"_index":1787,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["attempt",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["attempts",{"_index":2856,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["auth",{"_index":1185,"title":{},"body":{"injectables/LoginService.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["auth_token",{"_index":1189,"title":{},"body":{"injectables/LoginService.html":{}}}],["authdomain",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["authenticatedwithbasictoken",{"_index":1154,"title":{},"body":{"injectables/LoginService.html":{}}}],["authenticatedwithbasictoken(token",{"_index":1167,"title":{},"body":{"injectables/LoginService.html":{}}}],["authenticatewithfirebase",{"_index":1155,"title":{},"body":{"injectables/LoginService.html":{}}}],["authenticatewithfirebase(username",{"_index":1170,"title":{},"body":{"injectables/LoginService.html":{}}}],["authenticatewithusernamepassword",{"_index":1156,"title":{},"body":{"injectables/LoginService.html":{}}}],["authenticatewithusernamepassword(username",{"_index":1172,"title":{},"body":{"injectables/LoginService.html":{}}}],["authflag",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["authmessage",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["authorization",{"_index":1207,"title":{},"body":{"injectables/LoginService.html":{}}}],["authors",{"_index":2794,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":1150,"title":{},"body":{"injectables/LoginService.html":{}}}],["auto",{"_index":672,"title":{},"body":{"components/ClipboardComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{}}}],["availability",{"_index":836,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"injectables/UserService.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["availability_changed",{"_index":220,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["availabilty",{"_index":2870,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["available",{"_index":1790,"title":{},"body":{"components/QueueControlComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/settings.html":{}}}],["avg",{"_index":1792,"title":{},"body":{"components/QueueControlComponent.html":{},"classes/User.html":{}}}],["away",{"_index":2905,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["awesome",{"_index":1559,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["b",{"_index":764,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["b.firstname",{"_index":2177,"title":{},"body":{"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["b.getaverageqday",{"_index":835,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["b.getincidenttotal",{"_index":863,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["b.name",{"_index":831,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["back",{"_index":2496,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["backend",{"_index":916,"title":{},"body":{"classes/Helper.html":{},"index.html":{}}}],["background",{"_index":704,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["badge",{"_index":1801,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["balance",{"_index":2857,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["bar",{"_index":676,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["bar'},{'name",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["bar.component",{"_index":1846,"title":{},"body":{"modules/QueueDashboardModule.html":{}}}],["bar.component.css",{"_index":677,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.html",{"_index":678,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.ts",{"_index":675,"title":{},"body":{"components/ComponentBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":683,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.ts:14",{"_index":691,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.ts:17",{"_index":690,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.ts:23",{"_index":685,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar.component.ts:39",{"_index":688,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["bar/component",{"_index":674,"title":{},"body":{"components/ComponentBarComponent.html":{},"modules/QueueDashboardModule.html":{},"coverage.html":{}}}],["base",{"_index":912,"title":{},"body":{"classes/Helper.html":{}}}],["bash",{"_index":2692,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1208,"title":{},"body":{"injectables/LoginService.html":{}}}],["batch_log_add",{"_index":620,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_log_add.length",{"_index":624,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_log_add.push(observableof",{"_index":625,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_log_add.push(this.http.post(this.archivelogapi",{"_index":623,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_user_add",{"_index":611,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_user_add.length",{"_index":617,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_user_add.push(observableof",{"_index":619,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["batch_user_add.push(this.http.post(this.archiveuserapi",{"_index":615,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["become",{"_index":2896,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["before",{"_index":1525,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"changelog.html":{}}}],["behavior",{"_index":1016,"title":{},"body":{"injectables/LogService.html":{}}}],["behaviorsubject",{"_index":1014,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["being",{"_index":476,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["below",{"_index":2620,"title":{},"body":{"index.html":{}}}],["between",{"_index":2661,"title":{},"body":{"index.html":{}}}],["black",{"_index":1493,"title":{},"body":{"components/NotificationComponent.html":{}}}],["block",{"_index":957,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["board",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{}}}],["board').valuechanges().subscribe((r",{"_index":1448,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["board'},{'name",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["board.component",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["board.component.css",{"_index":1410,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.html",{"_index":1411,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.ts",{"_index":1409,"title":{},"body":{"components/NoticeBoardComponent.html":{},"coverage.html":{}}}],["board.component.ts:11",{"_index":1418,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.ts:12",{"_index":1417,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.ts:13",{"_index":1414,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.ts:15",{"_index":1416,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board.component.ts:18",{"_index":1415,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["board/flag').set(flag",{"_index":1457,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["board/msg').set(msg",{"_index":1456,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["board/notice",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/NoticeBoardComponent.html":{},"coverage.html":{}}}],["body",{"_index":613,"title":{},"body":{"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"classes/Helper.html":{},"injectables/LogService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["body.d",{"_index":651,"title":{},"body":{"classes/BodyParser.html":{}}}],["body.d.results",{"_index":649,"title":{},"body":{"classes/BodyParser.html":{}}}],["body.d.results.map(el",{"_index":654,"title":{},"body":{"classes/BodyParser.html":{}}}],["body.is_available",{"_index":2404,"title":{},"body":{"injectables/UserService.html":{}}}],["bodyparser",{"_index":640,"title":{"classes/BodyParser.html":{}},"body":{"classes/BodyParser.html":{},"coverage.html":{}}}],["bold",{"_index":2202,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["bool",{"_index":2263,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":463,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"classes/Notification.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/WorkShift.html":{}}}],["bootstrap",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/modal",{"_index":1195,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"modules/SharedModule.html":{}}}],["bootstrap/modal/bs",{"_index":1292,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["border",{"_index":728,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["both",{"_index":2503,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["bottom",{"_index":729,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["box",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["brand",{"_index":718,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["break",{"_index":1429,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["broken",{"_index":1545,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["browse",{"_index":2805,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ModalServerErrorComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["bsmodalref",{"_index":1231,"title":{},"body":{"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["bsmodalref.content.message",{"_index":1239,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["bsmodalref.content.oncancel.subscribe",{"_index":1246,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{}}}],["bsmodalref.content.onconfirm.subscribe",{"_index":1258,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{}}}],["bsmodalref.content.onconfirm.subscribe((input",{"_index":1244,"title":{},"body":{"injectables/LoginService.html":{}}}],["bsmodalref.content.onconfirm.subscribe(val",{"_index":1915,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["bsmodalref.content.onhide.subscribe",{"_index":1248,"title":{},"body":{"injectables/LoginService.html":{}}}],["bsmodalref.content.title",{"_index":1237,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["bsmodalservice",{"_index":1165,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["btn",{"_index":2204,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["btnref",{"_index":517,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["btoa(`${username}:${password",{"_index":1209,"title":{},"body":{"injectables/LoginService.html":{}}}],["build",{"_index":2678,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildbodyfromuserobject",{"_index":2307,"title":{},"body":{"injectables/UserService.html":{}}}],["buildbodyfromuserobject(user",{"_index":2326,"title":{},"body":{"injectables/UserService.html":{}}}],["built",{"_index":2736,"title":{},"body":{"index.html":{}}}],["buser.getaverageqday",{"_index":1814,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["buser.getincidentamount(paramid",{"_index":1812,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["buser.getincidenttotal",{"_index":1813,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["buser.inumber",{"_index":1811,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["buser.name",{"_index":1810,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["busy",{"_index":2276,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["button",{"_index":554,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["button.badge",{"_index":2205,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["buttons",{"_index":536,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["buttons|description",{"_index":2913,"title":{},"body":{"additional-documentation/settings.html":{}}}],["c",{"_index":2752,"title":{},"body":{"license.html":{}}}],["c73f40",{"_index":2119,"title":{},"body":{"components/SidebarComponent.html":{}}}],["c8cacc",{"_index":2201,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["cache",{"_index":1375,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cached",{"_index":999,"title":{},"body":{"injectables/LogService.html":{}}}],["cachedinumber",{"_index":1373,"title":{},"body":{"components/NavbarComponent.html":{}}}],["call",{"_index":982,"title":{},"body":{"injectables/LogService.html":{},"classes/User.html":{}}}],["called",{"_index":2499,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["callout",{"_index":2003,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["cancel",{"_index":1279,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["card",{"_index":2112,"title":{},"body":{"components/SidebarComponent.html":{}}}],["card:after",{"_index":2111,"title":{},"body":{"components/SidebarComponent.html":{}}}],["case",{"_index":1533,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["catcherror",{"_index":1022,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["catcherror((e",{"_index":2381,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(e",{"_index":1213,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["catcherror(err",{"_index":1046,"title":{},"body":{"injectables/LogService.html":{}}}],["center",{"_index":950,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["change",{"_index":1613,"title":{},"body":{"components/QmInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{}}}],["changed",{"_index":1944,"title":{},"body":{"components/RccManagementComponent.html":{},"injectables/UserService.html":{}}}],["changelog",{"_index":2533,"title":{"changelog.html":{}},"body":{}}],["changeqm",{"_index":1598,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["changes",{"_index":1723,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["changing",{"_index":1526,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["characters",{"_index":335,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["charge",{"_index":2757,"title":{},"body":{"license.html":{}}}],["check",{"_index":323,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/rcc.html":{}}}],["check_circle",{"_index":1975,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["checkavailability",{"_index":2218,"title":{},"body":{"classes/User.html":{}}}],["checkbox",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/RccManagementComponent.html":{}}}],["checkbox:checked",{"_index":2000,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["checked",{"_index":1924,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["checklist",{"_index":1974,"title":{},"body":{"components/RccManagementComponent.html":{},"additional-documentation/rcc.html":{}}}],["child",{"_index":734,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["chrome",{"_index":1348,"title":{},"body":{"components/ModalServerErrorComponent.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["chrome?\\n2.please",{"_index":1785,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["cinumber",{"_index":1055,"title":{},"body":{"injectables/LogService.html":{}}}],["circle",{"_index":1806,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["claim",{"_index":2797,"title":{},"body":{"license.html":{}}}],["class",{"_index":33,"title":{"classes/ActionEntryLog.html":{},"classes/BodyParser.html":{},"classes/Detail.html":{},"classes/Helper.html":{},"classes/Notification.html":{},"classes/QmUser.html":{},"classes/User.html":{},"classes/WorkShift.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"coverage.html":{}}}],["class=\"on",{"_index":1795,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["classes",{"_index":162,"title":{},"body":{"classes/ActionEntryLog.html":{},"classes/BodyParser.html":{},"classes/Detail.html":{},"classes/Helper.html":{},"classes/Notification.html":{},"classes/QmUser.html":{},"classes/User.html":{},"classes/WorkShift.html":{},"overview.html":{}}}],["cleaner",{"_index":1543,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["clearactionentrylogs",{"_index":440,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["clearing",{"_index":488,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["click",{"_index":493,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ModalServerErrorComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["client",{"_index":927,"title":{},"body":{"classes/Helper.html":{},"injectables/WebSocketAbstractService.html":{},"dependencies.html":{},"index.html":{}}}],["clients",{"_index":1724,"title":{},"body":{"components/QueueControlComponent.html":{},"index.html":{}}}],["clip",{"_index":1989,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["clipboard",{"_index":658,"title":{},"body":{"components/ClipboardComponent.html":{},"modules/QueueDashboardModule.html":{},"dependencies.html":{}}}],["clipboard'},{'name",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["clipboard.component.css",{"_index":659,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["clipboard.component.html",{"_index":660,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["clipboard/clipboard.component",{"_index":1841,"title":{},"body":{"modules/QueueDashboardModule.html":{}}}],["clipboardcomponent",{"_index":104,"title":{"components/ClipboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clipboardmodule",{"_index":1843,"title":{},"body":{"modules/QueueDashboardModule.html":{}}}],["clipboardtext",{"_index":661,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["close",{"_index":495,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["cloud",{"_index":2817,"title":{"additional-documentation/hana-cloud-cockpit.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["clues",{"_index":922,"title":{},"body":{"classes/Helper.html":{}}}],["cluster_appmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":785,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":786,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_queuedashboardmodule",{"_index":1836,"title":{},"body":{"modules/QueueDashboardModule.html":{},"overview.html":{}}}],["cluster_queuedashboardmodule_declarations",{"_index":1837,"title":{},"body":{"modules/QueueDashboardModule.html":{},"overview.html":{}}}],["cluster_queuedashboardmodule_imports",{"_index":1838,"title":{},"body":{"modules/QueueDashboardModule.html":{},"overview.html":{}}}],["cluster_rccdashboardmodule",{"_index":1862,"title":{},"body":{"modules/RccDashboardModule.html":{},"overview.html":{}}}],["cluster_rccdashboardmodule_declarations",{"_index":1863,"title":{},"body":{"modules/RccDashboardModule.html":{},"overview.html":{}}}],["cluster_rccdashboardmodule_imports",{"_index":1864,"title":{},"body":{"modules/RccDashboardModule.html":{}}}],["cluster_settingsmodule",{"_index":2020,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2021,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2022,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_sharedmodule",{"_index":2027,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2028,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2030,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2029,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_teamdashboardmodule",{"_index":2136,"title":{},"body":{"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["cluster_teamdashboardmodule_declarations",{"_index":2137,"title":{},"body":{"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["cluster_teamdashboardmodule_imports",{"_index":2138,"title":{},"body":{"modules/TeamDashboardModule.html":{}}}],["cockpit",{"_index":2862,"title":{"additional-documentation/hana-cloud-cockpit.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["code",{"_index":920,"title":{},"body":{"classes/Helper.html":{},"components/PatchNotesComponent.html":{},"injectables/WebSocketAbstractService.html":{},"changelog.html":{}}}],["collaborators",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["color",{"_index":705,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["combination",{"_index":2502,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["comes",{"_index":211,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["command",{"_index":2630,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2688,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{}}}],["community",{"_index":2705,"title":{},"body":{"index.html":{}}}],["compile",{"_index":2681,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["compiles",{"_index":2679,"title":{},"body":{"index.html":{}}}],["complete",{"_index":494,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["componentbarcomponent",{"_index":106,"title":{"components/ComponentBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentid",{"_index":689,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/WebSocketAbstractService.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/settings.html":{}}}],["components/loading",{"_index":2033,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/modals/modal",{"_index":2038,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/navbar/navbar.component",{"_index":2036,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/notification/notification.component",{"_index":2035,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/sidebar/sidebar.component",{"_index":2037,"title":{},"body":{"modules/SharedModule.html":{}}}],["componentsettingscomponent",{"_index":108,"title":{"components/ComponentSettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["computer",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["concept",{"_index":2476,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["conditions",{"_index":2777,"title":{},"body":{"license.html":{}}}],["config",{"_index":2725,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1273,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/RccManagementComponent.html":{}}}],["confirm'},{'name",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["confirm(\"are",{"_index":1942,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["confirm(input",{"_index":1309,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{}}}],["confirm.component",{"_index":1714,"title":{},"body":{"components/QueueControlComponent.html":{},"modules/SharedModule.html":{}}}],["confirm.component.css",{"_index":1274,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.html",{"_index":1275,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts",{"_index":1272,"title":{},"body":{"components/ModalConfirmComponent.html":{},"coverage.html":{}}}],["confirm.component.ts:14",{"_index":1291,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:15",{"_index":1288,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:16",{"_index":1289,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:17",{"_index":1290,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:18",{"_index":1282,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:24",{"_index":1287,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:30",{"_index":1285,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:35",{"_index":1284,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm.component.ts:40",{"_index":1286,"title":{},"body":{"components/ModalConfirmComponent.html":{}}}],["confirm/modal",{"_index":1271,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/QueueControlComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["confirmation",{"_index":1524,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["connect",{"_index":2465,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["connect(key",{"_index":2467,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["connect(this.key",{"_index":1507,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{}}}],["connection",{"_index":2477,"title":{},"body":{"injectables/WebSocketAbstractService.html":{},"license.html":{}}}],["connections",{"_index":2662,"title":{},"body":{"index.html":{}}}],["connects",{"_index":2602,"title":{},"body":{"index.html":{}}}],["console.error",{"_index":923,"title":{},"body":{"classes/Helper.html":{}}}],["console.error('an",{"_index":932,"title":{},"body":{"classes/Helper.html":{}}}],["console.error(error",{"_index":906,"title":{},"body":{"classes/Helper.html":{}}}],["console.log(\"hello",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"login",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"received",{"_index":2491,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["console.log(msg",{"_index":1967,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["console.log(new",{"_index":2073,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["console.log(res",{"_index":1486,"title":{},"body":{"components/NotificationComponent.html":{}}}],["console.log(this.group(value",{"_index":869,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["console.log(this.merge(value",{"_index":871,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["console.log(value",{"_index":870,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["const",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"injectables/ProductService.html":{},"modules/QueueDashboardRoutingModule.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["constructor(_bsmodalref",{"_index":1281,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["constructor(afauth",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["constructor(db",{"_index":1413,"title":{},"body":{"components/NoticeBoardComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":569,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{}}}],["constructor(inumber",{"_index":1625,"title":{},"body":{"classes/QmUser.html":{},"classes/User.html":{}}}],["constructor(location",{"_index":2509,"title":{},"body":{"classes/WorkShift.html":{}}}],["constructor(loginservice",{"_index":1361,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(logservice",{"_index":262,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["constructor(notificationservice",{"_index":1479,"title":{},"body":{"components/NotificationComponent.html":{}}}],["constructor(options",{"_index":181,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["constructor(previousvalue",{"_index":804,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(private",{"_index":1294,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["constructor(productservice",{"_index":682,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{}}}],["constructor(public",{"_index":284,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalInfoComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":1662,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["constructor(type",{"_index":1464,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(userserivce",{"_index":445,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["constructor(userservice",{"_index":312,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/QmInfoComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(websocketabstractservice",{"_index":1497,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{}}}],["contact",{"_index":1351,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["contain",{"_index":921,"title":{},"body":{"classes/Helper.html":{}}}],["containing",{"_index":2708,"title":{},"body":{"index.html":{}}}],["contains",{"_index":2686,"title":{},"body":{"index.html":{}}}],["content",{"_index":595,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"interfaces/ModalInterface.html":{},"injectables/ProductService.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["contract",{"_index":2800,"title":{},"body":{"license.html":{}}}],["control",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/QueueControlComponent.html":{}}}],["control'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["control.component",{"_index":1842,"title":{},"body":{"modules/QueueDashboardModule.html":{}}}],["control.component.css",{"_index":1639,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.html",{"_index":1640,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts",{"_index":1638,"title":{},"body":{"components/QueueControlComponent.html":{},"coverage.html":{}}}],["control.component.ts:105",{"_index":1672,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:128",{"_index":1674,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:150",{"_index":1679,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:159",{"_index":1680,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:178",{"_index":1669,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:184",{"_index":1668,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:24",{"_index":1711,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:25",{"_index":1681,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:28",{"_index":1683,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:29",{"_index":1687,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:30",{"_index":1684,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:31",{"_index":1686,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:32",{"_index":1709,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:33",{"_index":1710,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:35",{"_index":1708,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:37",{"_index":1682,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:40",{"_index":1685,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:43",{"_index":1707,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:44",{"_index":1700,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:45",{"_index":1696,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:46",{"_index":1692,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:47",{"_index":1690,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:48",{"_index":1704,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:49",{"_index":1665,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:53",{"_index":1712,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:54",{"_index":1688,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:59",{"_index":1670,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control.component.ts:96",{"_index":1676,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["control/queue",{"_index":1637,"title":{},"body":{"components/QueueControlComponent.html":{},"modules/QueueDashboardModule.html":{},"coverage.html":{}}}],["control:focus",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["converttominutes",{"_index":2507,"title":{},"body":{"classes/WorkShift.html":{}}}],["converttominutes(hours",{"_index":2513,"title":{},"body":{"classes/WorkShift.html":{}}}],["copies",{"_index":2773,"title":{},"body":{"license.html":{}}}],["copy",{"_index":667,"title":{},"body":{"components/ClipboardComponent.html":{},"classes/User.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["copy(user",{"_index":2242,"title":{},"body":{"classes/User.html":{}}}],["copyright",{"_index":2751,"title":{},"body":{"license.html":{}}}],["core",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["core/archive.service",{"_index":471,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["core/core.module",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["core/log.service",{"_index":280,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{}}}],["core/login.service",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["core/notification.service",{"_index":1484,"title":{},"body":{"components/NotificationComponent.html":{}}}],["core/product.service",{"_index":469,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["core/queuestate.service",{"_index":1715,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["core/user.service",{"_index":322,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["coremodule",{"_index":367,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2927,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["count",{"_index":2096,"title":{},"body":{"components/SidebarComponent.html":{},"classes/User.html":{},"additional-documentation/settings.html":{}}}],["counted",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["counter",{"_index":1555,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["counts",{"_index":2881,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/settings.html":{}}}],["counts?\\nthis",{"_index":483,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["coverage",{"_index":2537,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1057,"title":{},"body":{"injectables/LogService.html":{},"index.html":{}}}],["creates",{"_index":2713,"title":{},"body":{"index.html":{}}}],["currbool",{"_index":2188,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["currbool).subscribe(t",{"_index":2191,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["current",{"_index":1611,"title":{},"body":{"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{}}}],["current_q_days",{"_index":2291,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["currentdate",{"_index":1872,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["currently",{"_index":2683,"title":{},"body":{"index.html":{}}}],["currentqdays",{"_index":636,"title":{},"body":{"injectables/ArchiveService.html":{},"classes/User.html":{}}}],["cursor",{"_index":1998,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["custom",{"_index":1517,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["custom_message",{"_index":214,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["d",{"_index":1888,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["d.setdate(d.getdate",{"_index":1958,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["d2d2d2",{"_index":1381,"title":{},"body":{"components/NavbarComponent.html":{}}}],["d='m4",{"_index":1404,"title":{},"body":{"components/NavbarComponent.html":{}}}],["damages",{"_index":2798,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1802,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["dashboard",{"_index":1549,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{},"changelog.html":{}}}],["dashboard'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["dashboard.component",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/TeamDashboardModule.html":{}}}],["dashboard.component.css",{"_index":1832,"title":{},"body":{"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["dashboard.component.html",{"_index":1833,"title":{},"body":{"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1831,"title":{},"body":{"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:13",{"_index":1835,"title":{},"body":{"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["dashboard.component.ts:8",{"_index":1834,"title":{},"body":{"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["dashboard.module",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard.module.ts",{"_index":1840,"title":{},"body":{"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/TeamDashboardModule.html":{}}}],["dashboard/add",{"_index":304,"title":{},"body":{"components/AddUserFormComponent.html":{},"coverage.html":{}}}],["dashboard/clipboard/clipboard.component.ts",{"_index":657,"title":{},"body":{"components/ClipboardComponent.html":{},"coverage.html":{}}}],["dashboard/clipboard/clipboard.component.ts:10",{"_index":663,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["dashboard/clipboard/clipboard.component.ts:15",{"_index":664,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["dashboard/clipboard/clipboard.component.ts:9",{"_index":666,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["dashboard/component",{"_index":673,"title":{},"body":{"components/ComponentBarComponent.html":{},"coverage.html":{}}}],["dashboard/pipe/filter.pipe.ts",{"_index":820,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{}}}],["dashboard/pipe/filter.pipe.ts:10",{"_index":825,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["dashboard/pipe/filter.pipe.ts:106",{"_index":2125,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/pipe/filter.pipe.ts:123",{"_index":2131,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/pipe/filter.pipe.ts:128",{"_index":2129,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/pipe/filter.pipe.ts:136",{"_index":2134,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/pipe/filter.pipe.ts:150",{"_index":2135,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/pipe/filter.pipe.ts:23",{"_index":2123,"title":{},"body":{"pipes/SortByAlpha.html":{}}}],["dashboard/pipe/filter.pipe.ts:49",{"_index":2122,"title":{},"body":{"pipes/SortByAVGQDay.html":{}}}],["dashboard/pipe/filter.pipe.ts:74",{"_index":935,"title":{},"body":{"pipes/IsAvailable.html":{}}}],["dashboard/pipe/filter.pipe.ts:89",{"_index":2127,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["dashboard/qm",{"_index":1595,"title":{},"body":{"components/QmInfoComponent.html":{},"coverage.html":{}}}],["dashboard/queue",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"coverage.html":{}}}],["dashboard/rcc",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"coverage.html":{}}}],["dashboard/shift",{"_index":2047,"title":{},"body":{"components/ShiftInfoComponent.html":{},"coverage.html":{}}}],["dashboard/team",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{}}}],["data",{"_index":911,"title":{},"body":{"classes/Helper.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"injectables/WebSocketAbstractService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["data.filter((action",{"_index":1078,"title":{},"body":{"injectables/LogService.html":{}}}],["data.inputpassword",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.inputusername",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.socket_id",{"_index":1729,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["data.sort(function",{"_index":763,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["data:text/plain;charset=utf",{"_index":521,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["database",{"_index":212,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ApplicationSettingsComponent.html":{},"classes/Helper.html":{},"injectables/LogService.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"classes/User.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["databases",{"_index":2723,"title":{},"body":{"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["databaseurl",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":195,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/ArchiveService.html":{},"classes/Helper.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"additional-documentation/rcc.html":{}}}],["date('december",{"_index":2054,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["date(d",{"_index":1961,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["date(date",{"_index":249,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["date(i.timestamp",{"_index":1745,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["date(options.timestamp",{"_index":240,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["date.replace(/['\"]+/g",{"_index":248,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["dateinrange",{"_index":875,"title":{},"body":{"classes/Helper.html":{}}}],["dateinrange(date",{"_index":881,"title":{},"body":{"classes/Helper.html":{}}}],["datewithin",{"_index":876,"title":{},"body":{"classes/Helper.html":{}}}],["datewithin(date",{"_index":885,"title":{},"body":{"classes/Helper.html":{}}}],["day",{"_index":1523,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{}}}],["days",{"_index":475,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["daysleftinquarter",{"_index":1875,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["daysleftinquarter(d",{"_index":1886,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["db",{"_index":985,"title":{},"body":{"injectables/LogService.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dd",{"_index":527,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["dd').ready",{"_index":532,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["deal",{"_index":2761,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2803,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1948,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["declarations",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["decriment",{"_index":2880,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{}}}],["dedicated",{"_index":2887,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["deep",{"_index":739,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QueueControlComponent.html":{}}}],["deepcopy",{"_index":877,"title":{},"body":{"classes/Helper.html":{}}}],["deepcopy(obj",{"_index":889,"title":{},"body":{"classes/Helper.html":{}}}],["default",{"_index":266,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Helper.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultdescription",{"_index":168,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["define",{"_index":2486,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["definition",{"_index":2893,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["definitions",{"_index":1720,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["delay",{"_index":965,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["delete",{"_index":1005,"title":{},"body":{"injectables/LogService.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"additional-documentation/settings.html":{}}}],["deleteitem",{"_index":2147,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["deleteitem(user",{"_index":2152,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["deleteuser",{"_index":2308,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(inumber",{"_index":2328,"title":{},"body":{"injectables/UserService.html":{}}}],["denvironmentmsg",{"_index":1358,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dependencies",{"_index":357,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":2740,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":2701,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["deploy.sh",{"_index":2696,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2618,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":501,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/UserService.html":{}}}],["description",{"_index":296,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/LogService.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{}}}],["designed",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["detail",{"_index":169,"title":{"classes/Detail.html":{}},"body":{"classes/ActionEntryLog.html":{},"classes/Detail.html":{},"injectables/LogService.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["detail().addcustomdetail(\"qm",{"_index":2446,"title":{},"body":{"injectables/UserService.html":{}}}],["detail().addcustomdetail(user.hasrole(productshortname",{"_index":2412,"title":{},"body":{"injectables/UserService.html":{}}}],["detail(user.currentqdays",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{}}}],["detail(user.getstatus",{"_index":2408,"title":{},"body":{"injectables/UserService.html":{}}}],["detail(user.incidentcounts[productshortname",{"_index":2416,"title":{},"body":{"injectables/UserService.html":{}}}],["details",{"_index":2748,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["determine",{"_index":2882,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["dev",{"_index":2648,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev,prod,sandbox",{"_index":2724,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2677,"title":{},"body":{"index.html":{}}}],["developed",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["development",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["dialog",{"_index":1250,"title":{},"body":{"injectables/LoginService.html":{}}}],["directive",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["directory",{"_index":2732,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/manage-team.html":{}}}],["dispatch",{"_index":2866,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dispatcher",{"_index":2818,"title":{"additional-documentation/manual-queue-dispatcher.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["dispatching",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["display",{"_index":955,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/RccManagementComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{}}}],["displayed",{"_index":2907,"title":{},"body":{"additional-documentation/settings.html":{}}}],["displaying",{"_index":291,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["displays",{"_index":1705,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["distribute",{"_index":2769,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["distributed",{"_index":2611,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":2605,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["div",{"_index":951,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["div#add",{"_index":2198,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["div#qclipboard",{"_index":668,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["div#qm",{"_index":1616,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["div#rcc",{"_index":1981,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["doc_url",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs",{"_index":2863,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["document.body.appendchild(element",{"_index":530,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["document.body.removechild(element",{"_index":533,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["document.createelement('a",{"_index":519,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["document.getelementbyid('btn",{"_index":518,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["documentation",{"_index":1377,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["documentation/introduction.html",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doing",{"_index":1529,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/settings.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["domsanitizer",{"_index":448,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["down",{"_index":913,"title":{},"body":{"classes/Helper.html":{},"injectables/LoginService.html":{}}}],["download",{"_index":441,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["download(filename",{"_index":452,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["dropdown",{"_index":2938,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["dummy",{"_index":2718,"title":{},"body":{"index.html":{}}}],["duration",{"_index":508,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["dynamic",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{},"components/QmInfoComponent.html":{}}}],["e74c3c",{"_index":719,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/RccManagementComponent.html":{}}}],["early",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["ease",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/LoadingSpinnerComponent.html":{}}}],["easy",{"_index":552,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["edit",{"_index":1976,"title":{},"body":{"components/RccManagementComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["efficiently",{"_index":2850,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["el",{"_index":655,"title":{},"body":{"classes/BodyParser.html":{}}}],["el.action_id",{"_index":1040,"title":{},"body":{"injectables/LogService.html":{}}}],["el.affected_user_id",{"_index":1038,"title":{},"body":{"injectables/LogService.html":{}}}],["el.affected_user_name",{"_index":1039,"title":{},"body":{"injectables/LogService.html":{}}}],["el.current_q_days",{"_index":2373,"title":{},"body":{"injectables/UserService.html":{}}}],["el.description",{"_index":1041,"title":{},"body":{"injectables/LogService.html":{}}}],["el.detail",{"_index":1042,"title":{},"body":{"injectables/LogService.html":{}}}],["el.first_name",{"_index":2370,"title":{},"body":{"injectables/UserService.html":{}}}],["el.incident_counts",{"_index":2376,"title":{},"body":{"injectables/UserService.html":{}}}],["el.incident_threshold",{"_index":2374,"title":{},"body":{"injectables/UserService.html":{}}}],["el.is_available",{"_index":2372,"title":{},"body":{"injectables/UserService.html":{}}}],["el.last_name",{"_index":2371,"title":{},"body":{"injectables/UserService.html":{}}}],["el.logger_id",{"_index":1037,"title":{},"body":{"injectables/LogService.html":{}}}],["el.supported_products",{"_index":2377,"title":{},"body":{"injectables/UserService.html":{}}}],["el.timestamp",{"_index":1043,"title":{},"body":{"injectables/LogService.html":{}}}],["el.usage_percent",{"_index":2375,"title":{},"body":{"injectables/UserService.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["element.click",{"_index":531,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["element.incidentcounts[this.paramid",{"_index":1775,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["element.setattribute('download",{"_index":524,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["element.setattribute('href",{"_index":520,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["element.setattribute('id",{"_index":526,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["element.style.display",{"_index":528,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["email",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["embarrassing",{"_index":1257,"title":{},"body":{"injectables/LoginService.html":{}}}],["eminutes",{"_index":2528,"title":{},"body":{"classes/WorkShift.html":{}}}],["empty",{"_index":1223,"title":{},"body":{"injectables/LoginService.html":{}}}],["enable",{"_index":1252,"title":{},"body":{"injectables/LoginService.html":{},"additional-documentation/manage-team.html":{}}}],["enableauth",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":2883,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["enabledemo",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encodeuricomponent(text",{"_index":523,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["end",{"_index":883,"title":{},"body":{"classes/Helper.html":{},"injectables/LogService.html":{},"components/RccManagementComponent.html":{},"classes/WorkShift.html":{},"index.html":{}}}],["ends",{"_index":2894,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["engineer",{"_index":1556,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["engineers",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["enter",{"_index":1238,"title":{},"body":{"injectables/LoginService.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"additional-documentation/settings.html":{}}}],["enties",{"_index":550,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["entities",{"_index":2659,"title":{},"body":{"index.html":{}}}],["entries",{"_index":548,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["entry",{"_index":511,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{}}}],["entrycomponents",{"_index":2032,"title":{},"body":{"modules/SharedModule.html":{}}}],["entrylogsubject",{"_index":986,"title":{},"body":{"injectables/LogService.html":{}}}],["enum",{"_index":213,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["enumerations",{"_index":2598,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":795,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"injectables/ProductService.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.api",{"_index":1011,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["environment.appshort",{"_index":1365,"title":{},"body":{"components/NavbarComponent.html":{}}}],["environment.appversion",{"_index":2087,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment.doc_url",{"_index":1371,"title":{},"body":{"components/NavbarComponent.html":{}}}],["environment.enableauth",{"_index":1204,"title":{},"body":{"injectables/LoginService.html":{}}}],["environment.enabledemo",{"_index":1372,"title":{},"body":{"components/NavbarComponent.html":{}}}],["environment.key_cache_inumber",{"_index":1191,"title":{},"body":{"injectables/LoginService.html":{}}}],["environment.last_updated",{"_index":2085,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment.production",{"_index":1368,"title":{},"body":{"components/NavbarComponent.html":{}}}],["environment.ws_url",{"_index":2483,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["environments",{"_index":2655,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":796,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"injectables/ProductService.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{}}}],["epm",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"additional-documentation/introduction.html":{}}}],["epm_qm_assigned",{"_index":665,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["err",{"_index":496,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RccManagementComponent.html":{}}}],["err.message",{"_index":500,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RccManagementComponent.html":{}}}],["err.status",{"_index":1228,"title":{},"body":{"injectables/LoginService.html":{}}}],["error",{"_index":498,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Helper.html":{},"injectables/LoginService.html":{},"components/ModalServerErrorComponent.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["error'},{'name",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["error(\"empty",{"_index":2382,"title":{},"body":{"injectables/UserService.html":{}}}],["error(\"error",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["error(\"user",{"_index":2395,"title":{},"body":{"injectables/UserService.html":{}}}],["error(resp.code",{"_index":2380,"title":{},"body":{"injectables/UserService.html":{}}}],["error.component",{"_index":1202,"title":{},"body":{"injectables/LoginService.html":{},"modules/SharedModule.html":{}}}],["error.component.css",{"_index":1336,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.html",{"_index":1337,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts",{"_index":1335,"title":{},"body":{"components/ModalServerErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:12",{"_index":1346,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:13",{"_index":1343,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:14",{"_index":1344,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:15",{"_index":1345,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:16",{"_index":1338,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:22",{"_index":1342,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:28",{"_index":1340,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:33",{"_index":1339,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.component.ts:38",{"_index":1341,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["error.error.message",{"_index":926,"title":{},"body":{"classes/Helper.html":{}}}],["error.message",{"_index":933,"title":{},"body":{"classes/Helper.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["error.message}\\nconsider",{"_index":1783,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["error.name",{"_index":915,"title":{},"body":{"classes/Helper.html":{}}}],["error.status",{"_index":914,"title":{},"body":{"classes/Helper.html":{}}}],["error/modal",{"_index":1201,"title":{},"body":{"injectables/LoginService.html":{},"components/ModalServerErrorComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["errorhandler",{"_index":1655,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["errorhandler(error",{"_index":1667,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["errormessage",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["evenly",{"_index":2610,"title":{},"body":{"index.html":{}}}],["event",{"_index":1678,"title":{},"body":{"components/QueueControlComponent.html":{},"license.html":{}}}],["everything",{"_index":2945,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["everything?\\nthis",{"_index":502,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["example",{"_index":2910,"title":{},"body":{"additional-documentation/settings.html":{}}}],["except",{"_index":1570,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["exist",{"_index":326,"title":{},"body":{"components/AddUserFormComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["expects",{"_index":2290,"title":{},"body":{"classes/User.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"index.html":{}}}],["exports",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["express",{"_index":2785,"title":{},"body":{"license.html":{}}}],["f",{"_index":318,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/TeamManagerComponent.html":{}}}],["f.resetform",{"_index":769,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["f.valid",{"_index":327,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/TeamManagerComponent.html":{}}}],["f.value",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["f.value.affectedinumber",{"_index":329,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["f.value.affectedinumber).subscribe((user",{"_index":331,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["f.value.flag",{"_index":1455,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["f.value.inumber).subscribe((user",{"_index":2195,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["f.value.inumber.trim",{"_index":2194,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["f.value.message",{"_index":1454,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["f.value.name",{"_index":328,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/ComponentSettingsComponent.html":{}}}],["f.value.name.trim",{"_index":2193,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["f2f2f2",{"_index":2115,"title":{},"body":{"components/SidebarComponent.html":{}}}],["f5f5f5",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["f7f7f9",{"_index":2019,"title":{},"body":{"components/SettingsComponent.html":{}}}],["failed",{"_index":1048,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fair",{"_index":2858,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fallback",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":274,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false)?.length",{"_index":1808,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["familiar",{"_index":2481,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["family",{"_index":1384,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fb",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":2864,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fetchproducts",{"_index":2148,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["ffffff",{"_index":730,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["fie",{"_index":2720,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"coverage.html":{},"index.html":{},"additional-documentation/settings.html":{}}}],["filename",{"_index":455,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["files",{"_index":2682,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":821,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["filterpipe",{"_index":818,"title":{"pipes/FilterPipe.html":{}},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"modules/QueueDashboardModule.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":2094,"title":{},"body":{"components/SidebarComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["fire",{"_index":1697,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["fireball",{"_index":1718,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["firebase",{"_index":562,"title":{},"body":{"injectables/ArchiveService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebaserooturl",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":2923,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["first",{"_index":2884,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["first_name",{"_index":2246,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":2213,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["fitness",{"_index":2790,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2108,"title":{},"body":{"components/SidebarComponent.html":{}}}],["flag",{"_index":1412,"title":{},"body":{"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["flatcopy",{"_index":878,"title":{},"body":{"classes/Helper.html":{}}}],["flatcopy(obj",{"_index":892,"title":{},"body":{"classes/Helper.html":{}}}],["flex",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["float",{"_index":1827,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["focus",{"_index":1235,"title":{},"body":{"injectables/LoginService.html":{}}}],["folder",{"_index":2665,"title":{},"body":{"index.html":{}}}],["follow",{"_index":534,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["following",{"_index":2638,"title":{},"body":{"index.html":{},"license.html":{}}}],["following:\\n1.are",{"_index":1784,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["font",{"_index":724,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["forkjoin",{"_index":467,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"injectables/UserService.html":{}}}],["forkjoin([this.logservice.getlogsasobservable",{"_index":2450,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(archiveentry",{"_index":626,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["forkjoin(batch_log_add",{"_index":628,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["forkjoin(batch_user_add",{"_index":627,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["form",{"_index":307,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["form'},{'name",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["form.component",{"_index":2141,"title":{},"body":{"modules/TeamDashboardModule.html":{}}}],["form.component.css",{"_index":308,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form.component.html",{"_index":309,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form.component.ts",{"_index":306,"title":{},"body":{"components/AddUserFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:11",{"_index":313,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form.component.ts:13",{"_index":319,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form.component.ts:16",{"_index":314,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form.component.ts:19",{"_index":317,"title":{},"body":{"components/AddUserFormComponent.html":{}}}],["form/add",{"_index":305,"title":{},"body":{"components/AddUserFormComponent.html":{},"modules/TeamDashboardModule.html":{},"coverage.html":{}}}],["formatcomponentrows",{"_index":680,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["formatcomponentrows(arr",{"_index":684,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["formsmodule",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/TeamDashboardModule.html":{}}}],["found",{"_index":2359,"title":{},"body":{"injectables/UserService.html":{}}}],["four",{"_index":1822,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["framework",{"_index":2739,"title":{},"body":{"index.html":{}}}],["free",{"_index":2756,"title":{},"body":{"license.html":{}}}],["front",{"_index":1051,"title":{},"body":{"injectables/LogService.html":{},"index.html":{}}}],["frontend",{"_index":2601,"title":{},"body":{"index.html":{}}}],["full",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":810,"title":{},"body":{"classes/Detail.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{}}}],["functionality",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions",{"_index":1075,"title":{},"body":{"injectables/LogService.html":{}}}],["furnished",{"_index":2776,"title":{},"body":{"license.html":{}}}],["general",{"_index":282,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["generate",{"_index":604,"title":{},"body":{"injectables/ArchiveService.html":{},"index.html":{}}}],["generate.sql",{"_index":2715,"title":{},"body":{"index.html":{}}}],["generate_test.sql",{"_index":2717,"title":{},"body":{"index.html":{}}}],["generatearchiveentrybody",{"_index":565,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["generatearchiveentrybody(archive_key",{"_index":575,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["generatelogbody",{"_index":566,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["generatelogbody(archive_key",{"_index":579,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["generatemetabody",{"_index":2219,"title":{},"body":{"classes/User.html":{}}}],["generatepostbody",{"_index":172,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["generateuserbody",{"_index":567,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["generateuserbody(user",{"_index":582,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["getaverageqday",{"_index":2220,"title":{},"body":{"classes/User.html":{}}}],["getcachedinumber",{"_index":988,"title":{},"body":{"injectables/LogService.html":{}}}],["getcachedtoken",{"_index":1157,"title":{},"body":{"injectables/LoginService.html":{}}}],["getdateformatted",{"_index":173,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getdescription",{"_index":174,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getfulldate",{"_index":175,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getincidentamount",{"_index":2221,"title":{},"body":{"classes/User.html":{}}}],["getincidentamount(productshortname",{"_index":2252,"title":{},"body":{"classes/User.html":{}}}],["getincidenttotal",{"_index":2222,"title":{},"body":{"classes/User.html":{}}}],["getinumber",{"_index":1621,"title":{},"body":{"classes/QmUser.html":{}}}],["getlastqueuedaychange",{"_index":2309,"title":{},"body":{"injectables/UserService.html":{}}}],["getlogger",{"_index":176,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getlogs",{"_index":989,"title":{},"body":{"injectables/LogService.html":{}}}],["getlogsasobservable",{"_index":990,"title":{},"body":{"injectables/LogService.html":{}}}],["getname",{"_index":1622,"title":{},"body":{"classes/QmUser.html":{}}}],["getproducts",{"_index":1576,"title":{},"body":{"injectables/ProductService.html":{}}}],["getqm",{"_index":2310,"title":{},"body":{"injectables/UserService.html":{}}}],["getquarter",{"_index":1876,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["getquarter(d",{"_index":1889,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["getquarter(null",{"_index":1971,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["getresetdays",{"_index":1877,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["getresetdays(null",{"_index":1972,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["getrolelist",{"_index":2223,"title":{},"body":{"classes/User.html":{}}}],["getrouterlink",{"_index":681,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["getrouterlink(componentid",{"_index":687,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["getstatus",{"_index":2224,"title":{},"body":{"classes/User.html":{},"classes/WorkShift.html":{}}}],["getsummary",{"_index":177,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getsupportedproductlist",{"_index":2225,"title":{},"body":{"classes/User.html":{}}}],["gettimeformatted",{"_index":178,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["getting",{"_index":2531,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getuserbynumber",{"_index":2311,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbynumber(inumber",{"_index":2332,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserincidents",{"_index":2312,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserincidents(inumber",{"_index":2334,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":2313,"title":{},"body":{"injectables/UserService.html":{}}}],["git",{"_index":2625,"title":{},"body":{"index.html":{}}}],["give",{"_index":2890,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["go",{"_index":2929,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["goal",{"_index":2849,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["google",{"_index":2737,"title":{},"body":{"index.html":{}}}],["gradient(135deg",{"_index":2114,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gradient(180deg",{"_index":2100,"title":{},"body":{"components/SidebarComponent.html":{}}}],["granted",{"_index":2755,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2806,"title":{},"body":{"modules.html":{}}}],["great",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["green",{"_index":1553,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"changelog.html":{},"additional-documentation/manage-team.html":{}}}],["grey",{"_index":2210,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["group",{"_index":2132,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["group.sort",{"_index":861,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["group[0].usagepercent",{"_index":854,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["groupbyaqd",{"_index":2124,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["groupbyaqd(user",{"_index":848,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["groupbyusage",{"_index":2126,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["groupbyusage(user",{"_index":841,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["groupindex",{"_index":695,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["guidance",{"_index":2867,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["guided",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["h1.qtable",{"_index":1979,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["hammerjs",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["hana",{"_index":2861,"title":{"additional-documentation/hana-cloud-cockpit.html":{}},"body":{"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["handle",{"_index":930,"title":{},"body":{"classes/Helper.html":{}}}],["handleerror",{"_index":879,"title":{},"body":{"classes/Helper.html":{},"components/LoginComponent.html":{}}}],["handleerror(err",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["handleerror(error",{"_index":894,"title":{},"body":{"classes/Helper.html":{}}}],["handles",{"_index":981,"title":{},"body":{"injectables/LogService.html":{}}}],["handling",{"_index":2888,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["hard",{"_index":2482,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["hardrefresh",{"_index":1656,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["hasauth",{"_index":1151,"title":{},"body":{"injectables/LoginService.html":{}}}],["hasrole",{"_index":2226,"title":{},"body":{"classes/User.html":{}}}],["hasrole(shortproductname",{"_index":2258,"title":{},"body":{"classes/User.html":{}}}],["header",{"_index":1983,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["headers",{"_index":593,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":947,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["help",{"_index":1240,"title":{},"body":{"injectables/LoginService.html":{},"additional-documentation/introduction.html":{}}}],["helper",{"_index":873,"title":{"classes/Helper.html":{}},"body":{"classes/Helper.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["helper.datewithin(new",{"_index":1744,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["helper.handleerror(e",{"_index":1214,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["helper.handleerror(err",{"_index":1047,"title":{},"body":{"injectables/LogService.html":{}}}],["helper.sortalpha(productlist",{"_index":1589,"title":{},"body":{"injectables/ProductService.html":{}}}],["helvetica",{"_index":1386,"title":{},"body":{"components/NavbarComponent.html":{}}}],["here",{"_index":2042,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["hereby",{"_index":2754,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1988,"title":{},"body":{"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["hide",{"_index":1280,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["highlights",{"_index":2852,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["hit",{"_index":2944,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["hoek",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["holders",{"_index":2795,"title":{},"body":{"license.html":{}}}],["home",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"additional-documentation/introduction.html":{}}}],["host",{"_index":2726,"title":{},"body":{"index.html":{}}}],["hour",{"_index":2875,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["hours",{"_index":1558,"title":{},"body":{"components/PatchNotesComponent.html":{},"classes/WorkShift.html":{},"changelog.html":{}}}],["houses",{"_index":1566,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["hr",{"_index":2103,"title":{},"body":{"components/SidebarComponent.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["html5",{"_index":2941,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["http",{"_index":563,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["http://:8082",{"_index":2675,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":2484,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["http://localhost:8082",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8082/api",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":570,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":792,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":895,"title":{},"body":{"classes/Helper.html":{}}}],["httpheaders",{"_index":594,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httpoptions",{"_index":564,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["httpoptions).pipe",{"_index":1210,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://account.hanatrial.ondemand.com",{"_index":2930,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["https://dev.mysql.com/downloads/installer",{"_index":2719,"title":{},"body":{"index.html":{}}}],["https://git",{"_index":2626,"title":{},"body":{"index.html":{}}}],["https://github.com/qianyilun",{"_index":2750,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":2624,"title":{},"body":{"index.html":{}}}],["https://queue",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://queuemanagerdocumentation",{"_index":2089,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["i.action_id",{"_index":1064,"title":{},"body":{"injectables/LogService.html":{}}}],["i.e",{"_index":2674,"title":{},"body":{"index.html":{}}}],["i100000",{"_index":1912,"title":{},"body":{"components/RccManagementComponent.html":{},"index.html":{}}}],["i123",{"_index":1627,"title":{},"body":{"classes/QmUser.html":{}}}],["i123123",{"_index":2912,"title":{},"body":{"additional-documentation/settings.html":{}}}],["i123456",{"_index":1243,"title":{},"body":{"injectables/LoginService.html":{}}}],["i_threshold",{"_index":2161,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["icon",{"_index":1391,"title":{},"body":{"components/NavbarComponent.html":{}}}],["icons",{"_index":1560,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["id",{"_index":1643,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ide",{"_index":2943,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["idea",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["identifier",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":1241,"title":{},"body":{"injectables/LoginService.html":{}}}],["ie",{"_index":1242,"title":{},"body":{"injectables/LoginService.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["if(data.socket_id",{"_index":1726,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ignorebackdropclick",{"_index":1236,"title":{},"body":{"injectables/LoginService.html":{}}}],["iis",{"_index":2684,"title":{},"body":{"index.html":{}}}],["image",{"_index":1392,"title":{},"body":{"components/NavbarComponent.html":{},"components/RccManagementComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{}}}],["implied",{"_index":2786,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{}}}],["important",{"_index":1382,"title":{},"body":{"components/NavbarComponent.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["imports",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{}}}],["improved",{"_index":1541,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["improvements",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["incident",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["incident(s",{"_index":1750,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["incident_assigned",{"_index":216,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["incident_threshold",{"_index":2292,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["incident_unassigned",{"_index":218,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["incidentapi",{"_index":2299,"title":{},"body":{"injectables/UserService.html":{}}}],["incidentcounts",{"_index":2214,"title":{},"body":{"classes/User.html":{}}}],["incidents",{"_index":474,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["incidents+24hrs",{"_index":1791,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["included",{"_index":2691,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":2764,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2488,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["increase",{"_index":2918,"title":{},"body":{"additional-documentation/settings.html":{}}}],["increased",{"_index":1935,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["increment",{"_index":1932,"title":{},"body":{"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"classes/Helper.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indication",{"_index":1562,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["individual",{"_index":2851,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["infinite",{"_index":963,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["info'},{'name",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["info.component",{"_index":1845,"title":{},"body":{"modules/QueueDashboardModule.html":{},"modules/SharedModule.html":{}}}],["info.component.css",{"_index":1305,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/QmInfoComponent.html":{},"components/ShiftInfoComponent.html":{}}}],["info.component.html",{"_index":1306,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/QmInfoComponent.html":{},"components/ShiftInfoComponent.html":{}}}],["info.component.ts",{"_index":1304,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/QmInfoComponent.html":{},"components/ShiftInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:11",{"_index":2065,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["info.component.ts:12",{"_index":1317,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/ShiftInfoComponent.html":{}}}],["info.component.ts:13",{"_index":1314,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/ShiftInfoComponent.html":{}}}],["info.component.ts:14",{"_index":1315,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:15",{"_index":1316,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/QmInfoComponent.html":{},"components/ShiftInfoComponent.html":{}}}],["info.component.ts:16",{"_index":1307,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:17",{"_index":1601,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["info.component.ts:18",{"_index":1313,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1600,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1312,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:22",{"_index":2052,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1599,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1310,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:34",{"_index":1308,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1311,"title":{},"body":{"components/ModalInfoComponent.html":{}}}],["info/modal",{"_index":1303,"title":{},"body":{"components/ModalInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/qm",{"_index":1596,"title":{},"body":{"components/QmInfoComponent.html":{},"modules/QueueDashboardModule.html":{},"coverage.html":{}}}],["info/shift",{"_index":1844,"title":{},"body":{"modules/QueueDashboardModule.html":{},"components/ShiftInfoComponent.html":{},"coverage.html":{}}}],["initialize",{"_index":2711,"title":{},"body":{"index.html":{}}}],["initialized",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":556,"title":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/QueueStateService.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{}},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/QueueStateService.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"coverage.html":{}}}],["injectables",{"_index":557,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/QueueStateService.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"overview.html":{}}}],["inline",{"_index":956,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/RccManagementComponent.html":{}}}],["input",{"_index":944,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/RccManagementComponent.html":{}}}],["input'},{'name",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["input.component",{"_index":1200,"title":{},"body":{"injectables/LoginService.html":{},"components/RccManagementComponent.html":{},"modules/SharedModule.html":{}}}],["input.component.css",{"_index":1321,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.html",{"_index":1322,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts",{"_index":1320,"title":{},"body":{"components/ModalInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":1331,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:14",{"_index":1328,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:15",{"_index":1329,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:16",{"_index":1330,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:17",{"_index":1323,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:23",{"_index":1327,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:29",{"_index":1325,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:36",{"_index":1324,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.component.ts:41",{"_index":1326,"title":{},"body":{"components/ModalInputComponent.html":{}}}],["input.trim",{"_index":1318,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{}}}],["input/modal",{"_index":1199,"title":{},"body":{"injectables/LoginService.html":{},"components/ModalInputComponent.html":{},"components/RccManagementComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["input[type=\"email",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"password",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=checkbox].css",{"_index":1984,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["inputs",{"_index":325,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/TeamManagerComponent.html":{}}}],["install",{"_index":2623,"title":{},"body":{"index.html":{}}}],["installing",{"_index":2628,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":2614,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1254,"title":{},"body":{"injectables/LoginService.html":{}}}],["interface",{"_index":1198,"title":{"interfaces/ModalInterface.html":{}},"body":{"injectables/LoginService.html":{},"interfaces/ModalInterface.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["interface.ts",{"_index":1333,"title":{},"body":{"interfaces/ModalInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":1332,"title":{},"body":{"interfaces/ModalInterface.html":{}}}],["intern",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["introduction",{"_index":2848,"title":{"additional-documentation/introduction.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["inumber",{"_index":333,"title":{},"body":{"components/AddUserFormComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"additional-documentation/settings.html":{}}}],["inumbers",{"_index":1531,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["inumber}/incidents`).pipe(catcherror(e",{"_index":2449,"title":{},"body":{"injectables/UserService.html":{}}}],["io",{"_index":2469,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["io.connect(environment.ws_url",{"_index":2479,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["ip",{"_index":2642,"title":{},"body":{"index.html":{}}}],["is_available",{"_index":2248,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["isactive",{"_index":1463,"title":{},"body":{"classes/Notification.html":{}}}],["isauthenticated",{"_index":1158,"title":{},"body":{"injectables/LoginService.html":{}}}],["isavailable",{"_index":634,"title":{"pipes/IsAvailable.html":{}},"body":{"injectables/ArchiveService.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"modules/QueueDashboardModule.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["isavailable:paramid",{"_index":1788,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["iscopied",{"_index":662,"title":{},"body":{"components/ClipboardComponent.html":{}}}],["isnan(amount",{"_index":1917,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["isonline",{"_index":2508,"title":{},"body":{"classes/WorkShift.html":{}}}],["isprod",{"_index":1359,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":1492,"title":{},"body":{"components/NotificationComponent.html":{}}}],["item.getdateformatted",{"_index":298,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["item.getsummary",{"_index":300,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["item.gettimeformatted",{"_index":299,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["item.loggerinumber",{"_index":301,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["items",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["itemsref",{"_index":2145,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["ithreshold",{"_index":2215,"title":{},"body":{"classes/User.html":{}}}],["ixp",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["jan",{"_index":1949,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["job",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["john",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["jonathan",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["jonathan.tang01@sap.com",{"_index":1353,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["jquery",{"_index":472,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/RccManagementComponent.html":{},"dependencies.html":{}}}],["js",{"_index":2578,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["json",{"_index":2916,"title":{},"body":{"additional-documentation/settings.html":{}}}],["json.parse(json.stringify(obj",{"_index":902,"title":{},"body":{"classes/Helper.html":{}}}],["json.stringify(data",{"_index":2501,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["json.stringify(error.error",{"_index":924,"title":{},"body":{"classes/Helper.html":{}}}],["jul",{"_index":1953,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["july",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jun",{"_index":1952,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["keep",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["keeping",{"_index":2901,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["key",{"_index":578,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"injectables/WebSocketAbstractService.html":{},"additional-documentation/rcc.html":{}}}],["key_cache_auth_token",{"_index":1152,"title":{},"body":{"injectables/LoginService.html":{}}}],["key_cache_inumber",{"_index":1153,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":1234,"title":{},"body":{"injectables/LoginService.html":{}}}],["keyframes",{"_index":973,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["khtml",{"_index":2005,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["kind",{"_index":2784,"title":{},"body":{"license.html":{}}}],["know",{"_index":1052,"title":{},"body":{"injectables/LogService.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["label",{"_index":1992,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["label.css",{"_index":1991,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["last",{"_index":292,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["last_name",{"_index":2247,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["last_updated",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":2216,"title":{},"body":{"classes/User.html":{}}}],["lastname}`.trim",{"_index":2275,"title":{},"body":{"classes/User.html":{}}}],["lastqueuedayupdatedict",{"_index":1873,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["lastqueuedayupdatedict[user.inumber",{"_index":1977,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["lazy",{"_index":477,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["leave",{"_index":538,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["left",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/rcc.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"overview.html":{}}}],["level",{"_index":2635,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2799,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2796,"title":{},"body":{"license.html":{}}}],["license",{"_index":2743,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license.md",{"_index":2747,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":2744,"title":{},"body":{"index.html":{}}}],["light",{"_index":2077,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["limitation",{"_index":2765,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2787,"title":{},"body":{"license.html":{}}}],["line",{"_index":1995,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"index.html":{}}}],["linear",{"_index":2099,"title":{},"body":{"components/SidebarComponent.html":{}}}],["linecap='round",{"_index":1402,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lines",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["link",{"_index":716,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["link.active",{"_index":708,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["links",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["listen",{"_index":1722,"title":{},"body":{"components/QueueControlComponent.html":{},"injectables/WebSocketAbstractService.html":{}}}],["listened",{"_index":1019,"title":{},"body":{"injectables/LogService.html":{}}}],["literal",{"_index":1334,"title":{},"body":{"interfaces/ModalInterface.html":{}}}],["little",{"_index":1561,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["live",{"_index":2702,"title":{},"body":{"index.html":{}}}],["load",{"_index":2609,"title":{},"body":{"index.html":{}}}],["loading",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["loadingspinnercomponent",{"_index":109,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["local",{"_index":2616,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":2727,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":1001,"title":{},"body":{"injectables/LogService.html":{}}}],["localstorage.clear",{"_index":1260,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem(this.key_cache_auth_token",{"_index":1217,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem(this.key_cache_auth_token",{"_index":1218,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage[environment.key_cache_inumber",{"_index":1076,"title":{},"body":{"injectables/LogService.html":{},"components/NavbarComponent.html":{}}}],["localstorage[this.key_cache_inumber",{"_index":1226,"title":{},"body":{"injectables/LoginService.html":{}}}],["located",{"_index":2672,"title":{},"body":{"index.html":{}}}],["location",{"_index":2506,"title":{},"body":{"classes/WorkShift.html":{}}}],["location.reload",{"_index":1259,"title":{},"body":{"injectables/LoginService.html":{}}}],["log",{"_index":253,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"components/PatchNotesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{}}}],["log'},{'name",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["log.actionid",{"_index":2458,"title":{},"body":{"injectables/UserService.html":{}}}],["log.affectedinumber",{"_index":2459,"title":{},"body":{"injectables/UserService.html":{}}}],["log.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["log.component.css",{"_index":254,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.html",{"_index":255,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts",{"_index":252,"title":{},"body":{"components/ActivityLogComponent.html":{},"coverage.html":{}}}],["log.component.ts:15",{"_index":275,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:16",{"_index":273,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:17",{"_index":269,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:19",{"_index":263,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:21",{"_index":270,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:24",{"_index":264,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.service",{"_index":790,"title":{},"body":{"modules/CoreModule.html":{},"injectables/UserService.html":{}}}],["log/activity",{"_index":251,"title":{},"body":{"components/ActivityLogComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["logdisplaying",{"_index":302,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["logged",{"_index":1569,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["logger",{"_index":297,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["logger_id",{"_index":197,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["loggerinumber",{"_index":170,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["login",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["login'},{'name",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["login(username",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":788,"title":{},"body":{"modules/CoreModule.html":{}}}],["login/login.component",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":112,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":345,"title":{"injectables/LoginService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice.user?.name",{"_index":1379,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logit",{"_index":1878,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["logit(msg",{"_index":1892,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["logon",{"_index":2926,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["logonwithinumber",{"_index":1159,"title":{},"body":{"injectables/LoginService.html":{}}}],["logonwithinumber(inumber",{"_index":1176,"title":{},"body":{"injectables/LoginService.html":{}}}],["logout",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logs",{"_index":294,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["logs.find((log",{"_index":2457,"title":{},"body":{"injectables/UserService.html":{}}}],["logs.foreach((log",{"_index":621,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["logservice",{"_index":259,"title":{"injectables/LogService.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{},"modules/CoreModule.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":336,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["longer",{"_index":1532,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["look",{"_index":1374,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lose",{"_index":541,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["machine",{"_index":2617,"title":{},"body":{"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["maintain",{"_index":1536,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["manage",{"_index":419,"title":{"additional-documentation/manage-team.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{}}}],["managed",{"_index":2663,"title":{},"body":{"index.html":{}}}],["management",{"_index":1868,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["management'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["management.component",{"_index":1866,"title":{},"body":{"modules/RccDashboardModule.html":{}}}],["management.component.css",{"_index":1869,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.html",{"_index":1870,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts",{"_index":1867,"title":{},"body":{"components/RccManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:115",{"_index":1890,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:121",{"_index":1887,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:129",{"_index":1891,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:133",{"_index":1893,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:137",{"_index":1897,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:20",{"_index":1908,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:21",{"_index":1907,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:22",{"_index":1900,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:23",{"_index":1904,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:24",{"_index":1902,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:26",{"_index":1901,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1882,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:29",{"_index":1903,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:30",{"_index":1909,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1905,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:32",{"_index":1906,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:36",{"_index":1894,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:48",{"_index":1896,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:72",{"_index":1885,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management.component.ts:91",{"_index":1899,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["management/rcc",{"_index":1865,"title":{},"body":{"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"coverage.html":{}}}],["manager",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{}}}],["manager.component",{"_index":2140,"title":{},"body":{"modules/TeamDashboardModule.html":{}}}],["manager.component.css",{"_index":2143,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.html",{"_index":2144,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts",{"_index":2142,"title":{},"body":{"components/TeamManagerComponent.html":{},"coverage.html":{}}}],["manager.component.ts:16",{"_index":2167,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:17",{"_index":2166,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:18",{"_index":2169,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:19",{"_index":2168,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:20",{"_index":2164,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:22",{"_index":2151,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:24",{"_index":2163,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:45",{"_index":2154,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:51",{"_index":2162,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:64",{"_index":2153,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:77",{"_index":2158,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager.component.ts:86",{"_index":2155,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manager/team",{"_index":2139,"title":{},"body":{"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{}}}],["manger",{"_index":2209,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["manual",{"_index":40,"title":{"additional-documentation/manual-queue-dispatcher.html":{}},"body":{"components/AboutComponent.html":{},"additional-documentation/introduction.html":{}}}],["manually",{"_index":2865,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["map",{"_index":278,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["map((r",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["map((res",{"_index":1584,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["map((resp",{"_index":2364,"title":{},"body":{"injectables/UserService.html":{}}}],["map((result",{"_index":1049,"title":{},"body":{"injectables/LogService.html":{}}}],["mar",{"_index":1950,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["march",{"_index":602,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["margin",{"_index":671,"title":{},"body":{"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["mark",{"_index":1701,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/rcc.html":{}}}],["master",{"_index":2014,"title":{},"body":{"components/SettingsComponent.html":{}}}],["mat",{"_index":740,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QueueControlComponent.html":{}}}],["matbuttonmodule",{"_index":1264,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["material",{"_index":2040,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":1262,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(arr.length",{"_index":697,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["math.floor((qend",{"_index":1964,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["maticonmodule",{"_index":1265,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1266,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":446,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["matsnackbarmodule",{"_index":1267,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1268,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1269,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":868,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoginComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["max_incidents",{"_index":1644,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["maximum",{"_index":1520,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["maxiumum",{"_index":2885,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["member",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"additional-documentation/introduction.html":{}}}],["membersavailable",{"_index":853,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["membersavailable)).tofixed(4",{"_index":855,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["menu",{"_index":702,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["merchantability",{"_index":2789,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2128,"title":{},"body":{"pipes/SortByPriority.html":{},"license.html":{}}}],["merge(arr",{"_index":856,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["message",{"_index":813,"title":{},"body":{"classes/Detail.html":{},"classes/Helper.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NoticeBoardComponent.html":{},"classes/Notification.html":{},"injectables/WebSocketAbstractService.html":{},"additional-documentation/introduction.html":{}}}],["message.length",{"_index":907,"title":{},"body":{"classes/Helper.html":{}}}],["message.trim",{"_index":816,"title":{},"body":{"classes/Detail.html":{}}}],["messages",{"_index":2362,"title":{},"body":{"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{}}}],["messagingsenderid",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":2289,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{},"additional-documentation/manage-team.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["method",{"_index":2498,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["microsoft",{"_index":2932,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["middle",{"_index":1997,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["min",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["miscellaneous",{"_index":2597,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2746,"title":{},"body":{"index.html":{},"license.html":{}}}],["miterlimit='10",{"_index":1403,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modal",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["modalconfirmcomponent",{"_index":114,"title":{"components/ModalConfirmComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalinfocomponent",{"_index":117,"title":{"components/ModalInfoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalinputcomponent",{"_index":119,"title":{"components/ModalInputComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalinterface",{"_index":1196,"title":{"interfaces/ModalInterface.html":{}},"body":{"injectables/LoginService.html":{},"interfaces/ModalInterface.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"coverage.html":{}}}],["modalmodule",{"_index":2039,"title":{},"body":{"modules/SharedModule.html":{}}}],["modalmodule.forroot",{"_index":2045,"title":{},"body":{"modules/SharedModule.html":{}}}],["modalservererrorcomponent",{"_index":121,"title":{"components/ModalServerErrorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalservice",{"_index":1164,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["model",{"_index":1058,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["model.mwb",{"_index":2707,"title":{},"body":{"index.html":{}}}],["model/actionentrylog",{"_index":281,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["model/notification",{"_index":1483,"title":{},"body":{"components/NotificationComponent.html":{}}}],["modified",{"_index":1854,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["modify",{"_index":2767,"title":{},"body":{"license.html":{}}}],["modifyqueue",{"_index":1851,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["module",{"_index":354,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["module.exports",{"_index":2731,"title":{},"body":{"index.html":{}}}],["modules",{"_index":356,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":210,"title":{},"body":{"classes/ActionEntryLog.html":{},"classes/Helper.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["moment().endof(range",{"_index":905,"title":{},"body":{"classes/Helper.html":{}}}],["moment(date).isbetween(moment().startof(range",{"_index":904,"title":{},"body":{"classes/Helper.html":{}}}],["moment(date).isbetween(start",{"_index":903,"title":{},"body":{"classes/Helper.html":{}}}],["moment(this.timestamp).format(\"kk:mm:ss",{"_index":244,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["moment(this.timestamp).format('mm/dd/yyyy",{"_index":245,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["more",{"_index":1695,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["moz",{"_index":2006,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["ms",{"_index":2007,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["msg",{"_index":1453,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{},"injectables/NotificationService.html":{},"components/RccManagementComponent.html":{}}}],["mysql",{"_index":2668,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["named",{"_index":2721,"title":{},"body":{"index.html":{}}}],["nav",{"_index":1380,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":714,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["navbar.component.css",{"_index":1355,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1356,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":124,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigating",{"_index":2904,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["navigator",{"_index":2869,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{}}}],["nclick",{"_index":1936,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["need",{"_index":2041,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["needed",{"_index":2699,"title":{},"body":{"index.html":{}}}],["needs",{"_index":2472,"title":{},"body":{"injectables/WebSocketAbstractService.html":{},"index.html":{}}}],["neo",{"_index":2934,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["network",{"_index":929,"title":{},"body":{"classes/Helper.html":{}}}],["neue",{"_index":1387,"title":{},"body":{"components/NavbarComponent.html":{}}}],["new",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"injectables/ArchiveService.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/RccManagementComponent.html":{},"components/ShiftInfoComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/manage-team.html":{}}}],["newamount",{"_index":1918,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["newamount).subscribe(r",{"_index":1921,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["newarr",{"_index":698,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["newentrylog",{"_index":1059,"title":{},"body":{"injectables/LogService.html":{}}}],["newentrylog.defaultdescription",{"_index":1066,"title":{},"body":{"injectables/LogService.html":{}}}],["newentrylog.generatepostbody",{"_index":1068,"title":{},"body":{"injectables/LogService.html":{}}}],["newobject",{"_index":653,"title":{},"body":{"classes/BodyParser.html":{}}}],["next",{"_index":1551,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"injectables/WebSocketAbstractService.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{}}}],["ng",{"_index":738,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QueueControlComponent.html":{},"index.html":{}}}],["ngclass]=\"{'fa",{"_index":1805,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ngclass]=\"{\\'fa",{"_index":1829,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ngform",{"_index":316,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/TeamManagerComponent.html":{}}}],["ngmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["ngstyle]=\"{'color",{"_index":1807,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ngstyle]=\"{\\'color",{"_index":1830,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["ngx",{"_index":1194,"title":{},"body":{"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccManagementComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["node",{"_index":2590,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["node.js",{"_index":2603,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":2704,"title":{},"body":{"index.html":{}}}],["noinspection",{"_index":629,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/UserService.html":{}}}],["none",{"_index":529,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/RccManagementComponent.html":{}}}],["noninfringement",{"_index":2793,"title":{},"body":{"license.html":{}}}],["note",{"_index":2917,"title":{},"body":{"additional-documentation/settings.html":{}}}],["note.message",{"_index":1491,"title":{},"body":{"components/NotificationComponent.html":{}}}],["note.type",{"_index":1490,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notes",{"_index":1511,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["notes'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["notes.component",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notes.component.css",{"_index":1512,"title":{},"body":{"components/PatchNotesComponent.html":{}}}],["notes.component.html",{"_index":1513,"title":{},"body":{"components/PatchNotesComponent.html":{}}}],["notes.component.ts",{"_index":1510,"title":{},"body":{"components/PatchNotesComponent.html":{},"coverage.html":{}}}],["notes.component.ts:12",{"_index":1515,"title":{},"body":{"components/PatchNotesComponent.html":{}}}],["notes.component.ts:8",{"_index":1514,"title":{},"body":{"components/PatchNotesComponent.html":{}}}],["notes/patch",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PatchNotesComponent.html":{},"coverage.html":{}}}],["notice",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"license.html":{},"additional-documentation/settings.html":{}}}],["noticeboard",{"_index":2908,"title":{},"body":{"additional-documentation/settings.html":{}}}],["noticeboardcomponent",{"_index":126,"title":{"components/NoticeBoardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noticeboardflag",{"_index":1438,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["noticeboardmsg",{"_index":1439,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["noticeboardsettingcomponent",{"_index":129,"title":{"components/NoticeBoardSettingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notification",{"_index":1460,"title":{"classes/Notification.html":{}},"body":{"classes/Notification.html":{},"components/NotificationComponent.html":{},"coverage.html":{}}}],["notification'},{'name",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["notification(\"system",{"_index":1488,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.css",{"_index":1475,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":1476,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification_array",{"_index":1477,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcomponent",{"_index":132,"title":{"components/NotificationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":1495,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationservice",{"_index":1478,"title":{"injectables/NotificationService.html":{}},"body":{"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notifying",{"_index":1564,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["npm",{"_index":2632,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":580,"title":{},"body":{"injectables/ArchiveService.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LoginService.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{}}}],["num_of_results",{"_index":260,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["numbe",{"_index":2250,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":271,"title":{},"body":{"components/ActivityLogComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{},"classes/WorkShift.html":{},"changelog.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["numbered",{"_index":535,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["numofgroups",{"_index":696,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["numofresults",{"_index":1020,"title":{},"body":{"injectables/LogService.html":{}}}],["nw",{"_index":2911,"title":{},"body":{"additional-documentation/settings.html":{}}}],["obj",{"_index":891,"title":{},"body":{"classes/Helper.html":{},"injectables/UserService.html":{}}}],["obj[u.inumber",{"_index":2460,"title":{},"body":{"injectables/UserService.html":{}}}],["object",{"_index":592,"title":{},"body":{"injectables/ArchiveService.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":901,"title":{},"body":{"classes/Helper.html":{}}}],["object.keys(object).foreach(key",{"_index":845,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["object.keys(objsupportproducts).foreach(key",{"_index":2286,"title":{},"body":{"classes/User.html":{}}}],["object.keys(this.incidentcounts).foreach(key",{"_index":2277,"title":{},"body":{"classes/User.html":{}}}],["object.keys(this.supportedproducts).foreach(key",{"_index":2280,"title":{},"body":{"classes/User.html":{}}}],["object[key",{"_index":847,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["object[user.getaverageqday().tostring",{"_index":849,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["object[user.getaverageqday().tostring()].push(user",{"_index":850,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["object[user.usagepercent.tostring",{"_index":843,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["object[user.usagepercent.tostring()].push(user",{"_index":844,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["objincidentcount",{"_index":2229,"title":{},"body":{"classes/User.html":{}}}],["objsupportproducts",{"_index":2230,"title":{},"body":{"classes/User.html":{}}}],["objsupportproducts[key",{"_index":2287,"title":{},"body":{"classes/User.html":{}}}],["observable",{"_index":268,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{}}}],["observable(observer",{"_index":2489,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["observableof",{"_index":276,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/ArchiveService.html":{}}}],["observe",{"_index":2487,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["observer",{"_index":2495,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["observer.next(data",{"_index":2493,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["obtaining",{"_index":2759,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1928,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["occurred",{"_index":499,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"classes/Helper.html":{},"components/RccManagementComponent.html":{}}}],["oct",{"_index":1947,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["of(5",{"_index":2421,"title":{},"body":{"injectables/UserService.html":{}}}],["offline",{"_index":2517,"title":{},"body":{"classes/WorkShift.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["okay",{"_index":1937,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["onaddincident",{"_index":1657,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["onaddincident(user",{"_index":1671,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["onaddqday",{"_index":1879,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["onaddqday(user",{"_index":1895,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["onadduser",{"_index":311,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["onadduser(f",{"_index":315,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["oncancel",{"_index":1276,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{}}}],["onconfirm",{"_index":1277,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{}}}],["one",{"_index":553,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"additional-documentation/settings.html":{}}}],["oneclickreset",{"_index":442,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["onhide",{"_index":1278,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{}}}],["online",{"_index":2516,"title":{},"body":{"classes/WorkShift.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["onremoveincident",{"_index":1658,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["onremoveincident(user",{"_index":1673,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["onsubmit",{"_index":748,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["onsubmit(f",{"_index":755,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["open",{"_index":2922,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["operating",{"_index":2474,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["operational",{"_index":2015,"title":{},"body":{"components/SettingsComponent.html":{}}}],["operations",{"_index":2915,"title":{},"body":{"additional-documentation/settings.html":{}}}],["optional",{"_index":184,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["options",{"_index":185,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["options.actionid",{"_index":229,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.affectedinumber",{"_index":235,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.affectedusername",{"_index":237,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.defaultdescription",{"_index":233,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.detail",{"_index":242,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.loggerinumber",{"_index":231,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["options.timestamp",{"_index":239,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["orange",{"_index":1702,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["organize",{"_index":2607,"title":{},"body":{"index.html":{}}}],["original",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["otherwise",{"_index":540,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"license.html":{},"additional-documentation/manage-team.html":{}}}],["ouputs",{"_index":2690,"title":{},"body":{"index.html":{}}}],["out",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/LoadingSpinnerComponent.html":{},"components/QueueControlComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["outputs",{"_index":2680,"title":{},"body":{"index.html":{},"additional-documentation/settings.html":{}}}],["overflow",{"_index":1987,"title":{},"body":{"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["override",{"_index":2897,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["overview",{"_index":2807,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1940,"title":{},"body":{"components/RccManagementComponent.html":{},"additional-documentation/settings.html":{}}}],["ovewrite",{"_index":2909,"title":{},"body":{"additional-documentation/settings.html":{}}}],["p",{"_index":699,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["p2000140239trial",{"_index":2931,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["p2000140239trial.dispatcher.hanatrial.ondemand.com/additional",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2000140239trial.dispatcher.hanatrial.ondemand.com/changelog.html",{"_index":2090,"title":{},"body":{"components/SidebarComponent.html":{}}}],["package",{"_index":2566,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":720,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["page",{"_index":539,"title":{"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/rcc.html":{}}}],["panel",{"_index":1567,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{}}}],["param",{"_index":1028,"title":{},"body":{"injectables/LogService.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["paramid",{"_index":1645,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["parsebody",{"_index":643,"title":{},"body":{"classes/BodyParser.html":{},"components/RccManagementComponent.html":{}}}],["parsebody(body",{"_index":645,"title":{},"body":{"classes/BodyParser.html":{}}}],["parsebodyresult",{"_index":644,"title":{},"body":{"classes/BodyParser.html":{}}}],["parsebodyresult(body",{"_index":647,"title":{},"body":{"classes/BodyParser.html":{}}}],["parsefloat(addamount",{"_index":1933,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["parsefloat(avg).tofixed(3",{"_index":2285,"title":{},"body":{"classes/User.html":{}}}],["parsefloat(pval",{"_index":1943,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["parsefloat(usage",{"_index":2181,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["parsefloat(val",{"_index":1916,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["parseint(i_threshold",{"_index":2182,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["particular",{"_index":2791,"title":{},"body":{"license.html":{}}}],["password",{"_index":783,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["password).catch",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.trim",{"_index":1206,"title":{},"body":{"injectables/LoginService.html":{}}}],["paste",{"_index":2637,"title":{},"body":{"index.html":{}}}],["patch",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{}}}],["patches",{"_index":1519,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["patchnotescomponent",{"_index":134,"title":{"components/PatchNotesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardRoutingModule.html":{}}}],["pathmatch",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":1522,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/manage-team.html":{}}}],["performance",{"_index":2919,"title":{},"body":{"additional-documentation/settings.html":{}}}],["permission",{"_index":2753,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2774,"title":{},"body":{"license.html":{}}}],["person",{"_index":2758,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2775,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":817,"title":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pipe(catcherror(e",{"_index":1593,"title":{},"body":{"injectables/ProductService.html":{}}}],["pipe/filter.pipe",{"_index":1847,"title":{},"body":{"modules/QueueDashboardModule.html":{}}}],["pipes",{"_index":819,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"overview.html":{}}}],["pipetransform",{"_index":826,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["please",{"_index":780,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NoticeBoardComponent.html":{}}}],["pluck",{"_index":1713,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["pointed",{"_index":2685,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1999,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["pops",{"_index":1563,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["populate",{"_index":2368,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["populatetodayincident",{"_index":1659,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["populatetodayincident(user",{"_index":1675,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["port",{"_index":2673,"title":{},"body":{"index.html":{}}}],["portions",{"_index":2781,"title":{},"body":{"license.html":{}}}],["position",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["postvalue",{"_index":805,"title":{},"body":{"classes/Detail.html":{}}}],["prdouct_support_changed",{"_index":224,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["pre",{"_index":1431,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["prepare",{"_index":606,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{}}}],["prerequisites",{"_index":2621,"title":{},"body":{"index.html":{}}}],["present",{"_index":1574,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"index.html":{}}}],["previousvalue",{"_index":808,"title":{},"body":{"classes/Detail.html":{}}}],["priority",{"_index":2871,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["private",{"_index":478,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"injectables/UserService.html":{},"classes/WorkShift.html":{}}}],["procedure",{"_index":2091,"title":{},"body":{"components/SidebarComponent.html":{}}}],["process",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["processing",{"_index":2855,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["prod",{"_index":2644,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prod,dev,sandbox",{"_index":2710,"title":{},"body":{"index.html":{}}}],["product",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"modules/SettingsModule.html":{},"components/TeamManagerComponent.html":{},"additional-documentation/settings.html":{}}}],["product.service",{"_index":798,"title":{},"body":{"modules/CoreModule.html":{}}}],["product_short_name",{"_index":2413,"title":{},"body":{"injectables/UserService.html":{}}}],["productapi",{"_index":2300,"title":{},"body":{"injectables/UserService.html":{}}}],["productid",{"_index":767,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["production",{"_index":2676,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productions",{"_index":2654,"title":{},"body":{"index.html":{}}}],["productlist",{"_index":746,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{},"components/TeamManagerComponent.html":{}}}],["productlist.push(el.short_name",{"_index":1588,"title":{},"body":{"injectables/ProductService.html":{}}}],["productlistgrouped",{"_index":679,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["products",{"_index":766,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"additional-documentation/settings.html":{}}}],["products/areas",{"_index":779,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["products/areasplease",{"_index":784,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["productservice",{"_index":433,"title":{"injectables/ProductService.html":{}},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"injectables/ProductService.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["productshortname",{"_index":753,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["progress",{"_index":542,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["progressmessage",{"_index":434,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["project",{"_index":2615,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prompt",{"_index":2185,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["prompt(\"enter",{"_index":1605,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["prompt(`enter",{"_index":1939,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["promptinumber",{"_index":1160,"title":{},"body":{"injectables/LoginService.html":{}}}],["proof",{"_index":2475,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["properties",{"_index":164,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["provided",{"_index":2782,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1505,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{},"injectables/WebSocketAbstractService.html":{}}}],["providers",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"overview.html":{}}}],["public",{"_index":258,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":2768,"title":{},"body":{"license.html":{}}}],["pulls",{"_index":2695,"title":{},"body":{"index.html":{}}}],["pure",{"_index":827,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"index.html":{}}}],["purge",{"_index":510,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["purged",{"_index":514,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["purgelogs",{"_index":991,"title":{},"body":{"injectables/LogService.html":{}}}],["purging",{"_index":490,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["purpose",{"_index":2792,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2700,"title":{},"body":{"index.html":{}}}],["pval",{"_index":1938,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["q",{"_index":1793,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["q[math.floor(d.getmonth",{"_index":1957,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["qend",{"_index":1960,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["qend.getmonth",{"_index":1963,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["qend.setmonth(qend.getmonth",{"_index":1962,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["qian",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["qm",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["qm\").replace(/\\s/g",{"_index":1606,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["qm/:id",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardRoutingModule.html":{}}}],["qm/nw",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["qm_changed",{"_index":226,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["qmapi",{"_index":2301,"title":{},"body":{"injectables/UserService.html":{}}}],["qmcd",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["qmcddesigned",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["qmdatabase",{"_index":2940,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["qmdoclink",{"_index":1360,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["qminfocomponent",{"_index":137,"title":{"components/QmInfoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["qmtoolconfig",{"_index":2643,"title":{},"body":{"index.html":{}}}],["qmtoolconfig.dev.api",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qmtoolconfig.dev.ws_url",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qmtoolconfig.prod.api",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qmtoolconfig.prod.ws_url",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qmtoolconfig.ts",{"_index":2633,"title":{},"body":{"index.html":{}}}],["qmtooldb",{"_index":2730,"title":{},"body":{"index.html":{}}}],["qmtooldb_dev",{"_index":2728,"title":{},"body":{"index.html":{}}}],["qmtooldb_prod",{"_index":2729,"title":{},"body":{"index.html":{}}}],["qmuser",{"_index":1597,"title":{"classes/QmUser.html":{}},"body":{"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"coverage.html":{}}}],["qmuser|async)?.name",{"_index":1612,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["qnavbar",{"_index":700,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["quarter",{"_index":1970,"title":{},"body":{"components/RccManagementComponent.html":{},"additional-documentation/rcc.html":{}}}],["query",{"_index":2698,"title":{},"body":{"index.html":{}}}],["queue",{"_index":140,"title":{"additional-documentation/manual-queue-dispatcher.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["queue3",{"_index":473,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["queue_days_changed",{"_index":222,"title":{},"body":{"classes/ActionEntryLog.html":{},"miscellaneous/enumerations.html":{}}}],["queuecontrolcomponent",{"_index":139,"title":{"components/QueueControlComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["queuedashboardcomponent",{"_index":142,"title":{"components/QueueDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["queuedashboardmodule",{"_index":368,"title":{"modules/QueueDashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["queuedashboardroutingmodule",{"_index":1839,"title":{"modules/QueueDashboardRoutingModule.html":{}},"body":{"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["queuestateservice",{"_index":1664,"title":{"injectables/QueueStateService.html":{}},"body":{"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"coverage.html":{}}}],["quick",{"_index":1528,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{}}}],["quickly",{"_index":2899,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["quotes",{"_index":2734,"title":{},"body":{"index.html":{}}}],["r",{"_index":1946,"title":{},"body":{"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["r.code",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data)).subscribe((res",{"_index":1032,"title":{},"body":{"injectables/LogService.html":{}}}],["r.data.current_q_days",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.first_name",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.incident_counts",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.incident_threshold",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.is_available",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.last_name",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["r.data.supported_products",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["r.filter((user",{"_index":1911,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["r.flag",{"_index":1450,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["r.msg",{"_index":1452,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["r.sort",{"_index":2175,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["r.usage_percent",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["radius",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/QmInfoComponent.html":{},"components/TeamManagerComponent.html":{}}}],["ran",{"_index":2693,"title":{},"body":{"index.html":{}}}],["range",{"_index":886,"title":{},"body":{"classes/Helper.html":{}}}],["rankgroup",{"_index":2130,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["rankgroup(group",{"_index":851,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["rc.11",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["rcc",{"_index":145,"title":{"additional-documentation/rcc.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["rccdashboardcomponent",{"_index":144,"title":{"components/RccDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rccdashboardmodule",{"_index":369,"title":{"modules/RccDashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RccDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["rccmanagementcomponent",{"_index":146,"title":{"components/RccManagementComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["re",{"_index":1251,"title":{},"body":{"injectables/LoginService.html":{}}}],["reach",{"_index":2947,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["reached",{"_index":2873,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["reactiveformsmodule",{"_index":2025,"title":{},"body":{"modules/SettingsModule.html":{}}}],["ready",{"_index":1691,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["real",{"_index":2906,"title":{},"body":{"additional-documentation/settings.html":{}}}],["realtime",{"_index":2738,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["receive",{"_index":2853,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["received",{"_index":1782,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["rect(0",{"_index":1990,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["rect2",{"_index":964,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rect3",{"_index":967,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rect4",{"_index":969,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rect5",{"_index":971,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["red",{"_index":1826,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["redeveloped",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["redirectto",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref.service",{"_index":1293,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["refactor",{"_index":1538,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":601,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["refactoring",{"_index":2473,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["refer",{"_index":2619,"title":{},"body":{"index.html":{}}}],["reference",{"_index":2075,"title":{},"body":{"components/ShiftInfoComponent.html":{},"additional-documentation/introduction.html":{}}}],["refresh",{"_index":781,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{}}}],["refreshing",{"_index":1548,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/rcc.html":{}}}],["relational",{"_index":2742,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["remain",{"_index":2903,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["remember",{"_index":2891,"title":{},"body":{"additional-documentation/manage-team.html":{}}}],["removal",{"_index":1758,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["remove",{"_index":568,"title":{},"body":{"injectables/ArchiveService.html":{},"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{}}}],["removed",{"_index":1761,"title":{},"body":{"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["removeincident",{"_index":2314,"title":{},"body":{"injectables/UserService.html":{}}}],["removeincident(user",{"_index":2337,"title":{},"body":{"injectables/UserService.html":{}}}],["removeproduct",{"_index":749,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{}}}],["removeproduct(productshortname",{"_index":757,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"injectables/ProductService.html":{}}}],["removes",{"_index":549,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["removing",{"_index":1759,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["repeat",{"_index":1996,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["request",{"_index":1026,"title":{},"body":{"injectables/LogService.html":{}}}],["requests",{"_index":610,"title":{},"body":{"injectables/ArchiveService.html":{},"index.html":{}}}],["requestuser",{"_index":2422,"title":{},"body":{"injectables/UserService.html":{}}}],["requestuser.currentqdays",{"_index":2424,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":334,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["requires",{"_index":2667,"title":{},"body":{"index.html":{}}}],["res",{"_index":290,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/LogService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{}}}],["res.code",{"_index":1585,"title":{},"body":{"injectables/ProductService.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["res.data.foreach(el",{"_index":1587,"title":{},"body":{"injectables/ProductService.html":{}}}],["res.message",{"_index":1489,"title":{},"body":{"components/NotificationComponent.html":{}}}],["res[0",{"_index":2453,"title":{},"body":{"injectables/UserService.html":{}}}],["res[1",{"_index":2452,"title":{},"body":{"injectables/UserService.html":{}}}],["reset",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationSettingsComponent.html":{},"modules/CoreModule.html":{},"injectables/LogService.html":{},"components/PatchNotesComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{}}}],["reset_boolean",{"_index":1072,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["resetalluser",{"_index":2315,"title":{},"body":{"injectables/UserService.html":{}}}],["resetprogressarr",{"_index":435,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["resets",{"_index":1571,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"index.html":{}}}],["resetusers",{"_index":443,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["resolved",{"_index":1547,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["resp.code",{"_index":2366,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.current_q_days",{"_index":2390,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.first_name",{"_index":2387,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.incident_counts",{"_index":2393,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.incident_threshold",{"_index":2391,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.is_available",{"_index":2389,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.last_name",{"_index":2388,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.map(el",{"_index":2367,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.data.supported_products",{"_index":2394,"title":{},"body":{"injectables/UserService.html":{}}}],["resp.flag",{"_index":1425,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["resp.msg",{"_index":1423,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["resp.usage_perecent",{"_index":2392,"title":{},"body":{"injectables/UserService.html":{}}}],["response",{"_index":919,"title":{},"body":{"classes/Helper.html":{},"injectables/UserService.html":{}}}],["restart",{"_index":1786,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["restqueuedays",{"_index":2316,"title":{},"body":{"injectables/UserService.html":{}}}],["restqueuedays(user",{"_index":2340,"title":{},"body":{"injectables/UserService.html":{}}}],["restriction",{"_index":2763,"title":{},"body":{"license.html":{}}}],["result",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["result.data.map(el",{"_index":1036,"title":{},"body":{"injectables/LogService.html":{}}}],["results",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/settings.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["return",{"_index":243,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"classes/Notification.html":{},"injectables/ProductService.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["returned",{"_index":917,"title":{},"body":{"classes/Helper.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["rgb(218",{"_index":1816,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["rgba(255",{"_index":2105,"title":{},"body":{"components/SidebarComponent.html":{}}}],["right",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QueueControlComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["rights",{"_index":2766,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":1385,"title":{},"body":{"components/NavbarComponent.html":{}}}],["role",{"_index":2157,"title":{},"body":{"components/TeamManagerComponent.html":{},"additional-documentation/manage-team.html":{}}}],["roles",{"_index":1527,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{}}}],["roll",{"_index":2208,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["root",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{},"injectables/WebSocketAbstractService.html":{},"index.html":{}}}],["root'},{'name",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["route",{"_index":1666,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["routermodule",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardRoutingModule.html":{}}}],["routermodule.forchild",{"_index":1848,"title":{},"body":{"modules/QueueDashboardRoutingModule.html":{}}}],["routermodule.forroot",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":407,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueDashboardModule.html":{},"modules/SharedModule.html":{}}}],["routing.module.ts",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/QueueDashboardRoutingModule.html":{}}}],["row",{"_index":727,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["row.qm",{"_index":2203,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["row:first",{"_index":733,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["run",{"_index":2631,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1349,"title":{},"body":{"components/ModalServerErrorComponent.html":{},"index.html":{}}}],["rxjs",{"_index":277,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/Helper.html":{},"injectables/LogService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"dependencies.html":{}}}],["rxjs/index",{"_index":1504,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{}}}],["rxjs/operators",{"_index":279,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["same",{"_index":2634,"title":{},"body":{"index.html":{}}}],["sandbox",{"_index":2651,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":447,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["sans",{"_index":1388,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sap",{"_index":2936,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["sass",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["saving",{"_index":2288,"title":{},"body":{"classes/User.html":{}}}],["scaley(0.4",{"_index":975,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["scaley(1.0",{"_index":977,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["schemas",{"_index":2939,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["science",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["scm.com",{"_index":2627,"title":{},"body":{"index.html":{}}}],["scout33.org",{"_index":1221,"title":{},"body":{"injectables/LoginService.html":{}}}],["screen",{"_index":2948,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["scrollpositionrestoration",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":992,"title":{},"body":{"injectables/LogService.html":{}}}],["search(user",{"_index":1007,"title":{},"body":{"injectables/LogService.html":{}}}],["secondary",{"_index":1800,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["secret.js",{"_index":2722,"title":{},"body":{"index.html":{}}}],["section",{"_index":2016,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["sections",{"_index":1535,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["see",{"_index":2687,"title":{},"body":{"index.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/rcc.html":{}}}],["select",{"_index":2004,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["selector).attr(\"checked",{"_index":1923,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["sell",{"_index":2772,"title":{},"body":{"license.html":{}}}],["send",{"_index":1762,"title":{},"body":{"components/QueueControlComponent.html":{},"injectables/WebSocketAbstractService.html":{}}}],["sendmsg",{"_index":1496,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendmsg(msg",{"_index":1500,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sensitive",{"_index":1534,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["sep",{"_index":1954,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["separate",{"_index":2658,"title":{},"body":{"index.html":{}}}],["separated",{"_index":2666,"title":{},"body":{"index.html":{}}}],["serif",{"_index":1389,"title":{},"body":{"components/NavbarComponent.html":{}}}],["serve",{"_index":2670,"title":{},"body":{"index.html":{}}}],["served",{"_index":2689,"title":{},"body":{"index.html":{}}}],["server",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/WebSocketAbstractService.html":{},"coverage.html":{},"index.html":{}}}],["servers",{"_index":2604,"title":{},"body":{"index.html":{}}}],["service",{"_index":980,"title":{},"body":{"injectables/LogService.html":{}}}],["services",{"_index":1539,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["set",{"_index":2447,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["setcachedinumber",{"_index":993,"title":{},"body":{"injectables/LogService.html":{}}}],["setcachedinumber(i",{"_index":1009,"title":{},"body":{"injectables/LogService.html":{}}}],["setcachedtoken",{"_index":1161,"title":{},"body":{"injectables/LoginService.html":{}}}],["setcachedtoken(token",{"_index":1179,"title":{},"body":{"injectables/LoginService.html":{}}}],["setdate",{"_index":179,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["setdate(date",{"_index":206,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["setdatefromstring",{"_index":180,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["setdatefromstring(date",{"_index":208,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["setinumber",{"_index":1623,"title":{},"body":{"classes/QmUser.html":{}}}],["setinumber(inumber",{"_index":1631,"title":{},"body":{"classes/QmUser.html":{}}}],["setname",{"_index":1624,"title":{},"body":{"classes/QmUser.html":{}}}],["setname(name",{"_index":1633,"title":{},"body":{"classes/QmUser.html":{}}}],["setqm",{"_index":2317,"title":{},"body":{"injectables/UserService.html":{}}}],["setqm(inumber",{"_index":2342,"title":{},"body":{"injectables/UserService.html":{}}}],["sets",{"_index":545,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["setstatus",{"_index":2227,"title":{},"body":{"classes/User.html":{}}}],["setstatus(bool",{"_index":2261,"title":{},"body":{"classes/User.html":{}}}],["setsupportproudct",{"_index":2228,"title":{},"body":{"classes/User.html":{}}}],["setsupportproudct(objsupportproducts",{"_index":2264,"title":{},"body":{"classes/User.html":{}}}],["setting",{"_index":1435,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["setting.component",{"_index":2026,"title":{},"body":{"modules/SettingsModule.html":{}}}],["setting.component.css",{"_index":1436,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.html",{"_index":1437,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts",{"_index":1434,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{},"coverage.html":{}}}],["setting.component.ts:14",{"_index":1446,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts:15",{"_index":1444,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts:16",{"_index":1440,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts:18",{"_index":1443,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":1441,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1442,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["setting/notice",{"_index":1433,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settings",{"_index":421,"title":{"additional-documentation/settings.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/PatchNotesComponent.html":{},"components/SettingsComponent.html":{},"changelog.html":{},"additional-documentation/settings.html":{}}}],["settings'},{'name",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["settings.component",{"_index":2024,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.css",{"_index":430,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":431,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":429,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:14",{"_index":760,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":750,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":759,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:20",{"_index":465,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":754,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:22",{"_index":462,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":464,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":449,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":466,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:28",{"_index":461,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":460,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":456,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:37",{"_index":459,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":756,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:41",{"_index":457,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:47",{"_index":758,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:58",{"_index":752,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["settings.component.ts:61",{"_index":450,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:68",{"_index":458,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:81",{"_index":451,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings.component.ts:94",{"_index":454,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["settings/application",{"_index":428,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settings/component",{"_index":745,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settings/settings.component",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["settings/settings.module",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscomponent",{"_index":148,"title":{"components/SettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":370,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["setup",{"_index":2612,"title":{},"body":{"index.html":{}}}],["sfu",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["shadow",{"_index":710,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["shall",{"_index":2779,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2660,"title":{},"body":{"index.html":{}}}],["shared/components/activity",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/modals/modal",{"_index":1197,"title":{},"body":{"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["shared/helper/helper",{"_index":1024,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["shared/model/actionentrylog",{"_index":599,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"components/RccManagementComponent.html":{},"injectables/UserService.html":{}}}],["shared/model/detail",{"_index":1025,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["shared/model/user",{"_index":321,"title":{},"body":{"components/AddUserFormComponent.html":{},"injectables/ArchiveService.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["shared/model/work_shift",{"_index":2070,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["shared/shared.module",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/TeamDashboardModule.html":{}}}],["sharedmodule",{"_index":371,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["shift",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{}}}],["shift.location}}{{shift.getstatus",{"_index":2076,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["shift_brazil",{"_index":2048,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["shift_east",{"_index":2049,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["shift_west",{"_index":2050,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["shiftinfocomponent",{"_index":149,"title":{"components/ShiftInfoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shifts",{"_index":2051,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["short",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["short_name",{"_index":1592,"title":{},"body":{"injectables/ProductService.html":{}}}],["shortproductname",{"_index":2260,"title":{},"body":{"classes/User.html":{}}}],["show",{"_index":1350,"title":{},"body":{"components/ModalServerErrorComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"additional-documentation/manage-team.html":{}}}],["showadvancesettings",{"_index":436,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["showdatabasedown",{"_index":1162,"title":{},"body":{"injectables/LoginService.html":{}}}],["showdatabasedown(err",{"_index":1181,"title":{},"body":{"injectables/LoginService.html":{}}}],["shows",{"_index":1554,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/manage-team.html":{}}}],["showspinner",{"_index":261,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["side",{"_index":928,"title":{},"body":{"classes/Helper.html":{}}}],["sidebar",{"_index":1572,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{}}}],["sidebar'},{'name",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["sidebar.component.css",{"_index":2079,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2080,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":151,"title":{"components/SidebarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/settings.html":{}}}],["signin",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{}}}],["signout",{"_index":1163,"title":{},"body":{"injectables/LoginService.html":{}}}],["simply",{"_index":2900,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["single",{"_index":2914,"title":{},"body":{"additional-documentation/settings.html":{}}}],["size",{"_index":742,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["sizing",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["sk",{"_index":960,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["sminutes",{"_index":2525,"title":{},"body":{"classes/WorkShift.html":{}}}],["smith",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["snackbar",{"_index":437,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["social",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["socket",{"_index":2464,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["socket.io",{"_index":2470,"title":{},"body":{"injectables/WebSocketAbstractService.html":{},"dependencies.html":{}}}],["socket_id",{"_index":1859,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["software",{"_index":2703,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":732,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NotificationComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["something",{"_index":908,"title":{},"body":{"classes/Helper.html":{}}}],["sort",{"_index":833,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["sort(function",{"_index":2378,"title":{},"body":{"injectables/UserService.html":{}}}],["sortalpha",{"_index":880,"title":{},"body":{"classes/Helper.html":{}}}],["sortalpha(arr",{"_index":897,"title":{},"body":{"classes/Helper.html":{}}}],["sortbyalpha",{"_index":828,"title":{"pipes/SortByAlpha.html":{}},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"modules/QueueDashboardModule.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{},"overview.html":{}}}],["sortbyavgqday",{"_index":832,"title":{"pipes/SortByAVGQDay.html":{}},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"modules/QueueDashboardModule.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{},"overview.html":{}}}],["sortbyincidents",{"_index":2133,"title":{},"body":{"pipes/SortByPriority.html":{}}}],["sortbyincidents(group",{"_index":860,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["sortbypriority",{"_index":840,"title":{"pipes/SortByPriority.html":{}},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"modules/QueueDashboardModule.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{},"overview.html":{}}}],["sorting",{"_index":2872,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["sorts",{"_index":1590,"title":{},"body":{"injectables/ProductService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"classes/BodyParser.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"modules/MaterialModule.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["space",{"_index":1430,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["span.badge",{"_index":2206,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["speed",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{}}}],["spellcheckinginspection",{"_index":630,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/UserService.html":{}}}],["spinner",{"_index":939,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["spinner.component",{"_index":2034,"title":{},"body":{"modules/SharedModule.html":{}}}],["spinner.component.css",{"_index":940,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.html",{"_index":941,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":938,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:10",{"_index":942,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts:15",{"_index":943,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner/loading",{"_index":937,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["spot",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["sql",{"_index":1253,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["src/.../actionentrylog.ts",{"_index":2599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.dev.vm.ts",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/archive.service.ts",{"_index":558,"title":{},"body":{"injectables/ArchiveService.html":{},"coverage.html":{}}}],["src/app/core/archive.service.ts:14",{"_index":588,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:15",{"_index":590,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:16",{"_index":586,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:19",{"_index":597,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:23",{"_index":572,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:25",{"_index":591,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:28",{"_index":574,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:59",{"_index":584,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:63",{"_index":581,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:67",{"_index":576,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/archive.service.ts:75",{"_index":583,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["src/app/core/core.module.ts",{"_index":787,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/log.service.ts",{"_index":979,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/log.service.ts:126",{"_index":1004,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:134",{"_index":998,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:138",{"_index":1010,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:142",{"_index":1006,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:146",{"_index":1008,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:21",{"_index":1021,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:29",{"_index":1012,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:36",{"_index":1015,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:38",{"_index":994,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:40",{"_index":1013,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:51",{"_index":1002,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:70",{"_index":1003,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/log.service.ts:93",{"_index":996,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/login.service.ts",{"_index":1149,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/core/login.service.ts:104",{"_index":1178,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:118",{"_index":1182,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:133",{"_index":1183,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:19",{"_index":1190,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:20",{"_index":1192,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:21",{"_index":1193,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:23",{"_index":1186,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:24",{"_index":1187,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:25",{"_index":1166,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:27",{"_index":1188,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:28",{"_index":1184,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:32",{"_index":1173,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:51",{"_index":1168,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:67",{"_index":1175,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:71",{"_index":1174,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:75",{"_index":1180,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:80",{"_index":1171,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/login.service.ts:86",{"_index":1177,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/notification.service.ts",{"_index":1494,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/notification.service.ts:10",{"_index":1502,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/notification.service.ts:11",{"_index":1499,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/notification.service.ts:18",{"_index":1501,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/product.service.ts",{"_index":1575,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/core/product.service.ts:10",{"_index":1581,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:11",{"_index":1583,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:15",{"_index":1577,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:17",{"_index":1582,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:21",{"_index":1579,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:35",{"_index":1578,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/product.service.ts:40",{"_index":1580,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/core/queuestate.service.ts",{"_index":1849,"title":{},"body":{"injectables/QueueStateService.html":{},"coverage.html":{}}}],["src/app/core/queuestate.service.ts:10",{"_index":1855,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["src/app/core/queuestate.service.ts:11",{"_index":1852,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["src/app/core/queuestate.service.ts:13",{"_index":1856,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["src/app/core/queuestate.service.ts:18",{"_index":1853,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["src/app/core/user.service.ts",{"_index":2298,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:104",{"_index":2345,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:116",{"_index":2329,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:123",{"_index":2348,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:142",{"_index":2323,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:15",{"_index":2353,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:154",{"_index":2338,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:167",{"_index":2341,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:171",{"_index":2339,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:182",{"_index":2346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:195",{"_index":2331,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:209",{"_index":2343,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:21",{"_index":2360,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":2361,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:226",{"_index":2335,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:23",{"_index":2358,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:230",{"_index":2327,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:24",{"_index":2354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:243",{"_index":2330,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:25",{"_index":2356,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:26",{"_index":2321,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:28",{"_index":2351,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:29",{"_index":2352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:30",{"_index":2355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:33",{"_index":2336,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:60",{"_index":2333,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:78",{"_index":2325,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:96",{"_index":2350,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/websocketabstract.service.ts",{"_index":2463,"title":{},"body":{"injectables/WebSocketAbstractService.html":{},"coverage.html":{}}}],["src/app/core/websocketabstract.service.ts:15",{"_index":2466,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["src/app/core/websocketabstract.service.ts:22",{"_index":2468,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["src/app/login/login.component.ts",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:12",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/notice",{"_index":1408,"title":{},"body":{"components/NoticeBoardComponent.html":{},"coverage.html":{}}}],["src/app/patch",{"_index":1509,"title":{},"body":{"components/PatchNotesComponent.html":{},"coverage.html":{}}}],["src/app/queue",{"_index":656,"title":{},"body":{"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"modules/QueueDashboardModule.html":{},"modules/QueueDashboardRoutingModule.html":{},"components/ShiftInfoComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"coverage.html":{}}}],["src/app/rcc",{"_index":1861,"title":{},"body":{"components/RccDashboardComponent.html":{},"modules/RccDashboardModule.html":{},"components/RccManagementComponent.html":{},"coverage.html":{}}}],["src/app/settings/application",{"_index":427,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/notice",{"_index":1432,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{},"coverage.html":{}}}],["src/app/settings/product",{"_index":744,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts",{"_index":2008,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:11",{"_index":2009,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:15",{"_index":2013,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:16",{"_index":2012,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:17",{"_index":2011,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:20",{"_index":2010,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.module.ts",{"_index":2023,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/shared/components/activity",{"_index":250,"title":{},"body":{"components/ActivityLogComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/loading",{"_index":936,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/modals/modal",{"_index":1270,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts",{"_index":1354,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:11",{"_index":1366,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:12",{"_index":1369,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:13",{"_index":1367,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:14",{"_index":1362,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:16",{"_index":1370,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:19",{"_index":1364,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:27",{"_index":1363,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/notification/notification.component.ts",{"_index":1474,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/notification/notification.component.ts:12",{"_index":1480,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/shared/components/notification/notification.component.ts:14",{"_index":1482,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/shared/components/notification/notification.component.ts:17",{"_index":1481,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts",{"_index":2078,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:10",{"_index":2088,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:11",{"_index":2086,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:12",{"_index":2083,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:17",{"_index":2084,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/helper/bodyparser.ts",{"_index":641,"title":{},"body":{"classes/BodyParser.html":{},"coverage.html":{}}}],["src/app/shared/helper/bodyparser.ts:13",{"_index":648,"title":{},"body":{"classes/BodyParser.html":{}}}],["src/app/shared/helper/bodyparser.ts:3",{"_index":646,"title":{},"body":{"classes/BodyParser.html":{}}}],["src/app/shared/helper/helper.ts",{"_index":874,"title":{},"body":{"classes/Helper.html":{},"coverage.html":{}}}],["src/app/shared/helper/helper.ts:12",{"_index":893,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/helper/helper.ts:16",{"_index":884,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/helper/helper.ts:20",{"_index":888,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/helper/helper.ts:24",{"_index":896,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/helper/helper.ts:55",{"_index":898,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/helper/helper.ts:8",{"_index":890,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/shared/material.ts",{"_index":1263,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/model/actionentrylog.ts",{"_index":163,"title":{},"body":{"classes/ActionEntryLog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/model/actionentrylog.ts:16",{"_index":194,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:17",{"_index":190,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:18",{"_index":191,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:19",{"_index":188,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:20",{"_index":192,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:21",{"_index":193,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:22",{"_index":182,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:34",{"_index":201,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:38",{"_index":203,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:42",{"_index":205,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:46",{"_index":200,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:50",{"_index":204,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:54",{"_index":202,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:58",{"_index":207,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:62",{"_index":209,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/actionentrylog.ts:67",{"_index":196,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["src/app/shared/model/detail.ts",{"_index":801,"title":{},"body":{"classes/Detail.html":{},"coverage.html":{}}}],["src/app/shared/model/detail.ts:12",{"_index":812,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/shared/model/detail.ts:4",{"_index":807,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/shared/model/notification.ts",{"_index":1461,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["src/app/shared/model/notification.ts:12",{"_index":1468,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/shared/model/notification.ts:2",{"_index":1466,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/shared/model/notification.ts:3",{"_index":1467,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/shared/model/notification.ts:4",{"_index":1465,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/shared/model/qmuser.ts",{"_index":1620,"title":{},"body":{"classes/QmUser.html":{},"coverage.html":{}}}],["src/app/shared/model/qmuser.ts:13",{"_index":1629,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/qmuser.ts:17",{"_index":1630,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/qmuser.ts:2",{"_index":1628,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/qmuser.ts:25",{"_index":1634,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/qmuser.ts:3",{"_index":1626,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/qmuser.ts:9",{"_index":1632,"title":{},"body":{"classes/QmUser.html":{}}}],["src/app/shared/model/user.ts",{"_index":2212,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/model/user.ts:10",{"_index":2232,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:101",{"_index":2244,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:11",{"_index":2237,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:113",{"_index":2243,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:12",{"_index":2239,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:13",{"_index":2234,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:14",{"_index":2231,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:31",{"_index":2241,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:35",{"_index":2256,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:43",{"_index":2262,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:47",{"_index":2254,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:5",{"_index":2235,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:55",{"_index":2253,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:59",{"_index":2257,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:6",{"_index":2233,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:69",{"_index":2259,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:7",{"_index":2238,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:73",{"_index":2255,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:77",{"_index":2251,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:8",{"_index":2236,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:87",{"_index":2265,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.ts:9",{"_index":2240,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/work_shift.ts",{"_index":2505,"title":{},"body":{"classes/WorkShift.html":{},"coverage.html":{}}}],["src/app/shared/model/work_shift.ts:12",{"_index":2518,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/model/work_shift.ts:2",{"_index":2511,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/model/work_shift.ts:21",{"_index":2515,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/model/work_shift.ts:29",{"_index":2514,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/model/work_shift.ts:3",{"_index":2512,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/model/work_shift.ts:4",{"_index":2510,"title":{},"body":{"classes/WorkShift.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2031,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/team",{"_index":303,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{}}}],["src/environments",{"_index":2664,"title":{},"body":{"index.html":{}}}],["src/environments/environment.dev.vm.ts",{"_index":2561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src=\"../../../assets/fireball.gif",{"_index":1796,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["standard",{"_index":2716,"title":{},"body":{"index.html":{}}}],["start",{"_index":882,"title":{},"body":{"classes/Helper.html":{},"classes/WorkShift.html":{},"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["started",{"_index":2532,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":2735,"title":{},"body":{"index.html":{}}}],["state",{"_index":1850,"title":{},"body":{"injectables/QueueStateService.html":{},"index.html":{}}}],["statements",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":642,"title":{},"body":{"classes/BodyParser.html":{},"classes/Helper.html":{},"classes/User.html":{},"index.html":{}}}],["status",{"_index":925,"title":{},"body":{"classes/Helper.html":{},"components/QueueControlComponent.html":{}}}],["step",{"_index":2925,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["storage",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1000,"title":{},"body":{"injectables/LogService.html":{}}}],["stores",{"_index":2454,"title":{},"body":{"injectables/UserService.html":{}}}],["stretchdelay",{"_index":961,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["string",{"_index":189,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/AppComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{}}}],["stroke",{"_index":1400,"title":{},"body":{"components/NavbarComponent.html":{}}}],["stroke='rgba(255",{"_index":1397,"title":{},"body":{"components/NavbarComponent.html":{}}}],["structure",{"_index":2709,"title":{},"body":{"index.html":{}}}],["style=\"display",{"_index":1797,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["styling",{"_index":2741,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1017,"title":{},"body":{"injectables/LogService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{},"injectables/WebSocketAbstractService.html":{},"license.html":{}}}],["subject.create(observer",{"_index":2504,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["sublicense",{"_index":2770,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1459,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["subscribe",{"_index":491,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{}}}],["subscribe((users",{"_index":1738,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["subscribe(res",{"_index":1746,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["substantial",{"_index":2780,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1054,"title":{},"body":{"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["successfully",{"_index":515,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["such",{"_index":2608,"title":{},"body":{"index.html":{}}}],["sum",{"_index":1815,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["supplied",{"_index":1955,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["support",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoginComponent.html":{},"components/PatchNotesComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/settings.html":{}}}],["supported",{"_index":778,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"additional-documentation/settings.html":{}}}],["supportedproducts",{"_index":2217,"title":{},"body":{"classes/User.html":{}}}],["sure",{"_index":481,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["svg",{"_index":2804,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2878,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{}}}],["switchmap",{"_index":1023,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["switchmap((resp",{"_index":2397,"title":{},"body":{"injectables/UserService.html":{}}}],["switchmap((result",{"_index":1035,"title":{},"body":{"injectables/LogService.html":{}}}],["symbols",{"_index":2876,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{}}}],["symbols|description",{"_index":2877,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{}}}],["sync",{"_index":1703,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["system",{"_index":1472,"title":{},"body":{"classes/Notification.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{},"index.html":{}}}],["t",{"_index":864,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"components/RccManagementComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["t.data.filter(i",{"_index":1743,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["t.isavailable",{"_index":839,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["t.length",{"_index":1065,"title":{},"body":{"injectables/LogService.html":{}}}],["t.supportedproducts[component",{"_index":838,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["t[0].description",{"_index":1067,"title":{},"body":{"injectables/LogService.html":{}}}],["tab",{"_index":2868,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["table",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2714,"title":{},"body":{"index.html":{}}}],["tables.sql",{"_index":2712,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":484,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["taken",{"_index":1698,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["talk",{"_index":2697,"title":{},"body":{"index.html":{}}}],["tang",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"license.html":{}}}],["tangjoncl@gmail.com",{"_index":1352,"title":{},"body":{"components/ModalServerErrorComponent.html":{}}}],["tap",{"_index":468,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"injectables/UserService.html":{}}}],["tap((users",{"_index":1736,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tbl",{"_index":2199,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["team",{"_index":75,"title":{"additional-documentation/manage-team.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["teamdashboardcomponent",{"_index":153,"title":{"components/TeamDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamdashboardmodule",{"_index":372,"title":{"modules/TeamDashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamDashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["teammanagercomponent",{"_index":154,"title":{"components/TeamManagerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teams",{"_index":2933,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["tells",{"_index":1568,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["terrible",{"_index":2471,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["testing",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/ShiftInfoComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["text",{"_index":453,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentBarComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["things",{"_index":2622,"title":{},"body":{"index.html":{}}}],["this._bsmodalref.hide",{"_index":1299,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this._userlist",{"_index":1739,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["this._userlist.foreach(element",{"_index":1774,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this._userlist.foreach(user",{"_index":1770,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.actionactiveloglist",{"_index":289,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.actionid",{"_index":228,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.actionlist",{"_index":1033,"title":{},"body":{"injectables/LogService.html":{}}}],["this.actionlist.filter(i",{"_index":1063,"title":{},"body":{"injectables/LogService.html":{}}}],["this.actionlist.length",{"_index":1062,"title":{},"body":{"injectables/LogService.html":{}}}],["this.active",{"_index":1469,"title":{},"body":{"classes/Notification.html":{}}}],["this.activitylog",{"_index":285,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.addproduct(productid",{"_index":768,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.afauth.auth.signinwithemailandpassword(username",{"_index":1222,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.afauth.auth.signout",{"_index":1261,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.afauth.authstate.subscribe((auth",{"_index":1447,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["this.affectedinumber",{"_index":234,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.affectedusername",{"_index":236,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.applicationchangeflag",{"_index":1721,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.authenticatedwithbasictoken(this.getcachedtoken()).pipe(map",{"_index":1216,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authflag",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authmessage",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authtoken",{"_index":1212,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.buildbodyfromuserobject(user",{"_index":2403,"title":{},"body":{"injectables/UserService.html":{}}}],["this.converttominutes(this.end.gethours",{"_index":2529,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.converttominutes(this.start.gethours",{"_index":2526,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.converttominutes(today.gethours",{"_index":2523,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.currentdate",{"_index":1913,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.currentqdays",{"_index":2270,"title":{},"body":{"classes/User.html":{}}}],["this.daysleftinquarter(new",{"_index":1966,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.db.object(environment.firebaserooturl",{"_index":1420,"title":{},"body":{"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{}}}],["this.defaultdescription",{"_index":232,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.detail",{"_index":241,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.detail.tostring",{"_index":247,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.end",{"_index":2520,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.end.getminutes",{"_index":2530,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.entrylogsubject",{"_index":1045,"title":{},"body":{"injectables/LogService.html":{}}}],["this.entrylogsubject.getvalue().unshift(newentrylog",{"_index":1070,"title":{},"body":{"injectables/LogService.html":{}}}],["this.entrylogsubject.next(data",{"_index":1044,"title":{},"body":{"injectables/LogService.html":{}}}],["this.entrylogsubject.next(this.entrylogsubject.getvalue",{"_index":1071,"title":{},"body":{"injectables/LogService.html":{}}}],["this.errorhandler(error",{"_index":1741,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.errormessage",{"_index":1781,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.fetchproducts",{"_index":2170,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.firebase.createpushid",{"_index":605,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["this.firstname",{"_index":2267,"title":{},"body":{"classes/User.html":{}}}],["this.flag",{"_index":1424,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["this.formatcomponentrows(arrproductlist",{"_index":694,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["this.generatearchiveentrybody(archive_key",{"_index":609,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["this.generatelogbody(archive_key",{"_index":622,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["this.generateuserbody(user",{"_index":614,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["this.getcachedinumber",{"_index":1056,"title":{},"body":{"injectables/LogService.html":{}}}],["this.getcachedtoken",{"_index":1215,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.getdescription",{"_index":246,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.getincidenttotal",{"_index":2284,"title":{},"body":{"classes/User.html":{}}}],["this.getlogs().subscribe",{"_index":1077,"title":{},"body":{"injectables/LogService.html":{}}}],["this.getuserbynumber(inumber",{"_index":2399,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuserbynumber(inumber).pipe(switchmap",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusers()]).pipe(map((res",{"_index":2451,"title":{},"body":{"injectables/UserService.html":{}}}],["this.groupbyaqd(value).map(el",{"_index":865,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["this.handleerror(e",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handleerror(err",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hasauth",{"_index":1203,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.delete(`${this.api}/${productshortname",{"_index":1594,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.delete(`${this.userapi}/${inumber",{"_index":2409,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.incidentapi",{"_index":2418,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.api",{"_index":1029,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{}}}],["this.http.get(this.qmapi).pipe",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.userapi",{"_index":2448,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.userapi).pipe",{"_index":2363,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url).pipe",{"_index":2385,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.api",{"_index":1069,"title":{},"body":{"injectables/LogService.html":{},"injectables/ProductService.html":{}}}],["this.http.post(this.archiventryapi",{"_index":608,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["this.http.post(this.incidentapi",{"_index":2414,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.userapi",{"_index":2396,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.userapi}/${user.inumber",{"_index":2402,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.userapi}/${user.inumber}/${productshortname",{"_index":2410,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.qmapi",{"_index":2444,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(this.userapi",{"_index":2405,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpoptions",{"_index":616,"title":{},"body":{"injectables/ArchiveService.html":{},"injectables/LogService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.httpoptions).pipe",{"_index":1034,"title":{},"body":{"injectables/LogService.html":{},"injectables/ProductService.html":{}}}],["this.httpoptions).pipe(map((r",{"_index":1031,"title":{},"body":{"injectables/LogService.html":{}}}],["this.httpoptions).pipe(tap",{"_index":1073,"title":{},"body":{"injectables/LogService.html":{}}}],["this.id",{"_index":1731,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.id$.subscribe(value",{"_index":1733,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.incidentcounts",{"_index":2272,"title":{},"body":{"classes/User.html":{}}}],["this.incidentcounts[key",{"_index":2278,"title":{},"body":{"classes/User.html":{}}}],["this.incidentcounts[productshortname",{"_index":2279,"title":{},"body":{"classes/User.html":{}}}],["this.inumber",{"_index":1635,"title":{},"body":{"classes/QmUser.html":{},"classes/User.html":{}}}],["this.isavailable",{"_index":2269,"title":{},"body":{"classes/User.html":{}}}],["this.ithreshold",{"_index":2271,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":2268,"title":{},"body":{"classes/User.html":{}}}],["this.lastqueuedayupdatedict",{"_index":1969,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.location",{"_index":2521,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.loggerinumber",{"_index":230,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.login(username",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.authenticatedwithbasictoken().subscribe",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.authenticatewithfirebase(username",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.authenticatewithusernamepassword(username",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.getcachedtoken",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.logonwithinumber(cachedinumber",{"_index":1376,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loginservice.signout",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.logonwithinumber(input.tolowercase",{"_index":1245,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.logonwithinumber(null",{"_index":1247,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.logservice.addlog(user",{"_index":2406,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logservice.getlogs().pipe(map(arr",{"_index":286,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.logservice.purgelogs().pipe(tap",{"_index":489,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.logservice.purgelogs().subscribe",{"_index":512,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.matsnackbar.open(\"error",{"_index":1927,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.matsnackbar.open(\"update",{"_index":1925,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.matsnackbar.open(`invalid",{"_index":1929,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.max_incidents",{"_index":1699,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.merge(t",{"_index":872,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["this.message",{"_index":1422,"title":{},"body":{"components/NoticeBoardComponent.html":{},"classes/Notification.html":{}}}],["this.modalservice.show(modalconfirmcomponent",{"_index":1749,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.modalservice.show(modalinputcomponent",{"_index":1232,"title":{},"body":{"injectables/LoginService.html":{},"components/RccManagementComponent.html":{}}}],["this.modalservice.show(modalservererrorcomponent",{"_index":1255,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.name",{"_index":1636,"title":{},"body":{"classes/QmUser.html":{},"classes/User.html":{}}}],["this.ngoninit",{"_index":1777,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.notice",{"_index":1419,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["this.notice$.valuechanges().subscribe(resp",{"_index":1421,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["this.noticeboardflag",{"_index":1449,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["this.noticeboardmsg",{"_index":1451,"title":{},"body":{"components/NoticeBoardSettingComponent.html":{}}}],["this.notification_array.push(new",{"_index":1487,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notifications",{"_index":1506,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notifications.next(msg",{"_index":1508,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationservice.notifications.subscribe(res",{"_index":1485,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.num_of_results))).subscribe((res",{"_index":288,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.oncancel",{"_index":1295,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.oncancel.next",{"_index":1300,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.onconfirm",{"_index":1296,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.onconfirm.next",{"_index":1298,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.onconfirm.next(input",{"_index":1319,"title":{},"body":{"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{}}}],["this.onhide",{"_index":1297,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.onhide.next",{"_index":1301,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["this.paramid",{"_index":1734,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.paramid).subscribe",{"_index":1753,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.parsebodyresult(body",{"_index":650,"title":{},"body":{"classes/BodyParser.html":{}}}],["this.populatetodayincident(user",{"_index":1737,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.productlist",{"_index":765,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.productlist.push(productshortname",{"_index":776,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.productlist.splice(this.productlist.indexof(productshortname",{"_index":773,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.productlistgrouped",{"_index":693,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["this.productservice.addproduct(productshortname).subscribe",{"_index":774,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.productservice.getproducts().pipe(map((data",{"_index":762,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.productservice.getproducts().subscribe(arrproductlist",{"_index":692,"title":{},"body":{"components/ComponentBarComponent.html":{}}}],["this.productservice.getproducts().subscribe(r",{"_index":2178,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.productservice.removeproduct(productshortname).subscribe",{"_index":771,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.progressmessage",{"_index":487,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.promptinumber",{"_index":1230,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.qmuser",{"_index":1602,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["this.queuestateservice.modifyqueue",{"_index":1757,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.queuestateservice.state.subscribe(data",{"_index":1728,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.queuestateservice.websocketabstractservice.socket.id",{"_index":1730,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.refresh",{"_index":1074,"title":{},"body":{"injectables/LogService.html":{}}}],["this.resetprogressarr[1",{"_index":506,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.resetprogressarr[3",{"_index":516,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.route.params.pipe(pluck('id",{"_index":1732,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.setcachedtoken(btoa(`${username}:${password",{"_index":1211,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.setsupportproudct(objsupportproducts",{"_index":2274,"title":{},"body":{"classes/User.html":{}}}],["this.shift_brazil",{"_index":2068,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["this.shift_east",{"_index":2066,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["this.shift_west",{"_index":2067,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["this.shift_west.start",{"_index":2071,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["this.showadvancesettings",{"_index":479,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.showdatabasedown(err",{"_index":1229,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.showspinner",{"_index":485,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.signout",{"_index":1249,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.sinkheavy(this.merge(value",{"_index":867,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["this.snackbar.open(\"please",{"_index":2196,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.snackbar.open(\"refreshing",{"_index":1779,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.snackbar.open(\"toggle",{"_index":1767,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.snackbar.open(\"update",{"_index":2184,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.snackbar.open(\"welcome",{"_index":1609,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["this.snackbar.open('incident",{"_index":1754,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.snackbar.open('logs",{"_index":513,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.snackbar.open('one",{"_index":492,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.snackbar.open('queue",{"_index":507,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.snackbar.open(`added",{"_index":775,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.snackbar.open(`an",{"_index":497,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.snackbar.open(`removed",{"_index":772,"title":{},"body":{"components/ComponentSettingsComponent.html":{}}}],["this.snackbar.open(error.message",{"_index":777,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.socket",{"_index":2478,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["this.socket.disconnect",{"_index":2494,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["this.socket.emit(key",{"_index":2500,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["this.socket.on(\"connect",{"_index":2485,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["this.socket.on(key",{"_index":2490,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["this.sortbyincidents(el",{"_index":866,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["this.start",{"_index":2519,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.start.getminutes",{"_index":2527,"title":{},"body":{"classes/WorkShift.html":{}}}],["this.state",{"_index":1857,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["this.state.next",{"_index":1858,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["this.supportedproducts",{"_index":2273,"title":{},"body":{"classes/User.html":{}}}],["this.supportedproducts[key",{"_index":2281,"title":{},"body":{"classes/User.html":{}}}],["this.supportedproducts[shortproductname",{"_index":2283,"title":{},"body":{"classes/User.html":{}}}],["this.timestamp",{"_index":238,"title":{},"body":{"classes/ActionEntryLog.html":{}}}],["this.todayuserincidentdict[user.inumber",{"_index":1747,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.tostring",{"_index":814,"title":{},"body":{"classes/Detail.html":{}}}],["this.totalincidents",{"_index":1772,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.totalincidentsctx",{"_index":1776,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.type",{"_index":1470,"title":{},"body":{"classes/Notification.html":{}}}],["this.type.touppercase",{"_index":1473,"title":{},"body":{"classes/Notification.html":{}}}],["this.updatequeuedaydict",{"_index":1914,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.updatesummary",{"_index":1740,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.updateusermeta(requestuser",{"_index":2425,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usagepercent",{"_index":2266,"title":{},"body":{"classes/User.html":{}}}],["this.user",{"_index":1225,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.user.inumber",{"_index":1227,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.userapi}/${inumber",{"_index":2384,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist",{"_index":2174,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.userlist.push(user",{"_index":332,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.users",{"_index":2171,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.users.subscribe(r",{"_index":2173,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.userserivce.resetalluser().pipe(tap",{"_index":486,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.userserivce.resetalluser().subscribe",{"_index":505,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["this.userservice.addincident(user",{"_index":1752,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.adduser(f.value.name",{"_index":330,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["this.userservice.deleteuser(user.inumber).subscribe((res",{"_index":2186,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.userservice.getlastqueuedaychange().subscribe(res",{"_index":1968,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.userservice.getqm",{"_index":1603,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["this.userservice.getuserbynumber(inumber.tolowercase()).subscribe((user",{"_index":1224,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.userservice.getuserincidents(user.inumber).pipe(map((t",{"_index":1742,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.getusers().pipe",{"_index":1735,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.getusers().subscribe((r",{"_index":1910,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.userservice.getusers().subscribe(user",{"_index":2187,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.userservice.logservice.refresh",{"_index":1778,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.removeincident(user",{"_index":1760,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.setqm(uinput.tolowercase()).subscribe",{"_index":1608,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["this.userservice.updateavailability(user",{"_index":1764,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.userservice.updatequeuedays(user",{"_index":1920,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["this.userservice.updatesupport(user",{"_index":2190,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.userservice.updateusermeta(user).subscribe(r",{"_index":2183,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["this.websocketabstractservice.socket.id",{"_index":1860,"title":{},"body":{"injectables/QueueStateService.html":{}}}],["this.websocketservice.connect().subscribe((data",{"_index":1725,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["this.websocketservice.socketid",{"_index":1727,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["threshold",{"_index":2197,"title":{},"body":{"components/TeamManagerComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{}}}],["thresholds",{"_index":1518,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["through",{"_index":2629,"title":{},"body":{"index.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["throw",{"_index":2379,"title":{},"body":{"injectables/UserService.html":{}}}],["throwerror",{"_index":900,"title":{},"body":{"classes/Helper.html":{},"injectables/UserService.html":{}}}],["throwerror(new",{"_index":2400,"title":{},"body":{"injectables/UserService.html":{}}}],["tickets",{"_index":2095,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["time",{"_index":295,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/PatchNotesComponent.html":{},"changelog.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["times",{"_index":1302,"title":{},"body":{"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{}}}],["timestamp",{"_index":171,"title":{},"body":{"classes/ActionEntryLog.html":{},"injectables/LogService.html":{}}}],["tip",{"_index":1719,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_add_incident",{"_index":1646,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_available",{"_index":1647,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_busy",{"_index":1648,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_fireball",{"_index":1649,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_refresh",{"_index":1650,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_remove_incident",{"_index":1651,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["tip_total_incidents",{"_index":1652,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["title",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{}}}],["tminutes",{"_index":2522,"title":{},"body":{"classes/WorkShift.html":{}}}],["tmp",{"_index":857,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{}}}],["tmp.concat(r",{"_index":859,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["today",{"_index":1706,"title":{},"body":{"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"classes/WorkShift.html":{},"additional-documentation/manual-queue-dispatcher.html":{}}}],["today.getminutes",{"_index":2524,"title":{},"body":{"classes/WorkShift.html":{}}}],["todayuserincidentdict",{"_index":1653,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["todo",{"_index":1050,"title":{},"body":{"injectables/LogService.html":{},"injectables/LoginService.html":{}}}],["toggle",{"_index":1763,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/settings.html":{}}}],["toggleadvancedsettings",{"_index":444,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["toggleavailability",{"_index":1660,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["toggleavailability(user",{"_index":1677,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["toggler",{"_index":1390,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglerole",{"_index":2149,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["togglerole(user",{"_index":2156,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["token",{"_index":1169,"title":{},"body":{"injectables/LoginService.html":{}}}],["tool",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"injectables/LoginService.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/rcc.html":{}}}],["tooltip",{"_index":741,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QueueControlComponent.html":{}}}],["tooltipmodule",{"_index":2046,"title":{},"body":{"modules/SharedModule.html":{}}}],["tooltipmodule.forroot",{"_index":2044,"title":{},"body":{"modules/SharedModule.html":{}}}],["tooltips",{"_index":737,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/QueueControlComponent.html":{}}}],["top",{"_index":735,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["tort",{"_index":2801,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":802,"title":{},"body":{"classes/Detail.html":{},"classes/Notification.html":{}}}],["total",{"_index":1552,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"changelog.html":{}}}],["totala",{"_index":1769,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["totalb",{"_index":1773,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["totalincidents",{"_index":852,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/QueueControlComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["totalincidentsctx",{"_index":1654,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["touch",{"_index":2002,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["tr.high",{"_index":1824,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["track",{"_index":2902,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["tracks",{"_index":2606,"title":{},"body":{"index.html":{}}}],["transform",{"_index":822,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["transform(value",{"_index":823,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["transparent",{"_index":2859,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["treat",{"_index":2657,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["trial",{"_index":2935,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["true",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NotificationComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true)?.length",{"_index":1789,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["twenty",{"_index":1821,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["two",{"_index":703,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoginComponent.html":{}}}],["txt",{"_index":525,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["type",{"_index":186,"title":{},"body":{"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"interfaces/ModalInterface.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"classes/Notification.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WebSocketAbstractService.html":{},"classes/WorkShift.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/settings.html":{}}}],["type.touppercase",{"_index":1471,"title":{},"body":{"classes/Notification.html":{}}}],["u",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["u.inumber",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["ui",{"_index":1542,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["uinput",{"_index":1604,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["uinput.length",{"_index":1607,"title":{},"body":{"components/QmInfoComponent.html":{}}}],["unavailable",{"_index":1809,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["under",{"_index":2745,"title":{},"body":{"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["unit",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["unitofmeasurement",{"_index":806,"title":{},"body":{"classes/Detail.html":{}}}],["unitofmeasurement}`).trim",{"_index":815,"title":{},"body":{"classes/Detail.html":{}}}],["unitoftime",{"_index":899,"title":{},"body":{"classes/Helper.html":{}}}],["unitoftime.startof",{"_index":887,"title":{},"body":{"classes/Helper.html":{}}}],["unsuccessful",{"_index":918,"title":{},"body":{"classes/Helper.html":{}}}],["until",{"_index":2946,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["up",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/PatchNotesComponent.html":{},"components/QueueControlComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/manage-team.html":{}}}],["update",{"_index":2092,"title":{},"body":{"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{}}}],["update.sh",{"_index":2694,"title":{},"body":{"index.html":{}}}],["updateavailability",{"_index":2318,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavailability(user",{"_index":2344,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":1550,"title":{},"body":{"components/PatchNotesComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"additional-documentation/rcc.html":{}}}],["updatequeuedaydict",{"_index":1880,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["updatequeuedays",{"_index":1881,"title":{},"body":{"components/RccManagementComponent.html":{},"injectables/UserService.html":{}}}],["updatequeuedays(user",{"_index":1898,"title":{},"body":{"components/RccManagementComponent.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":1018,"title":{},"body":{"injectables/LogService.html":{},"components/PatchNotesComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["updatesummary",{"_index":1661,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["updatesupport",{"_index":2319,"title":{},"body":{"injectables/UserService.html":{}}}],["updatesupport(user",{"_index":2347,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":2150,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["updateuser(user",{"_index":2159,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["updateusermeta",{"_index":2320,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusermeta(user",{"_index":2349,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":2898,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["url",{"_index":1027,"title":{},"body":{"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["url(\"../../../assets/csscheckbox.png",{"_index":2001,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["url(\"data:image/svg+xml;charset=utf8,%3csvg",{"_index":1393,"title":{},"body":{"components/NavbarComponent.html":{}}}],["usage",{"_index":2160,"title":{},"body":{"components/TeamManagerComponent.html":{},"additional-documentation/manage-team.html":{}}}],["usage_percent",{"_index":2249,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["usagepercent",{"_index":638,"title":{},"body":{"injectables/ArchiveService.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"classes/User.html":{}}}],["use",{"_index":1956,"title":{},"body":{"components/RccManagementComponent.html":{},"components/ShiftInfoComponent.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":2656,"title":{},"body":{"index.html":{}}}],["usehash",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamDashboardComponent.html":{},"modules/TeamDashboardModule.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/manual-queue-dispatcher.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["user's",{"_index":2093,"title":{},"body":{"components/SidebarComponent.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{}}}],["user(el.user_id",{"_index":2369,"title":{},"body":{"injectables/UserService.html":{}}}],["user(r.data.user_id",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["user(resp.data.user_id",{"_index":2386,"title":{},"body":{"injectables/UserService.html":{}}}],["user(user.inumber",{"_index":2293,"title":{},"body":{"classes/User.html":{}}}],["user.copy(user",{"_index":2423,"title":{},"body":{"injectables/UserService.html":{}}}],["user.currentqdays",{"_index":1919,"title":{},"body":{"components/RccManagementComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user.currentqdays.tostring",{"_index":637,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["user.firstname",{"_index":2179,"title":{},"body":{"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user.foreach((user",{"_index":842,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["user.generatemetabody",{"_index":2401,"title":{},"body":{"injectables/UserService.html":{}}}],["user.getaverageqday",{"_index":1804,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.getincidentamount(paramid",{"_index":1798,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.getincidenttotal",{"_index":1771,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.hasrole(role",{"_index":2189,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["user.incidentcounts",{"_index":2296,"title":{},"body":{"classes/User.html":{}}}],["user.incidentcounts[productshortname",{"_index":2417,"title":{},"body":{"injectables/UserService.html":{}}}],["user.incidentcounts[this.paramid",{"_index":1756,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.inumber",{"_index":631,"title":{},"body":{"injectables/ArchiveService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["user.inumber.touppercase",{"_index":1080,"title":{},"body":{"injectables/LogService.html":{},"components/RccManagementComponent.html":{}}}],["user.inumber}.css",{"_index":1922,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["user.inumber}/${productshortname",{"_index":2419,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isavailable",{"_index":2295,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["user.isavailable).subscribe",{"_index":1765,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.isavailable.tostring",{"_index":635,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["user.ithreshold",{"_index":1794,"title":{},"body":{"components/QueueControlComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user.key",{"_index":633,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["user.lastname",{"_index":2294,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["user.name",{"_index":632,"title":{},"body":{"injectables/ArchiveService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{}}}],["user.name()}(${user.inumber",{"_index":1751,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.service",{"_index":789,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LoginService.html":{}}}],["user.setstatus(!user.isavailable",{"_index":1766,"title":{},"body":{"components/QueueControlComponent.html":{}}}],["user.supportedproducts",{"_index":2297,"title":{},"body":{"classes/User.html":{}}}],["user.supportedproducts[role",{"_index":2192,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["user.usagepercent",{"_index":2180,"title":{},"body":{"components/TeamManagerComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user.usagepercent.tostring",{"_index":639,"title":{},"body":{"injectables/ArchiveService.html":{}}}],["user\\'s",{"_index":2121,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user_id",{"_index":2245,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["user_inumber",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":2302,"title":{},"body":{"injectables/UserService.html":{}}}],["userapi",{"_index":2303,"title":{},"body":{"injectables/UserService.html":{}}}],["userlist",{"_index":2146,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["userlog",{"_index":2456,"title":{},"body":{"injectables/UserService.html":{}}}],["userlog.getdateformatted",{"_index":2461,"title":{},"body":{"injectables/UserService.html":{}}}],["userlog.gettimeformatted",{"_index":2462,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["username.trim",{"_index":1205,"title":{},"body":{"injectables/LoginService.html":{}}}],["users",{"_index":504,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/settings.html":{}}}],["users.foreach((u",{"_index":2455,"title":{},"body":{"injectables/UserService.html":{}}}],["users.foreach(user",{"_index":612,"title":{},"body":{"injectables/ArchiveService.html":{},"components/QueueControlComponent.html":{}}}],["users/qm",{"_index":2357,"title":{},"body":{"injectables/UserService.html":{}}}],["userserivce",{"_index":438,"title":{},"body":{"components/ApplicationSettingsComponent.html":{}}}],["userservice",{"_index":310,"title":{"injectables/UserService.html":{}},"body":{"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"modules/CoreModule.html":{},"injectables/LoginService.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice.getusers",{"_index":2172,"title":{},"body":{"components/TeamManagerComponent.html":{}}}],["usersource",{"_index":2304,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":1347,"title":{},"body":{"components/ModalServerErrorComponent.html":{},"components/QueueControlComponent.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["v2.10",{"_index":1540,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["v2.11",{"_index":1537,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["v2.20",{"_index":1530,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["v2.3.1",{"_index":1516,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["v3.0",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val",{"_index":1930,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["valid",{"_index":324,"title":{},"body":{"components/AddUserFormComponent.html":{},"components/TeamManagerComponent.html":{}}}],["value",{"_index":267,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentSettingsComponent.html":{},"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"injectables/QueueStateService.html":{},"components/RccManagementComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{},"components/TeamManagerComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/rcc.html":{}}}],["value.filter((t",{"_index":837,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["value.sort",{"_index":829,"title":{},"body":{"pipes/FilterPipe.html":{},"pipes/IsAvailable.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{},"pipes/SortByPriority.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/AppComponent.html":{},"components/ApplicationSettingsComponent.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{}}}],["variable",{"_index":1717,"title":{},"body":{"components/QueueControlComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":283,"title":{"miscellaneous/variables.html":{}},"body":{"components/ActivityLogComponent.html":{},"injectables/LoginService.html":{},"components/QueueControlComponent.html":{},"injectables/WebSocketAbstractService.html":{},"miscellaneous/variables.html":{},"additional-documentation/manage-team.html":{},"additional-documentation/rcc.html":{}}}],["verify",{"_index":2365,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":2097,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["vertical",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"components/RccManagementComponent.html":{}}}],["vh",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["view",{"_index":2921,"title":{},"body":{"additional-documentation/settings.html":{}}}],["viewbox='0",{"_index":1394,"title":{},"body":{"components/NavbarComponent.html":{}}}],["views",{"_index":2879,"title":{},"body":{"additional-documentation/manual-queue-dispatcher.html":{}}}],["virtual",{"_index":2641,"title":{},"body":{"index.html":{}}}],["vitrual",{"_index":2924,"title":{},"body":{"additional-documentation/hana-cloud-cockpit.html":{}}}],["vm",{"_index":2671,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vmip",{"_index":2640,"title":{},"body":{"index.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActionEntryLog.html":{},"components/ActivityLogComponent.html":{},"components/AddUserFormComponent.html":{},"components/ApplicationSettingsComponent.html":{},"injectables/ArchiveService.html":{},"components/ClipboardComponent.html":{},"components/ComponentBarComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/LoadingSpinnerComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalConfirmComponent.html":{},"components/ModalInfoComponent.html":{},"components/ModalInputComponent.html":{},"components/ModalServerErrorComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/NoticeBoardSettingComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationService.html":{},"components/PatchNotesComponent.html":{},"components/QmInfoComponent.html":{},"classes/QmUser.html":{},"components/QueueControlComponent.html":{},"components/QueueDashboardComponent.html":{},"injectables/QueueStateService.html":{},"components/RccDashboardComponent.html":{},"components/RccManagementComponent.html":{},"components/SettingsComponent.html":{},"components/ShiftInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamDashboardComponent.html":{},"components/TeamManagerComponent.html":{},"classes/User.html":{}}}],["want",{"_index":482,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/ComponentSettingsComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["warnings",{"_index":2874,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["warranties",{"_index":2788,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2783,"title":{},"body":{"license.html":{}}}],["way",{"_index":2860,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["web",{"_index":2534,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["webkit",{"_index":958,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["websocket",{"_index":2492,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["websocketabstract.service",{"_index":1503,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{}}}],["websocketabstractservice",{"_index":1498,"title":{"injectables/WebSocketAbstractService.html":{}},"body":{"injectables/NotificationService.html":{},"injectables/QueueStateService.html":{},"injectables/WebSocketAbstractService.html":{},"coverage.html":{}}}],["weight",{"_index":725,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QmInfoComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["welcome",{"_index":1378,"title":{},"body":{"components/NavbarComponent.html":{},"additional-documentation/introduction.html":{}}}],["well",{"_index":1256,"title":{},"body":{"injectables/LoginService.html":{}}}],["went",{"_index":909,"title":{},"body":{"classes/Helper.html":{}}}],["whenever",{"_index":2497,"title":{},"body":{"injectables/WebSocketAbstractService.html":{}}}],["whether",{"_index":1053,"title":{},"body":{"injectables/LogService.html":{},"license.html":{},"additional-documentation/rcc.html":{}}}],["white",{"_index":717,"title":{},"body":{"components/ComponentBarComponent.html":{},"components/NavbarComponent.html":{},"components/NoticeBoardComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/TeamManagerComponent.html":{}}}],["width",{"_index":669,"title":{},"body":{"components/ClipboardComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/LoginComponent.html":{},"components/QmInfoComponent.html":{},"components/QueueControlComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TeamManagerComponent.html":{}}}],["width='3",{"_index":1401,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window.confirm(\"are",{"_index":480,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["window.confirm(`${user.name",{"_index":1934,"title":{},"body":{"components/RccManagementComponent.html":{}}}],["window.confirm(`are",{"_index":770,"title":{},"body":{"components/ComponentSettingsComponent.html":{},"components/TeamManagerComponent.html":{}}}],["wip",{"_index":1573,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["without",{"_index":2762,"title":{},"body":{"license.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["won't",{"_index":2043,"title":{},"body":{"modules/SharedModule.html":{},"additional-documentation/hana-cloud-cockpit.html":{}}}],["word",{"_index":1427,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["work",{"_index":1219,"title":{},"body":{"injectables/LoginService.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["workbench",{"_index":2706,"title":{},"body":{"index.html":{}}}],["worked",{"_index":1546,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["workload",{"_index":1825,"title":{},"body":{"components/QueueControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["works",{"_index":1544,"title":{},"body":{"components/PatchNotesComponent.html":{},"changelog.html":{}}}],["workshift",{"_index":2069,"title":{"classes/WorkShift.html":{}},"body":{"components/ShiftInfoComponent.html":{},"classes/WorkShift.html":{},"coverage.html":{}}}],["workshift('brazil",{"_index":2053,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["workshift('east",{"_index":2059,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["workshift('west",{"_index":2062,"title":{},"body":{"components/ShiftInfoComponent.html":{}}}],["wrap",{"_index":1428,"title":{},"body":{"components/NoticeBoardComponent.html":{}}}],["wrapper",{"_index":2098,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrong",{"_index":910,"title":{},"body":{"classes/Helper.html":{}}}],["ws_url",{"_index":2646,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":2110,"title":{},"body":{"components/SidebarComponent.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1396,"title":{},"body":{"components/NavbarComponent.html":{}}}],["xslt",{"_index":2669,"title":{},"body":{"index.html":{}}}],["year",{"_index":2892,"title":{},"body":{"additional-documentation/rcc.html":{}}}],["yes",{"_index":809,"title":{},"body":{"classes/Detail.html":{},"pipes/FilterPipe.html":{},"classes/Helper.html":{},"injectables/LoginService.html":{},"pipes/SortByAVGQDay.html":{},"pipes/SortByAlpha.html":{}}}],["z",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RccManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["zero",{"_index":546,"title":{},"body":{"components/ApplicationSettingsComponent.html":{},"additional-documentation/settings.html":{}}}],["zone.js",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueDashboardModule.html":{},"modules/RccDashboardModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TeamDashboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \nAbout QMCD\nDesigned to speed up and ease the process of manual incident dispatching to support engineers in Product Support -\n  EPM\n\n\n\n  \n    Collaborators\n  \n  \n    \n    Jonathan Tang\n    SFU Computer Science\n    Product Support iXp Intern. Redeveloped the QMCD Tool in early 2018\n  \n  \n    \n    Allen Qian\n    \n    SFU Computer Science\n    Product Support iXp Intern. Developed the original idea and tool in 2017\n  \n  \n    \n    Ahaan\n    \n    Computer Science\n    Product Support iXp Intern. Assisted with the testing and guided the development of the new tool\n  \n  -->\n  -->\n  John Smith-->\n  Job Title-->\n  -->\n  What does this team member to? Keep it short! This is also a great spot for social links!-->\n  -->\n  -->\n  -->\n  John Smith-->\n  Job Title-->\n  -->\n  What does this team member to? Keep it short! This is also a great spot for social links!-->\n  -->\n  -->\n  -->\n  John Smith-->\n  Job Title-->\n  -->\n  What does this team member to? Keep it short! This is also a great spot for social links!-->\n  -->\n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'About QMCDDesigned to speed up and ease the process of manual incident dispatching to support engineers in Product Support -  EPM      Collaborators            Jonathan Tang    SFU Computer Science    Product Support iXp Intern. Redeveloped the QMCD Tool in early 2018            Allen Qian        SFU Computer Science    Product Support iXp Intern. Developed the original idea and tool in 2017            Ahaan        Computer Science    Product Support iXp Intern. Assisted with the testing and guided the development of the new tool    -->  -->  John Smith-->  Job Title-->  -->  What does this team member to? Keep it short! This is also a great spot for social links!-->  -->  -->  -->  John Smith-->  Job Title-->  -->  What does this team member to? Keep it short! This is also a great spot for social links!-->  -->  -->  -->  John Smith-->  Job Title-->  -->  What does this team member to? Keep it short! This is also a great spot for social links!-->  -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionEntryLog.html":{"url":"classes/ActionEntryLog.html","title":"class - ActionEntryLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionEntryLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/actionEntryLog.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionId\n                            \n                            \n                                affectedInumber\n                            \n                            \n                                affectedUserName\n                            \n                            \n                                defaultDescription\n                            \n                            \n                                detail\n                            \n                            \n                                loggerInumber\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generatePostBody\n                            \n                            \n                                getDateFormatted\n                            \n                            \n                                getDescription\n                            \n                            \n                                getFullDate\n                            \n                            \n                                getLogger\n                            \n                            \n                                getSummary\n                            \n                            \n                                getTimeFormatted\n                            \n                            \n                                setDate\n                            \n                            \n                                setDateFromString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/actionEntryLog.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActiondId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affectedInumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affectedUserName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerInumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/actionEntryLog.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generatePostBody\n                        \n                        \n                    \n                \n            \n            \n                \ngeneratePostBody()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { \"logger_id\": string; \"affected_user_id\": string; \"action_id\": ActiondId; \"detail\": any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateFormatted\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateFormatted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFullDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetFullDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogger\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogger()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSummary\n                        \n                        \n                    \n                \n            \n            \n                \ngetSummary()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTimeFormatted\n                        \n                        \n                    \n                \n            \n            \n                \ngetTimeFormatted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateFromString\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateFromString(date: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/actionEntryLog.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment';\nimport {Detail} from \"./detail\";\n\n// This comes from the database\nexport enum ActiondId {\n  CUSTOM_MESSAGE = 1,\n  INCIDENT_ASSIGNED = 2,\n  INCIDENT_UNASSIGNED = 3,\n  AVAILABILITY_CHANGED = 4,\n  QUEUE_DAYS_CHANGED = 5,\n  PRDOUCT_SUPPORT_CHANGED = 6,\n  QM_CHANGED = 7\n}\n\nexport class ActionEntryLog {\n  loggerInumber: string;\n  affectedInumber: string;\n  affectedUserName: string;\n  actionId: ActiondId;\n  defaultDescription: string;\n  detail: Detail;\n  timestamp: Date;\n\n  constructor(options) {\n    this.actionId = options.actionId;\n    this.loggerInumber = options.loggerInumber;\n    this.defaultDescription = options.defaultDescription;\n    this.affectedInumber = options.affectedInumber;\n    this.affectedUserName = options.affectedUserName;\n    this.timestamp = options.timestamp ? new Date(options.timestamp) : new Date();\n    this.detail = options.detail || new Detail(\"\", \"\", \"\");\n  }\n\n  getDescription() {\n    return this.defaultDescription;\n  }\n\n  getLogger(): string {\n    return this.loggerInumber;\n  }\n\n  getTimeFormatted(): string {\n    return moment(this.timestamp).format(\"kk:mm:ss\");\n  }\n\n  getDateFormatted(): string {\n    return moment(this.timestamp).format('MM/DD/YYYY');\n  }\n\n  getSummary(): string {\n    return '[' + this.getDescription() + ']' + ' : ' + this.affectedUserName + '(' + this.affectedInumber + ')' + ' : ' + this.detail.toString();\n  }\n\n  getFullDate(): Date {\n    return this.timestamp;\n  }\n\n  setDate(date: Date): void {\n    this.timestamp = date;\n  }\n\n  setDateFromString(date: string): void {\n    date = date.replace(/['\"]+/g, '');\n    this.timestamp = new Date(date);\n  }\n\n  generatePostBody() {\n    return {\n      \"logger_id\": this.loggerInumber,\n      \"affected_user_id\": this.affectedInumber,\n      \"action_id\": this.actionId,\n      \"detail\": this.detail.toString()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActivityLogComponent.html":{"url":"components/ActivityLogComponent.html","title":"component - ActivityLogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActivityLogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/activity-log/activity-log.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-activity-log\n            \n\n            \n                styleUrls\n                ./activity-log.component.css\n            \n\n\n\n            \n                templateUrl\n                ./activity-log.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionActiveLogList\n                            \n                            \n                                activityLog$\n                            \n                            \n                                    Public\n                                logService\n                            \n                            \n                                NUM_OF_RESULTS\n                            \n                            \n                                showSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/activity-log/activity-log.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionActiveLogList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityLog$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUM_OF_RESULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/activity-log/activity-log.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Observable, of as observableOf} from 'rxjs';\n\nimport {map} from 'rxjs/operators';\nimport {Component, OnInit} from '@angular/core';\nimport {LogService} from '../../../core/log.service';\nimport {ActionEntryLog} from \"../../model/actionEntryLog\";\n\n@Component({\n  selector: 'app-activity-log',\n  templateUrl: './activity-log.component.html',\n  styleUrls: ['./activity-log.component.css']\n})\nexport class ActivityLogComponent implements OnInit {\n  /* General Variables */\n  showSpinner = false;\n  NUM_OF_RESULTS = 50;\n  activityLog$: Observable;\n\n  actionActiveLogList: Array = [];\n\n  constructor(public logService: LogService) {\n  }\n\n  ngOnInit() {\n    this.activityLog$ = observableOf([]);\n\n    this.logService.getLogs().pipe(map(arr => arr.slice(0, this.NUM_OF_RESULTS))).subscribe((res: any) => {\n      this.actionActiveLogList = res;\n    });\n  }\n}\n\n    \n\n    \n        Activity Log\nDisplaying last {{(actionActiveLogList).length}} Logs\n\n  \n  \n    Time\n    Description\n    Logger\n  \n  \n  \n  \n    \n      \n    \n  \n  \n    {{item.getDateFormatted()}} {{item.getTimeFormatted()}}\n    {{item.getSummary() }}\n    {{ item.loggerInumber }}\n  \n  \n\n\n\n    \n\n    \n                \n                    ./activity-log.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Activity LogDisplaying last {{(actionActiveLogList).length}} Logs        Time    Description    Logger                              {{item.getDateFormatted()}} {{item.getTimeFormatted()}}    {{item.getSummary() }}    {{ item.loggerInumber }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActivityLogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserFormComponent.html":{"url":"components/AddUserFormComponent.html","title":"component - AddUserFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team-dashboard/add-user-form/add-user-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user-form\n            \n\n            \n                styleUrls\n                ./add-user-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team-dashboard/add-user-form/add-user-form.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/add-user-form/add-user-form.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddUser\n                        \n                        \n                    \n                \n            \n            \n                \nonAddUser(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/add-user-form/add-user-form.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/add-user-form/add-user-form.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {User} from \"../../shared/model/user\";\nimport {UserService} from \"../../core/user.service\";\n\n@Component({\n  selector: 'app-add-user-form',\n  templateUrl: './add-user-form.component.html',\n  styleUrls: ['./add-user-form.component.css']\n})\nexport class AddUserFormComponent implements OnInit {\n\n  constructor(public userService: UserService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onAddUser(f: NgForm) {\n    // Check valid and inputs exist\n    if (f.valid && f.value.name && f.value.affectedInumber) {\n      this.userService.addUser(f.value.name, f.value.affectedInumber).subscribe((user: User) => {\n        // this.userList.push(user);\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Name\n      \n      \n        \n          iNumber is required.\n        \n        \n          Name must be at least 3 characters long.\n        \n      \n    \n    \n      iNumber\n      \n      \n        \n          iNumber is required.\n        \n        \n          iNumber must be at least 7 characters long.\n        \n      \n    \n  \n  Add User\n\n\n    \n\n    \n                \n                    ./add-user-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Name                              iNumber is required.                          Name must be at least 3 characters long.                            iNumber                              iNumber is required.                          iNumber must be at least 7 characters long.                      Add User'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                errorMessage\n                            \n                            \n                                INITIALIZED\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                loginService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INITIALIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {Observable} from 'rxjs';\nimport {LoginService} from \"./core/login.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  items: Observable;\n  errorMessage: string;\n  INITIALIZED = false;\n\n\n  constructor(public afAuth: AngularFireAuth, public loginService: LoginService) {\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n  \n    \n      \n        \n      \n      \n        \n        \n        {{ errorMessage }}\n        \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ errorMessage }}                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nActivityLogComponent\n\nActivityLogComponent\n\nAppModule -->\n\nActivityLogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNoticeBoardComponent\n\nNoticeBoardComponent\n\nAppModule -->\n\nNoticeBoardComponent->AppModule\n\n\n\n\n\nPatchNotesComponent\n\nPatchNotesComponent\n\nAppModule -->\n\nPatchNotesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nQueueDashboardModule\n\nQueueDashboardModule\n\nAppModule -->\n\nQueueDashboardModule->AppModule\n\n\n\n\n\nRccDashboardModule\n\nRccDashboardModule\n\nAppModule -->\n\nRccDashboardModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTeamDashboardModule\n\nTeamDashboardModule\n\nAppModule -->\n\nTeamDashboardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            ActivityLogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NoticeBoardComponent\n                        \n                        \n                            PatchNotesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            QueueDashboardModule\n                        \n                        \n                            RccDashboardModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TeamDashboardModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {FormsModule} from '@angular/forms';\nimport {ActivityLogComponent} from './shared/components/activity-log/activity-log.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {QueueDashboardModule} from './queue-dashboard/queue-dashboard.module';\nimport {SharedModule} from \"./shared/shared.module\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {CoreModule} from \"./core/core.module\";\nimport {NoticeBoardComponent} from './notice-board/notice-board.component';\nimport {SettingsModule} from \"./settings/settings.module\";\nimport {AboutComponent} from './about/about.component';\nimport {RccDashboardModule} from \"./rcc-dashboard/rcc-dashboard.module\";\nimport {TeamDashboardModule} from \"./team-dashboard/team-dashboard.module\";\nimport {PatchNotesComponent} from './patch-notes/patch-notes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ActivityLogComponent,\n    NoticeBoardComponent,\n    AboutComponent,\n    PatchNotesComponent\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    QueueDashboardModule,\n    RccDashboardModule,\n    TeamDashboardModule,\n    FormsModule,\n    AppRoutingModule,\n    SettingsModule,\n    CoreModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./settings/settings.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport {RccDashboardComponent} from \"./rcc-dashboard/rcc-dashboard.component\";\nimport {TeamDashboardComponent} from \"./team-dashboard/team-dashboard.component\";\nimport {PatchNotesComponent} from \"./patch-notes/patch-notes.component\";\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: 'qm/NW',\n    pathMatch: 'full'\n  },\n  {path: 'home', redirectTo: 'qm/NW'},\n  {path: 'manage', component: TeamDashboardComponent},\n  {path: 'rcc', component: RccDashboardComponent},\n  // {path: 'qm/:id', component: QueueDashboardComponent},\n  {path: 'settings', component: SettingsComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'patch', component: PatchNotesComponent}\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(\n      appRoutes, {useHash: true, scrollPositionRestoration: \"disabled\"})\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationSettingsComponent.html":{"url":"components/ApplicationSettingsComponent.html","title":"component - ApplicationSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/application-settings/application-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-application-settings\n            \n\n            \n                styleUrls\n                ./application-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./application-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                archiveService\n                            \n                            \n                                    Public\n                                logService\n                            \n                            \n                                    Public\n                                productService\n                            \n                            \n                                progressMessage\n                            \n                            \n                                resetProgressArr\n                            \n                            \n                                showAdvanceSettings\n                            \n                            \n                                showSpinner\n                            \n                            \n                                    Public\n                                snackbar\n                            \n                            \n                                    Public\n                                userSerivce\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                archive\n                            \n                            \n                                clearActionEntryLogs\n                            \n                            \n                                download\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                oneClickReset\n                            \n                            \n                                resetUsers\n                            \n                            \n                                toggleAdvancedSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSerivce: UserService, productService: ProductService, snackbar: MatSnackBar, logService: LogService, archiveService: ArchiveService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/application-settings/application-settings.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSerivce\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        archiveService\n                                                  \n                                                        \n                                                                        ArchiveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            archive\n                        \n                        \n                    \n                \n            \n            \n                \narchive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearActionEntryLogs\n                        \n                        \n                    \n                \n            \n            \n                \nclearActionEntryLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            download\n                        \n                        \n                    \n                \n            \n            \n                \ndownload(filename, text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            oneClickReset\n                        \n                        \n                    \n                \n            \n            \n                \noneClickReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetUsers\n                        \n                        \n                    \n                \n            \n            \n                \nresetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleAdvancedSettings\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleAdvancedSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/application-settings/application-settings.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            archiveService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArchiveService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressMessage\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetProgressArr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [false, false, false, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAdvanceSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userSerivce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/application-settings/application-settings.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {forkJoin} from 'rxjs';\n\nimport {tap} from 'rxjs/operators';\nimport {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../core/user.service\";\nimport {ProductService} from \"../../core/product.service\";\nimport {MatSnackBar} from \"@angular/material\";\nimport {LogService} from \"../../core/log.service\";\nimport {ArchiveService} from \"../../core/archive.service\";\nimport {DomSanitizer} from '@angular/platform-browser';\n\n// import * as $ from 'jquery'\n@Component({\n  selector: 'app-application-settings',\n  templateUrl: './application-settings.component.html',\n  styleUrls: ['./application-settings.component.css']\n})\nexport class ApplicationSettingsComponent implements OnInit {\n\n  showSpinner = false;\n  // 1 - Archive 2 -  Reset Queue3 -Reset Incidents  Days 4 - Reset Log\n  resetProgressArr = [false, false, false, false]; // me being lazy\n\n  showAdvanceSettings: boolean = false;\n  progressMessage;\n\n  constructor(public userSerivce: UserService,\n              public productService: ProductService, public snackbar: MatSnackBar, public logService: LogService,\n              public archiveService: ArchiveService,\n              private sanitizer: DomSanitizer,) {\n  }\n\n\n  ngOnInit() {\n  }\n\n  toggleAdvancedSettings() {\n    this.showAdvanceSettings = !this.showAdvanceSettings;\n  }\n\n  oneClickReset() {\n    if (window.confirm(\"Are you sure you want to Archive and Reset Queue Days and Reset Incident Counts?\\nThis will take a while!!!!\")) {\n      this.showSpinner = true;\n      forkJoin(\n        this.userSerivce.resetAllUser().pipe(tap(() => {\n          this.progressMessage = \"Clearing Queue & Incidents...\";\n        })),\n        this.logService.purgeLogs().pipe(tap(() => {\n          this.progressMessage = \"Purging Logs...\";\n        }))\n      ).subscribe(() => {\n        this.showSpinner = false;\n        this.snackbar.open('One Click Reset Complete!', 'Close');\n      }, err => {\n        this.snackbar.open(`An error has occurred ${err.message}`, 'Close');\n      });\n    }\n  }\n\n  /** @deprecated  */\n  archive() {\n    if (window.confirm(\"Are you sure you want to archive everything?\\nThis will take a while!!!!\")) {\n      this.showSpinner = true;\n      this.progressMessage = \"Archiving...\";\n    }\n  }\n\n  resetUsers() {\n    if (window.confirm(\"Are you sure you want to reset all users?\")) {\n      this.showSpinner = true;\n      this.progressMessage = \"Clearing Queue Days and Incidents...\";\n      this.userSerivce.resetAllUser().subscribe(() => {\n        this.showSpinner = false;\n        this.resetProgressArr[1] = true;\n        this.snackbar.open('Queue Days and incidents reset', 'Close', {duration: 1000});\n      });\n    }\n\n  }\n\n  clearActionEntryLogs() {\n    if (window.confirm(\"Are you sure you want to purge entry logs?\")) {\n      this.showSpinner = true;\n      this.progressMessage = \"Clearing Entry Logs...\";\n      this.logService.purgeLogs().subscribe(() => {\n        this.snackbar.open('Logs were purged successfully', 'Close', {duration: 1000});\n        this.showSpinner = false;\n        this.resetProgressArr[3] = true;\n      });\n    }\n  }\n\n  /** @deprecated  */\n  download(filename, text) {\n    // let btnRef = document.getElementById('btn-download');\n    // let element = document.createElement('a');\n    // element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    // element.setAttribute('download', filename + '.txt');\n    // element.setAttribute('id', 'dd');\n    // element.style.display = 'none';\n    // document.body.appendChild(element);\n    // element.click();\n    // // $('#dd').ready\n    // document.body.removeChild(element);\n  }\n}\n\n    \n\n    \n        \n  \n    Application Settings\n    Follow the numbered buttons to reset applications. Do not leave the page otherwise you will\n      lose progress!\n  \n\n\n  \n\n\n  \n    \n      \n        Archive (May take a while)\n        Archives to database and exports to a file\n        1Archive\n          \n        \n      \n    \n    \n      \n        Reset User Incidents and Queue Days\n        Sets incident and queue days to zero\n        2Reset\n          \n      \n    \n  \n  \n    \n      \n        Reset Log Entries\n        Removes all log enties\n        3Reset\n          \n      \n    \n  \n  \n    \n      Easy One Click Button\n      Advanced\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./application-settings.component.css\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Application Settings    Follow the numbered buttons to reset applications. Do not leave the page otherwise you will      lose progress!                        Archive (May take a while)        Archives to database and exports to a file        1Archive                                              Reset User Incidents and Queue Days        Sets incident and queue days to zero        2Reset                                          Reset Log Entries        Removes all log enties        3Reset                                  Easy One Click Button      Advanced      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveService.html":{"url":"injectables/ArchiveService.html","title":"injectable - ArchiveService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/archive.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveLogAPI\n                            \n                            \n                                archivEntryAPI\n                            \n                            \n                                archiveUserAPI\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                    Private\n                                generateArchiveEntryBody\n                            \n                            \n                                    Private\n                                generateLogBody\n                            \n                            \n                                    Private\n                                generateUserBody\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, firebase: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/archive.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(logs: ActionEntryLog[], users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/archive.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logs\n                                    \n                                                ActionEntryLog[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateArchiveEntryBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateArchiveEntryBody(ARCHIVE_KEY)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/archive.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ARCHIVE_KEY\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { KEY: any; DATE: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateLogBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateLogBody(ARCHIVE_KEY: string | null, log: ActionEntryLog)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/archive.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ARCHIVE_KEY\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    log\n                                    \n                                                ActionEntryLog\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateUserBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserBody(user: User, ARCHIVE_KEY)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/archive.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ARCHIVE_KEY\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/archive.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveLogAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'archive_log'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archivEntryAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'archive_entry'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveUserAPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'archive_user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firebase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/archive.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {forkJoin, of as observableOf} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActionEntryLog} from \"../shared/model/actionentrylog\";\nimport {User} from \"../shared/model/user\";\nimport {AngularFireDatabase} from \"angularfire2/database\";\n\n/*\n* [REFACTORED] March 29th 2018\n* */\n\n@Injectable()\nexport class ArchiveService {\n  archivEntryAPI = 'archive_entry';\n  archiveUserAPI = 'archive_user';\n  archiveLogAPI = 'archive_log';\n\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(public http: HttpClient, public firebase: AngularFireDatabase) {\n  }\n\n  add(logs: ActionEntryLog[], users: User[]) {\n    // Generate a KEY\n    const ARCHIVE_KEY = this.firebase.createPushId();\n\n    // Prepare Archive Entry\n    let archiveEntry$ = this.http.post(this.archivEntryAPI, this.generateArchiveEntryBody(ARCHIVE_KEY));\n\n    // Prepare Requests for Users\n    let batch_user_add = [];\n    users.forEach(user => {\n      let body = this.generateUserBody(user, ARCHIVE_KEY);\n      batch_user_add.push(this.http.post(this.archiveUserAPI, body, this.httpOptions));\n    });\n    if (batch_user_add.length == 0) {\n      batch_user_add.push(observableOf({}));\n    }\n\n    // Prepare Requests for Logs\n    let batch_log_add = [];\n    logs.forEach((log: ActionEntryLog) => {\n      const body = this.generateLogBody(ARCHIVE_KEY, log);\n      batch_log_add.push(this.http.post(this.archiveLogAPI, body, this.httpOptions));\n    });\n    if (batch_log_add.length == 0) {\n      batch_log_add.push(observableOf({}));\n    }\n\n    // Return as on observable\n    return forkJoin(archiveEntry$, forkJoin(batch_user_add), forkJoin(batch_log_add));\n  }\n\n  remove() {\n\n  }\n\n  private generateLogBody(ARCHIVE_KEY: string | null, log: ActionEntryLog) {\n    return {};\n  }\n\n  private generateArchiveEntryBody(ARCHIVE_KEY) {\n    return {\n      KEY: ARCHIVE_KEY,\n      DATE: new Date()\n    };\n  }\n\n\n  private generateUserBody(user: User, ARCHIVE_KEY) {\n    // noinspection SpellCheckingInspection\n    return {\n      // ARCHIVE_KEY: ARCHIVE_KEY,\n      // INUMBER: user.iNumber,\n      // NAME: user.name,\n      // KEY: user.key,\n      // ISAVAILABLE: user.isAvailable.toString(),\n      // CURRENTQDAYS: user.currentQDays.toString(),\n      // USAGEPERCENT: user.usagePercent.toString()\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyParser.html":{"url":"classes/BodyParser.html","title":"class - BodyParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helper/bodyParser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                parseBody\n                            \n                            \n                                    Private\n                                    Static\n                                parseBodyResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parseBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseBody(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/bodyParser.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            parseBodyResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseBodyResult(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/bodyParser.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class BodyParser {\n\n  static parseBody(body) {\n    if (body.d.results) {\n      return this.parseBodyResult(body);\n    }\n    if (body.d) {\n      const {__metadata, ...newObject} = body.d;\n      return newObject;\n    }\n  }\n\n  private static parseBodyResult(body) {\n    return body.d.results.map(el => {\n      const {__metadata, ...newObject} = el;\n      return newObject;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClipboardComponent.html":{"url":"components/ClipboardComponent.html","title":"component - ClipboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClipboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/clipboard/clipboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-clipboard\n            \n\n            \n                styleUrls\n                ./clipboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./clipboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clipBoardText\n                            \n                            \n                                isCopied\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/clipboard/clipboard.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/clipboard/clipboard.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clipBoardText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[EPM_QM_ASSIGNED]'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/clipboard/clipboard.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCopied\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/clipboard/clipboard.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-clipboard',\n  templateUrl: './clipboard.component.html',\n  styleUrls: ['./clipboard.component.css']\n})\nexport class ClipboardComponent implements OnInit {\n  clipBoardText = '[EPM_QM_ASSIGNED]';\n  isCopied = false;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n\n            copy\n        \n  \n\n\n    \n\n    \n                \n                    ./clipboard.component.css\n                \n                div#qClipboard {\n  width: 30%;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      copy          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClipboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentBarComponent.html":{"url":"components/ComponentBarComponent.html","title":"component - ComponentBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComponentBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/component-bar/component-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-component-bar\n            \n\n            \n                styleUrls\n                ./component-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./component-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productListGrouped\n                            \n                            \n                                    Public\n                                productService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatComponentRows\n                            \n                            \n                                getRouterLink\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatComponentRows\n                        \n                        \n                    \n                \n            \n            \n                \nformatComponentRows(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRouterLink\n                        \n                        \n                    \n                \n            \n            \n                \ngetRouterLink(componentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productListGrouped\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/component-bar/component-bar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ProductService} from \"../../core/product.service\";\n\n\n@Component({\n  selector: 'app-component-bar',\n  templateUrl: './component-bar.component.html',\n  styleUrls: ['./component-bar.component.css']\n})\nexport class ComponentBarComponent implements OnInit {\n\n  productListGrouped: string[];\n\n  constructor(public productService: ProductService) {\n  }\n\n  ngOnInit() {\n    this.productService.getProducts().subscribe(arrProductList => {\n      this.productListGrouped = this.formatComponentRows(arrProductList);\n    });\n  }\n\n  formatComponentRows(arr) {\n    let groupIndex = 0;\n    let numOfGroups = Math.ceil(arr.length / 4);\n    let newArr = [];\n    for (let i = 0; i \n    \n\n    \n        \n  Components\n  \n    \n      \n        {{p}} \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./component-bar.component.css\n                \n                #qNavBar a:hover, #component-menu-two a:hover {\n  background-color: #465b77\n}\n\na.nav-link.active {\n  background-color: #16a085;\n  text-shadow: 2px 2px 9px #000000;\n}\n\n.navbar {\n  background-color: #2c3e50\n}\n\na.nav-link {\n  color: white;\n}\n\n.navbar-brand {\n  color: white;\n  background-color: #e74c3c;\n  padding: 3px 21px;\n  margin: 0px 0px;\n}\n\n#component-menu-two {\n  background-color: #2c3e50;\n  font-weight: 500;\n}\n\n#component-menu-two .row {\n  border-bottom: #ffffff 4px solid;\n}\n\n#component-menu-two .row:first-child {\n  border-top: #ffffff 4px solid\n}\n\n#component-menu-two {\n  border-bottom: #2c3e50 10px solid;\n  border-top: #2c3e50 10px solid;\n}\n\n/* Tooltips */\n::ng-deep .mat-tooltip {\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Components                    {{p}}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComponentBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentSettingsComponent.html":{"url":"components/ComponentSettingsComponent.html","title":"component - ComponentSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComponentSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/product-settings/component-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-component-settings\n            \n\n            \n                styleUrls\n                ./component-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./component-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productList\n                            \n                            \n                                    Public\n                                productService\n                            \n                            \n                                showSpinner\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, snackBar: MatSnackBar, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/product-settings/component-settings.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddProduct(productShortName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/product-settings/component-settings.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productShortName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/product-settings/component-settings.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/product-settings/component-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeProduct\n                        \n                        \n                    \n                \n            \n            \n                \nremoveProduct(productShortName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/product-settings/component-settings.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productShortName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/product-settings/component-settings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/product-settings/component-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/product-settings/component-settings.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/product-settings/component-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/product-settings/component-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {map} from 'rxjs/operators';\nimport {Component, OnInit} from '@angular/core';\nimport {ProductService} from \"../../core/product.service\";\nimport {NgForm} from \"@angular/forms\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UserService} from \"../../core/user.service\";\n\n@Component({\n  selector: 'app-component-settings',\n  templateUrl: './component-settings.component.html',\n  styleUrls: ['./component-settings.component.css']\n})\nexport class ComponentSettingsComponent implements OnInit {\n  showSpinner = true;\n  productList = [];\n\n  constructor(public productService: ProductService, public snackBar: MatSnackBar, public userService: UserService) {\n  }\n\n\n  ngOnInit() {\n    this.productService.getProducts().pipe(map((data: string[]) => {\n      return data.sort(function (b, a) {\n        if (a > b) {\n          return -1;\n        }\n        if (a  {\n      this.productList = products;\n      this.showSpinner = false;\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    if (f.valid) {\n      let productId = f.value.name;\n      this.addProduct(productId);\n      f.resetForm();\n    }\n  }\n\n  removeProduct(productShortName) {\n    if (window.confirm(`Are you sure you want to remove component '${productShortName}'`)) {\n      this.showSpinner = true;\n      this.productService.removeProduct(productShortName).subscribe(() => {\n        this.showSpinner = false;\n        this.snackBar.open(`Removed Support Product '${productShortName}'`, 'Close', {duration: 1000});\n        this.productList.splice(this.productList.indexOf(productShortName), 1);\n      });\n    }\n  }\n\n  addProduct(productShortName) {\n    this.showSpinner = true;\n    this.productService.addProduct(productShortName).subscribe(() => {\n      this.showSpinner = false;\n      this.snackBar.open(`Added New Support Product '${productShortName}'`, 'Close', {duration: 1000});\n      this.productList.push(productShortName);\n    }, error => {\n      this.showSpinner = false;\n      this.snackBar.open(error.message, 'Close');\n    });\n  }\n}\n\n    \n\n    \n        Supported Products/Areas\nPlease Refresh the page after adding new products\n\n\n  \n    \n  \n  \n    \n      {{product}} \n    \n  \n\n\n\n  \n    Add New Component\n  \n  \n    Password\n    \n  \n  Add\n\n\n    \n\n    \n                \n                    ./component-settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Supported Products/AreasPlease Refresh the page after adding new products                    {{product}}             Add New Component        Password        Add'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComponentSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nArchiveService\n\nArchiveService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nArchiveService->CoreModule\n\n\n\n\n\nLogService\n\nLogService\n\nCoreModule -->\n\nLogService->CoreModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nCoreModule -->\n\nLoginService->CoreModule\n\n\n\n\n\nProductService\n\nProductService\n\nCoreModule -->\n\nProductService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArchiveService\n                        \n                        \n                            LogService\n                        \n                        \n                            LoginService\n                        \n                        \n                            ProductService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LoginService} from \"./login.service\";\nimport {UserService} from \"./user.service\";\nimport {LogService} from \"./log.service\";\nimport {AngularFireAuthModule} from \"angularfire2/auth\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AngularFireModule} from \"angularfire2\";\nimport {environment} from \"../../environments/environment\";\nimport {AngularFireDatabaseModule} from \"angularfire2/database\";\nimport {ProductService} from \"./product.service\";\nimport {ArchiveService} from \"./archive.service\";\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule\n  ],\n  providers: [UserService, LoginService, LogService, ProductService, ArchiveService]\n})\nexport class CoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/detail.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCustomDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(previousValue?, postValue?, unitOfMeasurement?)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/detail.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousValue\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        postValue\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unitOfMeasurement\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/detail.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCustomDetail\n                        \n                        \n                    \n                \n            \n            \n                \naddCustomDetail(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/detail.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Detail {\n\n\n  toString: () => string;\n\n  constructor(previousValue?, postValue?, unitOfMeasurement?) {\n    this.toString = function () {\n      return (`${previousValue} to ${postValue} ${unitOfMeasurement}`).trim();\n    };\n  }\n\n  addCustomDetail(message: string) {\n    this.toString = function () {\n      return message.trim();\n    };\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/pipe/filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {User} from \"../../shared/model/user\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAlpha',\n  pure: false\n})\nexport class SortByAlpha implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value.sort(\n      function (a, b) {\n        if (a.name  b.name) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAVGQDay',\n  pure: false\n})\n\nexport class SortByAVGQDay implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value\n      .sort(\n        function (a, b) {\n          if (a.getAverageQDay()  b.getAverageQDay()) {\n            return 1;\n          }\n          return 0;\n        });\n  }\n\n}\n\n\n@Pipe({\n  name: 'isAvailable',\n  pure: false\n})\nexport class IsAvailable implements PipeTransform {\n  transform(value: any, component: string, availability: boolean): any {\n    if (!value) {\n      return [];\n    }\n    return value.filter((t: User) => {\n      return t.supportedProducts[component] && t.isAvailable == availability;\n    });\n  }\n}\n\n@Pipe({\n  name: 'sortByPriority',\n  pure: false\n})\nexport class SortByPriority implements PipeTransform {\n  private groupByUsage(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.usagePercent.toString()]) {\n        object[user.usagePercent.toString()] = [];\n      }\n      object[user.usagePercent.toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private groupByAQD(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.getAverageQDay().toString()]) {\n        object[user.getAverageQDay().toString()] = [];\n      }\n      object[user.getAverageQDay().toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private rankGroup(group: any[], totalIncidents: number, membersAvailable: number) {\n    let usagePercent = group[0].usagePercent;\n    return (1 / (totalIncidents * usagePercent / membersAvailable)).toFixed(4);\n  }\n\n  private merge(arr) {\n    let tmp = [];\n    arr.forEach(r => {\n      tmp = tmp.concat(r);\n    });\n    return tmp;\n  }\n\n  private sortByIncidents(group) {\n    return group.sort(\n      function (a: User, b: User) {\n        if (a.getIncidentTotal()  b.getIncidentTotal()) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n\n  transform(value: any, totalIncidents: number): any {\n    if (!value) {\n      return [];\n    }\n\n    let t = this.groupByAQD(value).map(el => {\n      return this.sortByIncidents(el);\n    });\n\n    // this.sinkHeavy(this.merge(value), max);\n    // console.log(this.group(value));\n    // console.log(value);\n    // console.log(this.merge(value));\n    return this.merge(t);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Helper.html":{"url":"classes/Helper.html","title":"class - Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helper/helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                dateInRange\n                            \n                            \n                                    Static\n                                dateWithin\n                            \n                            \n                                    Static\n                                deepCopy\n                            \n                            \n                                    Static\n                                flatCopy\n                            \n                            \n                                    Static\n                                handleError\n                            \n                            \n                                    Static\n                                sortAlpha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            dateInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dateInRange(date: Date, start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            dateWithin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dateWithin(date: Date, range: unitOfTime.StartOf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    range\n                                    \n                                            unitOfTime.StartOf\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            deepCopy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deepCopy(obj)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            flatCopy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flatCopy(obj)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error?: HttpErrorResponse, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortAlpha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortAlpha(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helper/helper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment';\nimport {unitOfTime} from 'moment';\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {throwError} from \"rxjs\";\n\nexport class Helper {\n\n  static deepCopy(obj) {\n    return Object.assign({}, obj);\n  }\n\n  static flatCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  static dateInRange(date: Date, start: Date, end: Date) {\n    return moment(date).isBetween(start, end);\n  }\n\n  static dateWithin(date: Date, range: unitOfTime.StartOf): boolean {\n    return moment(date).isBetween(moment().startOf(range), moment().endOf(range));\n  }\n\n  static handleError(error?: HttpErrorResponse, message?: string) {\n    console.error(error);\n    // DEFAULT ERROR MESSAGE\n    if (message.length === 0) {\n      message = \"Something went wrong\";\n    }\n    // DATA BASE IS DOWN\n    if (error.status === 0) {\n      message = \"DATABASE IS DOWN :: \" + message;\n    }\n    if (error.name === \"HttpErrorResponse\") {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${JSON.stringify(error.error)}`);\n      return throwError({\n        \"status\": error.status,\n        \"message\": `${message} : ${error.error.message}`\n      });\n    } else {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.message);\n      return throwError({\n        \"status\": error.status,\n        \"message\": `${message} : ${error.message}`\n      });\n    }\n\n  }\n\n  static sortAlpha(arr) {\n    arr.sort(function (b, a) {\n      if (a > b) {\n        return -1;\n      }\n      if (a \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsAvailable.html":{"url":"pipes/IsAvailable.html","title":"pipe - IsAvailable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IsAvailable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/pipe/filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        isAvailable\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, component: string, availability: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availability\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {User} from \"../../shared/model/user\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAlpha',\n  pure: false\n})\nexport class SortByAlpha implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value.sort(\n      function (a, b) {\n        if (a.name  b.name) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAVGQDay',\n  pure: false\n})\n\nexport class SortByAVGQDay implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value\n      .sort(\n        function (a, b) {\n          if (a.getAverageQDay()  b.getAverageQDay()) {\n            return 1;\n          }\n          return 0;\n        });\n  }\n\n}\n\n\n@Pipe({\n  name: 'isAvailable',\n  pure: false\n})\nexport class IsAvailable implements PipeTransform {\n  transform(value: any, component: string, availability: boolean): any {\n    if (!value) {\n      return [];\n    }\n    return value.filter((t: User) => {\n      return t.supportedProducts[component] && t.isAvailable == availability;\n    });\n  }\n}\n\n@Pipe({\n  name: 'sortByPriority',\n  pure: false\n})\nexport class SortByPriority implements PipeTransform {\n  private groupByUsage(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.usagePercent.toString()]) {\n        object[user.usagePercent.toString()] = [];\n      }\n      object[user.usagePercent.toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private groupByAQD(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.getAverageQDay().toString()]) {\n        object[user.getAverageQDay().toString()] = [];\n      }\n      object[user.getAverageQDay().toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private rankGroup(group: any[], totalIncidents: number, membersAvailable: number) {\n    let usagePercent = group[0].usagePercent;\n    return (1 / (totalIncidents * usagePercent / membersAvailable)).toFixed(4);\n  }\n\n  private merge(arr) {\n    let tmp = [];\n    arr.forEach(r => {\n      tmp = tmp.concat(r);\n    });\n    return tmp;\n  }\n\n  private sortByIncidents(group) {\n    return group.sort(\n      function (a: User, b: User) {\n        if (a.getIncidentTotal()  b.getIncidentTotal()) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n\n  transform(value: any, totalIncidents: number): any {\n    if (!value) {\n      return [];\n    }\n\n    let t = this.groupByAQD(value).map(el => {\n      return this.sortByIncidents(el);\n    });\n\n    // this.sinkHeavy(this.merge(value), max);\n    // console.log(this.group(value));\n    // console.log(value);\n    // console.log(this.merge(value));\n    return this.merge(t);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loading-spinner/loading-spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n            \n                styleUrls\n                ./loading-spinner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loading-spinner/loading-spinner.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loading-spinner/loading-spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/loading-spinner/loading-spinner.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  @Input() message: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{message}}\n  Loading\n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./loading-spinner.component.css\n                \n                .spinner {\n  margin: 100px auto;\n  width: 50px;\n  height: 40px;\n  text-align: center;\n  font-size: 10px;\n}\n\n.spinner > div {\n  background-color: #333;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n\n  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\n  animation: sk-stretchdelay 1.2s infinite ease-in-out;\n}\n\n.spinner .rect2 {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n\n.spinner .rect3 {\n  -webkit-animation-delay: -1.0s;\n  animation-delay: -1.0s;\n}\n\n.spinner .rect4 {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n\n.spinner .rect5 {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n\n@-webkit-keyframes sk-stretchdelay {\n  0%, 40%, 100% {\n    -webkit-transform: scaleY(0.4)\n  }\n  20% {\n    -webkit-transform: scaleY(1.0)\n  }\n}\n\n@keyframes sk-stretchdelay {\n  0%, 40%, 100% {\n    transform: scaleY(0.4);\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    transform: scaleY(1.0);\n    -webkit-transform: scaleY(1.0);\n  }\n}\n\n.spinner-message {\n  margin-bottom: 0;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  Loading          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/log.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that handles call to Logs on database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionList\n                            \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                    Private\n                                entryLogSubject\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLog\n                            \n                            \n                                getCachedINumber\n                            \n                            \n                                getLogs\n                            \n                            \n                                getLogsAsObservable\n                            \n                            \n                                purgeLogs\n                            \n                            \n                                refresh\n                            \n                            \n                                search\n                            \n                            \n                                setCachedINumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/log.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLog\n                        \n                        \n                    \n                \n            \n            \n                \naddLog(affectedUser: User, actionId: ActiondId, detail: Detail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:93\n                \n            \n\n\n            \n                \n                    Add a log to database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affectedUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                ActiondId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    detail\n                                    \n                                                Detail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCachedINumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetCachedINumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        cached Inumber stored in localstorage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogs\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:51\n                \n            \n\n\n            \n                \n                    Get all logs from database.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Array of logs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogsAsObservable\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogsAsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            purgeLogs\n                        \n                        \n                    \n                \n            \n            \n                \npurgeLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:126\n                \n            \n\n\n            \n                \n                    Delete all logs on database\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCachedINumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetCachedINumber(i: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/log.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.api + '/actionentrylog'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryLogSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:36\n                            \n                        \n\n                \n                    \n                        Get Logs as an observable from a behavior subject. New updates will be listened to.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        numOfResults\n                                                        \n                                                                Number of results to return.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/log.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {BehaviorSubject, Observable} from 'rxjs';\n\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {AngularFireDatabase} from 'angularfire2/database';\n\nimport {environment} from '../../environments/environment';\nimport {User} from \"../shared/model/user\";\nimport {Helper} from \"../shared/helper/helper\";\nimport {ActiondId, ActionEntryLog} from \"../shared/model/actionEntryLog\";\nimport {Detail} from \"../shared/model/detail\";\n\n/**\n * Service that handles call to Logs on database\n */\n@Injectable()\nexport class LogService {\n  // HTTP Request Options\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n\n  // Service URL API Call\n  private api = environment.api + '/actionentrylog';\n\n  /**\n   * Get Logs as an observable from a behavior subject. New updates will be listened to.\n   * @returns             Array of entry logs.\n   * @param numOfResults  Number of results to return.\n   */\n  private entryLogSubject = new BehaviorSubject([]);\n\n  private actionList = [];\n\n  constructor(public http: HttpClient, public db: AngularFireDatabase) {\n    this.http.get(this.api + '/actions', this.httpOptions).pipe(map((r: any) => r.data)).subscribe((res: Array) => {\n      this.actionList = res;\n    });\n  }\n\n\n  /**\n   * Get all logs from database.\n   * @returns Array of logs\n   */\n  getLogs(): Observable {\n    return this.http.get(this.api, this.httpOptions).pipe(\n      switchMap((result: any) => {\n        let data = result.data.map(el => new ActionEntryLog({\n          loggerInumber: el.logger_id,\n          affectedInumber: el.affected_user_id,\n          affectedUserName: el.affected_user_name,\n          actionId: el.action_id,\n          defaultDescription: el.description,\n          detail: el.detail,\n          timestamp: el.timestamp\n        }));\n        this.entryLogSubject.next(data);\n        return this.entryLogSubject;\n      }),\n      catchError(err => Helper.handleError(err, \"Failed to get log\"))\n    );\n  }\n\n  getLogsAsObservable(): Observable {\n    return this.http.get(this.api, this.httpOptions).pipe(\n      map((result: any) => {\n        let data = result.data.map(el => new ActionEntryLog({\n          loggerInumber: el.logger_id,\n          affectedInumber: el.affected_user_id,\n          affectedUserName: el.affected_user_name,\n          actionId: el.action_id,\n          defaultDescription: el.description,\n          detail: el.detail,\n          timestamp: el.timestamp\n        }));\n        return data;\n      }),\n      catchError(err => Helper.handleError(err, \"Failed to get log\"))\n    );\n  }\n\n  /**\n   * Add a log to database\n   * @returns\n   */\n  // TODO Should return an observable so front end and know whether a log was successful\n  addLog(affectedUser: User, actionId: ActiondId, detail: Detail) {\n    let cINumber = this.getCachedINumber();\n    // Create Entry Log from model\n    let newEntryLog = new ActionEntryLog({\n      \"actionId\": actionId,\n      \"loggerInumber\": cINumber,\n      \"affectedUserName\": affectedUser.name(),\n      \"affectedInumber\": affectedUser.iNumber,\n      \"detail\": detail\n    });\n    if (this.actionList.length) {\n      let t = this.actionList.filter(i => i.action_id == actionId);\n      if (t.length) {\n        newEntryLog.defaultDescription = t[0].description;\n      }\n    }\n    // Prepare request body\n    const body = newEntryLog.generatePostBody();\n    this.http.post(this.api, body, this.httpOptions)\n      .pipe(\n        tap(() => {\n          this.entryLogSubject.getValue().unshift(newEntryLog);\n          this.entryLogSubject.next(this.entryLogSubject.getValue());\n        }),\n        catchError(err => Helper.handleError(err, \"Failed to add log\"))\n      ).subscribe(() => {\n\n    });\n  }\n\n  /**\n   * Delete all logs on database\n   */\n  purgeLogs(): Observable {\n    return this.http.post(this.api + \"/reset\", {\"reset_boolean\": true}, this.httpOptions).pipe(tap(() => this.refresh()));\n  }\n\n  // HELPER FUNCTIONS\n  /**\n   * @returns cached Inumber stored in localstorage\n   */\n  getCachedINumber() {\n    return localStorage[environment.KEY_CACHE_INUMBER];\n  }\n\n  setCachedINumber(i: string) {\n    localStorage[environment.KEY_CACHE_INUMBER] = i;\n  }\n\n  refresh() {\n    this.getLogs().subscribe();\n  }\n\n  search(user: User): Observable {\n    return this.http.get(this.api, this.httpOptions).pipe(\n      map((result: any) => {\n        let data = result.data.map(el => new ActionEntryLog({\n          loggerInumber: el.logger_id,\n          affectedInumber: el.affected_user_id,\n          affectedUserName: el.affected_user_name,\n          actionId: el.action_id,\n          defaultDescription: el.description,\n          detail: el.detail,\n          timestamp: el.timestamp\n        }));\n        return data.filter((action: ActionEntryLog) => action.affectedInumber.toUpperCase() == user.iNumber.toUpperCase());\n      }),\n      catchError(err => Helper.handleError(err, \"Failed to get log\"))\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                authFlag\n                            \n                            \n                                authMessage\n                            \n                            \n                                    Public\n                                loginService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(err)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {NgForm} from \"@angular/forms\";\nimport {LoginService} from \"../core/login.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  authFlag = true;\n  authMessage = \"\";\n\n  constructor(public afAuth: AngularFireAuth, public loginService: LoginService) {\n    // attempt to authenticate user\n    if (this.loginService.getCachedToken()) {\n      this.loginService.authenticatedWithBasicToken().subscribe(() => {\n      }, err => this.handleError(err));\n    }\n  }\n\n  login(username: string, password: string) {\n    this.loginService.authenticateWithFirebase(username, password).catch(\n      e => this.handleError(e)\n    );\n    this.loginService.authenticateWithUserNamePassword(username, password)\n      .subscribe(\n        () => console.log(\"Login Successful\"),\n        err => this.handleError(err)\n      );\n  }\n\n  logout() {\n    this.loginService.signOut();\n  }\n\n  handleError(err) {\n    console.log(\"hello\");\n    this.authFlag = false;\n    this.authMessage = err.message;\n  }\n\n  onSubmit(f: NgForm) {\n    if (f.valid) {\n      let data = f.value;\n      let username = data.inputUsername;\n      let password = data.inputPassword;\n      this.login(username, password);\n    }\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n        Please sign in\n        Email address\n        \n        Password\n        \n        {{authMessage}}\n        Sign in\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .form-signin {\n  width: 100%;\n  max-width: 330px;\n  padding: 15px;\n  margin: 0 auto;\n}\n\n.form-signin .checkbox {\n  font-weight: 400;\n}\n\n.form-signin .form-control {\n  position: relative;\n  box-sizing: border-box;\n  height: auto;\n  padding: 10px;\n  font-size: 16px;\n}\n\n.form-signin .form-control:focus {\n  z-index: 2;\n}\n\n.form-signin input[type=\"email\"] {\n  margin-bottom: -1px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.form-signin input[type=\"password\"] {\n  margin-bottom: 10px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.vertical-center {\n  min-height: 100%; /* Fallback for browsers do NOT support vh unit */\n  min-height: 100vh; /* These two lines are counted as one :-)       */\n  background-color: #f5f5f5;\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Please sign in        Email address                Password                {{authMessage}}        Sign in            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Public\n                                authToken\n                            \n                            \n                                    Public\n                                hasAuth\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                KEY_CACHE_AUTH_TOKEN\n                            \n                            \n                                    Public\n                                KEY_CACHE_INUMBER\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedWithBasicToken\n                            \n                            \n                                authenticateWithFirebase\n                            \n                            \n                                authenticateWithUserNamePassword\n                            \n                            \n                                getCachedToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logonWithINumber\n                            \n                            \n                                promptINumber\n                            \n                            \n                                setCachedToken\n                            \n                            \n                                showDataBaseDown\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserService, modalService: BsModalService, afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/login.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticatedWithBasicToken\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticatedWithBasicToken(token?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticateWithFirebase\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticateWithFirebase(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticateWithUserNamePassword\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticateWithUserNamePassword(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCachedToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetCachedToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logonWithINumber\n                        \n                        \n                    \n                \n            \n            \n                \nlogonWithINumber(iNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            promptINumber\n                        \n                        \n                    \n                \n            \n            \n                \npromptINumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCachedToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetCachedToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDataBaseDown\n                        \n                        \n                    \n                \n            \n            \n                \nshowDataBaseDown(err)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/login.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.api + \"/auth\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authToken\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasAuth\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            KEY_CACHE_AUTH_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AUTH_TOKEN\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            KEY_CACHE_INUMBER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.KEY_CACHE_INUMBER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/login.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {catchError, map, tap} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {UserService} from './user.service';\nimport {User} from '../shared/model/user';\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {ModalInterface} from \"../shared/components/modals/modal-interface\";\nimport {ModalInputComponent} from \"../shared/components/modals/modal-input/modal-input.component\";\nimport {AngularFireAuth} from \"angularfire2/auth\";\nimport {ModalServerErrorComponent} from \"../shared/components/modals/modal-server-error/modal-server-error.component\";\nimport {environment} from \"../../environments/environment\";\nimport {Helper} from \"../shared/helper/helper\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable()\nexport class LoginService {\n\n\n  // Component Variables\n  public KEY_CACHE_AUTH_TOKEN = \"AUTH_TOKEN\";\n  public KEY_CACHE_INUMBER = environment.KEY_CACHE_INUMBER;\n  public user: User;\n\n  public api = environment.api + \"/auth\";\n  public authToken;\n  public hasAuth;\n\n  constructor(public http: HttpClient, private userService: UserService,\n              private modalService: BsModalService, public afAuth: AngularFireAuth) {\n    this.hasAuth = environment.enableAuth === false;\n  }\n\n  authenticateWithUserNamePassword(username, password) {\n    username = username.trim();\n    password = password.trim();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Basic \" + btoa(`${username}:${password}`)\n      })\n    };\n    return this.http.get(this.api, httpOptions).pipe(\n      tap(() => {\n        this.setCachedToken(btoa(`${username}:${password}`));\n        // this.authToken = btoa(`${username}:${password}`);\n        this.hasAuth = true;\n      }),\n      catchError(e => Helper.handleError(e, \"Failed to Authenticate\"))\n    );\n  }\n\n  authenticatedWithBasicToken(token?: string) {\n    if (!token) {\n      token = this.getCachedToken();\n    }\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Basic \" + token\n      })\n    };\n    return this.http.get(this.api, httpOptions).pipe(\n      tap(() => this.hasAuth = true),\n      catchError(e => Helper.handleError(e, \"Failed to Authenticate with token\"))\n    );\n  }\n\n  isAuthenticated() {\n    return this.authenticatedWithBasicToken(this.getCachedToken()).pipe(map(() => true));\n  }\n\n  getCachedToken() {\n    return localStorage.getItem(this.KEY_CACHE_AUTH_TOKEN);\n  }\n\n  setCachedToken(token) {\n    localStorage.setItem(this.KEY_CACHE_AUTH_TOKEN, token);\n  }\n\n\n  authenticateWithFirebase(username, password) {\n    // Todo this is work around\n    username += \"@scout33.org\";\n    return this.afAuth.auth.signInWithEmailAndPassword(username, password);\n  }\n\n  logonWithINumber(iNumber) {\n    if (!iNumber) {\n      iNumber = \"empty\";\n    }\n    this.userService.getUserByNumber(iNumber.toLowerCase()).subscribe((user: User) => {\n        this.user = user;\n        localStorage[this.KEY_CACHE_INUMBER] = this.user.iNumber;\n      }, (err: any) => {\n        // SERVER IS DOWN\n        if (err.status === 0) {\n          this.showDataBaseDown(err);\n        } else {\n          this.promptINumber();\n        }\n      }\n    );\n  }\n\n  promptINumber() {\n    let bsModalRef: ModalInterface = this.modalService.show(ModalInputComponent, {\n      animated: true,\n      keyboard: false,\n      focus: true,\n      ignoreBackdropClick: true\n    });\n    bsModalRef.content.title = \"Please enter your INUMBER\";\n    bsModalRef.content.message = \"This will help the tool identify who you are. ie i123456\";\n    bsModalRef.content.onConfirm.subscribe((input: string) => this.logonWithINumber(input.toLowerCase()));\n    bsModalRef.content.onCancel.subscribe(() => this.logonWithINumber(null));\n    bsModalRef.content.onHide.subscribe(() => this.signOut());\n  }\n\n  showDataBaseDown(err) {\n    // This is all dialog for server error\n    // TODO RE-ENABLE AFTER SQL INTEGRATION\n    let bsModalRef: ModalInterface = this.modalService.show(ModalServerErrorComponent, {\n      animated: true,\n      keyboard: false,\n      focus: true,\n      ignoreBackdropClick: true\n    });\n    bsModalRef.content.title = \"Well this is embarrassing...\";\n    bsModalRef.content.message = err.message;\n    bsModalRef.content.onConfirm.subscribe(() => location.reload());\n    bsModalRef.content.onHide.subscribe(() => this.signOut());\n  }\n\n  signOut() {\n    this.hasAuth = false;\n    localStorage.clear();\n    this.user = null;\n    this.afAuth.auth.signOut();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n  MatButtonModule,\n  MatIconModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport {NgModule} from \"@angular/core\";\n\n\n@NgModule({\n  imports: [MatButtonModule, MatSnackBarModule, MatIconModule, MatSnackBarModule, MatTooltipModule, MatSlideToggleModule, MatToolbarModule],\n  exports: [MatButtonModule, MatSnackBarModule, MatIconModule, MatSnackBarModule, MatTooltipModule, MatSlideToggleModule, MatToolbarModule],\n})\n\nexport class MaterialModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalConfirmComponent.html":{"url":"components/ModalConfirmComponent.html","title":"component - ModalConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalConfirmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-confirm\n            \n\n            \n                styleUrls\n                ./modal-confirm.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-confirm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onConfirm\n                            \n                            \n                                    Public\n                                onHide\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_bsModalRef: BsModalRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCancel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onHide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please Confirm\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {BsModalRef} from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport {Subject} from \"rxjs\";\n\n\n@Component({\n  selector: 'app-modal-confirm',\n  templateUrl: './modal-confirm.component.html',\n  styleUrls: ['./modal-confirm.component.css']\n})\n\nexport class ModalConfirmComponent implements OnInit {\n\n  public title = \"Please Confirm\";\n  public message = \"\";\n  public onCancel: Subject;\n  public onConfirm: Subject;\n  public onHide: Subject;\n\n  constructor(private _bsModalRef: BsModalRef) {\n\n  }\n\n  public ngOnInit(): void {\n    this.onCancel = new Subject();\n    this.onConfirm = new Subject();\n    this.onHide = new Subject();\n  }\n\n  public confirm(): void {\n    this.onConfirm.next();\n    this._bsModalRef.hide();\n  }\n\n  public cancel(): void {\n    this.onCancel.next();\n    this._bsModalRef.hide();\n  }\n\n  public hide() {\n    this.onHide.next();\n    this._bsModalRef.hide();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n    {{message}}\n  \n  \n    Confirm\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./modal-confirm.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}          ×            {{message}}        Confirm    Cancel  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalInfoComponent.html":{"url":"components/ModalInfoComponent.html","title":"component - ModalInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/modals/modal-info/modal-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-info\n            \n\n            \n                styleUrls\n                ./modal-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _bsModalRef\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onConfirm\n                            \n                            \n                                    Public\n                                onHide\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_bsModalRef: BsModalRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _bsModalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCancel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onHide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please Confirm\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-info/modal-info.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {BsModalRef} from \"ngx-bootstrap/modal/bs-modal-ref.service\";\nimport {Subject} from \"rxjs\";\n\n@Component({\n  selector: 'app-modal-info',\n  templateUrl: './modal-info.component.html',\n  styleUrls: ['./modal-info.component.css']\n})\nexport class ModalInfoComponent implements OnInit {\n\n  public title = \"Please Confirm\";\n  public message = \"\";\n  public onCancel: Subject;\n  public onConfirm: Subject;\n  public onHide: Subject;\n\n  constructor(public _bsModalRef: BsModalRef) {\n  }\n\n  public ngOnInit(): void {\n    this.onCancel = new Subject();\n    this.onConfirm = new Subject();\n    this.onHide = new Subject();\n  }\n\n  public confirm(input: string): void {\n    if (input.trim()) {\n      this.onConfirm.next(input);\n      this._bsModalRef.hide();\n    }\n  }\n\n  public cancel(): void {\n    this.onCancel.next();\n    this._bsModalRef.hide();\n  }\n\n  public hide() {\n    this.onHide.next();\n    this._bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n    {{message}}\n  \n  \n    Confirm\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./modal-info.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}          ×            {{message}}        Confirm    Cancel  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalInputComponent.html":{"url":"components/ModalInputComponent.html","title":"component - ModalInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/modals/modal-input/modal-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-input\n            \n\n            \n                styleUrls\n                ./modal-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onConfirm\n                            \n                            \n                                    Public\n                                onHide\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_bsModalRef: BsModalRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCancel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onHide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please Confirm\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-input/modal-input.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {BsModalRef} from \"ngx-bootstrap/modal/bs-modal-ref.service\";\n\n@Component({\n  selector: 'app-modal-input',\n  templateUrl: './modal-input.component.html',\n  styleUrls: ['./modal-input.component.css']\n})\nexport class ModalInputComponent implements OnInit {\n\n  public title = \"Please Confirm\";\n  public message = \"\";\n  public onCancel: Subject;\n  public onConfirm: Subject;\n  public onHide: Subject;\n\n  constructor(private _bsModalRef: BsModalRef) {\n\n  }\n\n  public ngOnInit(): void {\n    this.onCancel = new Subject();\n    this.onConfirm = new Subject();\n    this.onHide = new Subject();\n  }\n\n  public confirm(input: string): void {\n    if (input.trim()) {\n      this.onConfirm.next(input);\n      this._bsModalRef.hide();\n    }\n  }\n\n  public cancel(): void {\n    this.onCancel.next();\n    this._bsModalRef.hide();\n  }\n\n  public hide() {\n    this.onHide.next();\n    this._bsModalRef.hide();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n    {{message}}\n  \n  \n    \n  \n  \n    Confirm\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./modal-input.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}          ×            {{message}}                Confirm    Cancel  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalInterface.html":{"url":"interfaces/ModalInterface.html","title":"interface - ModalInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/modals/modal-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Subject} from \"rxjs\";\n\nexport interface ModalInterface {\n  content?: {\n    title: string,\n    message: string,\n    onConfirm: Subject,\n    onCancel: Subject,\n    onHide: Subject\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalServerErrorComponent.html":{"url":"components/ModalServerErrorComponent.html","title":"component - ModalServerErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalServerErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-server-error\n            \n\n            \n                styleUrls\n                ./modal-server-error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-server-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onConfirm\n                            \n                            \n                                    Public\n                                onHide\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_bsModalRef: BsModalRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCancel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onHide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Please Confirm\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {BsModalRef} from \"ngx-bootstrap/modal/bs-modal-ref.service\";\n\n@Component({\n  selector: 'app-modal-server-error',\n  templateUrl: './modal-server-error.component.html',\n  styleUrls: ['./modal-server-error.component.css']\n})\nexport class ModalServerErrorComponent implements OnInit {\n\n  public title = \"Please Confirm\";\n  public message = \"\";\n  public onCancel: Subject;\n  public onConfirm: Subject;\n  public onHide: Subject;\n\n  constructor(private _bsModalRef: BsModalRef) {\n\n  }\n\n  public ngOnInit(): void {\n    this.onCancel = new Subject();\n    this.onConfirm = new Subject();\n    this.onHide = new Subject();\n  }\n\n  public confirm(): void {\n    this.onConfirm.next();\n    this._bsModalRef.hide();\n  }\n\n  public cancel(): void {\n    this.onCancel.next();\n    this._bsModalRef.hide();\n  }\n\n  public hide() {\n    this.onHide.next();\n    this._bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      &times;\n    \n  \n  {{message}}\n  \n    1. Are you using Chrome as a browser?\n    2. Is the database running? Click\n    Me I will show you how!\n    3. Contact tangjoncl@gmail.com | jonathan.tang01@sap.com\n  \n  \n    Refresh\n  \n\n\n    \n\n    \n                \n                    ./modal-server-error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}          ×        {{message}}      1. Are you using Chrome as a browser?    2. Is the database running? Click    Me I will show you how!    3. Contact tangjoncl@gmail.com | jonathan.tang01@sap.com        Refresh  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalServerErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appShort\n                            \n                            \n                                dEnvironmentMsg\n                            \n                            \n                                isProd\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                qmdoclink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/navbar/navbar.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/navbar/navbar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appShort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.appShort\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dEnvironmentMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DEVELOPMENT'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isProd\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.production\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            qmdoclink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.doc_url\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoginService} from '../../../core/login.service';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  appShort = environment.appShort;\n  isProd = environment.production;\n  dEnvironmentMsg = 'DEVELOPMENT';\n  qmdoclink = environment.doc_url;\n\n  constructor(public loginService: LoginService) {\n  }\n\n  ngOnInit(): void {\n    if (!environment.enableDemo) {\n      const cachedINumber = localStorage[environment.KEY_CACHE_INUMBER];  // look at cache\n      this.loginService.logonWithINumber(cachedINumber);\n    }\n\n  }\n\n  logout() {\n    this.loginService.signOut();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    {{appShort}} {{dEnvironmentMsg}}\n\n  \n  \n    \n  \n\n  \n    \n      \n        Home\n      \n      \n        Manage Team\n      \n      \n        RCC\n      \n      \n        DOCUMENTATION\n      \n    \n    \n      Welcome {{ loginService.user?.name() }}!\n      Settings\n      \n      Logout\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .navbar-qmcd .nav-link {\n  color: #d2d2d2;\n}\n\n.navbar-qmcd a:hover, .nav-link.active {\n  color: #ffffff !important;\n  background-color: #465b77;\n  border-radius: 5px;\n}\n\n.navbar-qmcd {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  background-color: #2c3e50;\n  padding: 3px 4px;\n  z-index: 100;\n  font-weight: 500;\n}\n\n.navbar-qmcd .navbar-brand {\n  font-weight: 500;\n  color: white;\n  margin-right: 0;\n}\n\n.navbar-toggler-icon {\n  color: white;\n}\n\n.navbar-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.9)' stroke-width='3' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{appShort}} {{dEnvironmentMsg}}                              Home                    Manage Team                    RCC                    DOCUMENTATION                    Welcome {{ loginService.user?.name() }}!      Settings            Logout                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoticeBoardComponent.html":{"url":"components/NoticeBoardComponent.html","title":"component - NoticeBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoticeBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notice-board/notice-board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notice-board\n            \n\n            \n                styleUrls\n                ./notice-board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notice-board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                            \n                                flag\n                            \n                            \n                                message\n                            \n                            \n                                notice$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/notice-board/notice-board.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notice-board/notice-board.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notice-board/notice-board.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flag\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/notice-board/notice-board.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/notice-board/notice-board.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notice$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/notice-board/notice-board.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AngularFireDatabase} from \"angularfire2/database\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-notice-board',\n  templateUrl: './notice-board.component.html',\n  styleUrls: ['./notice-board.component.css']\n})\nexport class NoticeBoardComponent implements OnInit {\n  notice$;\n  message;\n  flag;\n\n  constructor(public db: AngularFireDatabase) {\n  }\n\n  ngOnInit() {\n    this.notice$ = this.db.object(environment.firebaseRootUrl + '/notice-board');\n    this.notice$.valueChanges().subscribe(resp => {\n      this.message = resp.msg;\n      this.flag = resp.flag || false;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  Please Be Advised!\n  \n  {{message}}\n\n\n    \n\n    \n                \n                    ./notice-board.component.css\n                \n                #notice-board-message {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Be Advised!    {{message}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoticeBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoticeBoardSettingComponent.html":{"url":"components/NoticeBoardSettingComponent.html","title":"component - NoticeBoardSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoticeBoardSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/notice-board-setting/notice-board-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notice-board-setting\n            \n\n            \n                styleUrls\n                ./notice-board-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notice-board-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                noticeBoardFlag\n                            \n                            \n                                noticeBoardMsg\n                            \n                            \n                                noticeBoardMsg$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noticeBoardFlag\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noticeBoardMsg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noticeBoardMsg$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/notice-board-setting/notice-board-setting.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {AngularFireDatabase, AngularFireObject} from \"angularfire2/database\";\nimport {environment} from \"../../../environments/environment\";\nimport {AngularFireAuth} from \"angularfire2/auth\";\n\n@Component({\n  selector: 'app-notice-board-setting',\n  templateUrl: './notice-board-setting.component.html',\n  styleUrls: ['./notice-board-setting.component.css']\n})\nexport class NoticeBoardSettingComponent implements OnInit {\n\n  noticeBoardMsg$: AngularFireObject;\n  noticeBoardMsg;\n  noticeBoardFlag;\n\n  constructor(public afAuth: AngularFireAuth, public db: AngularFireDatabase) {\n  }\n\n  ngOnInit() {\n    this.afAuth.authState.subscribe((auth) => {\n      if (auth) {\n        this.db.object(environment.firebaseRootUrl + '/notice-board').valueChanges().subscribe((r: any) => {\n          this.noticeBoardFlag = r.flag;\n          this.noticeBoardMsg = r.msg;\n        });\n      }\n    });\n\n  }\n\n\n  onSubmit(f: NgForm) {\n    if (f.valid) {\n      const msg = f.value.message || \"\";\n      const flag = f.value.flag || false;\n      this.db.object(environment.firebaseRootUrl + '/notice-board/msg').set(msg);\n      this.db.object(environment.firebaseRootUrl + '/notice-board/flag').set(flag);\n    }\n  }\n}\n\n    \n\n    \n        Notice Board\n\n  \n    For any announcements\n    \n  \n  \n    \n      \n      \n        Show Notice Board\n      \n    \n  \n  Submit\n\n\n    \n\n    \n                \n                    ./notice-board-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Notice Board      For any announcements                                Show Notice Board              Submit'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoticeBoardSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/notification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                message\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type, message, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/notification.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/notification.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/notification.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/notification.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/notification.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Notification {\n  active: boolean;\n  type: string;\n  message: string;\n\n  constructor(type, message, display) {\n    this.active = display || false;\n    this.message = message || \"\";\n    this.type = `[${type.toUpperCase()}]` || \"[SYSTEM INFO]\";\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  // toString() {\n  //   return `[${this.type.toUpperCase()}] ${this.message}`\n  // }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/notification/notification.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                styleUrls\n                ./notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification_array\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/notification/notification.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/notification/notification.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notification_array\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/notification/notification.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/notification/notification.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Notification} from \"../../model/notification\";\nimport {NotificationService} from \"../../../core/notification.service\";\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n\n  notification_array: Notification[] = [];\n\n  constructor(public notificationService: NotificationService) {\n  }\n\n  ngOnInit() {\n    this.notificationService.notifications.subscribe(res => {\n      console.log(res);\n      this.notification_array.push(new Notification(\"System Info\", res.message, true));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    ×\n    {{note.type}} {{note.message}}\n  \n\n\n    \n\n    \n                \n                    ./notification.component.css\n                \n                .notification-item {\n  border: 2px solid black;\n  border-radius: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ×    {{note.type}} {{note.message}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                key\n                            \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webSocketAbstractService: WebSocketAbstractService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/notification.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webSocketAbstractService\n                                                  \n                                                        \n                                                                        WebSocketAbstractService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMsg\n                        \n                        \n                    \n                \n            \n            \n                \nsendMsg(msg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/notification.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"notifications\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/notification.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {WebSocketAbstractService} from \"./websocketAbstract.service\";\nimport {Subject} from \"rxjs/index\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  notifications: Subject;\n  private key = \"notifications\";\n\n  constructor(webSocketAbstractService: WebSocketAbstractService) {\n    this.notifications = webSocketAbstractService\n      .connect(this.key);\n  }\n\n  sendMsg(msg) {\n    this.notifications.next(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatchNotesComponent.html":{"url":"components/PatchNotesComponent.html","title":"component - PatchNotesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatchNotesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/patch-notes/patch-notes.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-patch-notes\n            \n\n            \n                styleUrls\n                ./patch-notes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./patch-notes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/patch-notes/patch-notes.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/patch-notes/patch-notes.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-patch-notes',\n  templateUrl: './patch-notes.component.html',\n  styleUrls: ['./patch-notes.component.css']\n})\nexport class PatchNotesComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  QM v2.3.1\n  \n  Custom Thresholds, patches\n  \n    Support for custom incident thresholds (maximum incidents assigned per day)\n    Confirmation before changing roles in Team Manager\n    Quick add +1 when doing queue days\n  \n\n\n\n\n  QM v2.20\n  \n  \n    Support for adding new components\n    iNumbers are no longer case sensitive\n    New Settings sections to maintain the tool.\n    Time shift info\n  \n\n\n\n  QM v2.11\n  \n\n  \n    Refactor services\n  \n\n\n  QM v2.10\n  \n  \n    Improved UI\n    Cleaner code\n    Works only in Chrome\n    Broken in IE (It worked at a moment in time)\n    Resolved HTTP Error when refreshing the page\n  \n  QM Dashboard Updated\n  \n    The number next to Total Incidents in green shows the incident counter assigned to an engineer in the last 24\n      hours.\n    \n    font-awesome icons\n    Little indication that pops up, notifying an incident assignment\n  \n  RCC\n  \n    Houses the reset buttons\n    New panel that tells us the next reset date\n  \n  Activity Log\n  \n    All actions and updates to the system will be logged in activity log! Except for resets...\n  \n  Quick Notes Sidebar\n  \n    WIP but present\n  \n\n\n\n    \n\n    \n                \n                    ./patch-notes.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  QM v2.3.1    Custom Thresholds, patches      Support for custom incident thresholds (maximum incidents assigned per day)    Confirmation before changing roles in Team Manager    Quick add +1 when doing queue days    QM v2.20        Support for adding new components    iNumbers are no longer case sensitive    New Settings sections to maintain the tool.    Time shift info    QM v2.11        Refactor services    QM v2.10        Improved UI    Cleaner code    Works only in Chrome    Broken in IE (It worked at a moment in time)    Resolved HTTP Error when refreshing the page    QM Dashboard Updated      The number next to Total Incidents in green shows the incident counter assigned to an engineer in the last 24      hours.        font-awesome icons    Little indication that pops up, notifying an incident assignment    RCC      Houses the reset buttons    New panel that tells us the next reset date    Activity Log      All actions and updates to the system will be logged in activity log! Except for resets...    Quick Notes Sidebar      WIP but present  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PatchNotesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/product.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                getProducts\n                            \n                            \n                                removeProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/product.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddProduct(productShortName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/product.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productShortName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/product.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeProduct\n                        \n                        \n                    \n                \n            \n            \n                \nremoveProduct(productShortName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/product.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productShortName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.api + \"/products\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/product.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/product.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/product.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {catchError, map} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Helper} from \"../shared/helper/helper\";\n\n@Injectable()\nexport class ProductService {\n  private api: string = environment.api + \"/products\";\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(public http: HttpClient) {\n\n  }\n\n  getProducts(): Observable {\n    return this.http.get(this.api, this.httpOptions).pipe(\n      map((res: any) => {\n        const productList = [];\n        if (res.code === 200) {\n          res.data.forEach(el => {\n            productList.push(el.short_name);\n          });\n          Helper.sortAlpha(productList); // sorts array alphabetically\n        }\n        return productList;\n      }));\n  }\n\n  addProduct(productShortName): Observable {\n    return this.http.post(this.api, {short_name: productShortName}, this.httpOptions)\n      .pipe(catchError(e => Helper.handleError(e, \"Add Product Failed\")));\n  }\n\n  removeProduct(productShortName): Observable {\n    return this.http.delete(`${this.api}/${productShortName}`)\n      .pipe(catchError(e => Helper.handleError(e, \"Remove Product Failed\")));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QmInfoComponent.html":{"url":"components/QmInfoComponent.html","title":"component - QmInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QmInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/qm-info/qm-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-qm-info\n            \n\n            \n                styleUrls\n                ./qm-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./qm-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                qmUser\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeQM\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, snackBar: MatSnackBar, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeQM\n                        \n                        \n                    \n                \n            \n            \n                \nchangeQM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            qmUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/qm-info/qm-info.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../core/user.service';\nimport {User} from '../../shared/model/user';\nimport {Observable} from 'rxjs';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AngularFireDatabase} from \"angularfire2/database\";\n\n@Component({\n  selector: 'app-qm-info',\n  templateUrl: './qm-info.component.html',\n  styleUrls: ['./qm-info.component.css']\n})\nexport class QmInfoComponent implements OnInit {\n\n  qmUser: Observable;\n\n  constructor(public userService: UserService, public snackBar: MatSnackBar, private db: AngularFireDatabase) {\n  }\n\n  ngOnInit() {\n    this.qmUser = this.userService.getQM();\n  }\n\n  changeQM() {\n    let uInput = prompt(\"Enter the iNumber of QM\").replace(/\\s/g, '');\n    if (uInput && uInput.length) {\n      this.userService.setQM(uInput.toLowerCase()).subscribe(() => {\n          this.qmUser = this.userService.getQM();\n          this.snackBar.open(\"Welcome Queue Manager\", \"Close\", {duration: 1000});\n        },\n        e => {\n          alert(e.message);\n        });\n    }\n\n  }\n}\n\n    \n\n    \n        \n  The Current Queue Manager:\n  {{ (qmUser|async)?.name() }}\n  \n    Not you?\n    Change\n  \n\n\n    \n\n    \n                \n                    ./qm-info.component.css\n                \n                #qm-info-block {\n  margin: 17px auto;\n  background-color: #2c3e50;\n  padding: 14px;\n  border-radius: 23px;\n  border: 5px solid #ffffff;\n  color: white;\n}\n\ndiv#qm-info-name {\n  margin-bottom: 8px;\n}\n\ndiv#qm-info-name {\n  width: 70%;\n}\n\ndiv#qm-info-name {\n  background-color: #2c3e50;\n  border-color: #ffffff;\n  font-size: 27px;\n  font-weight: 500;\n  color: white;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  The Current Queue Manager:  {{ (qmUser|async)?.name() }}      Not you?    Change  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QmInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QmUser.html":{"url":"classes/QmUser.html","title":"class - QmUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QmUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/qmuser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                iNumber\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getINumber\n                            \n                            \n                                getName\n                            \n                            \n                                setINumber\n                            \n                            \n                                setName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iNumber: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/qmuser.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iNumber\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            iNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"i123\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/qmuser.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/qmuser.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getINumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetINumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/qmuser.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/qmuser.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setINumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetINumber(iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/qmuser.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setName\n                        \n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/qmuser.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class QmUser {\n  private iNumber: string = \"i123\";\n  private name: string;\n\n  constructor(iNumber: string) {\n    this.iNumber = iNumber;\n  }\n\n  setINumber(iNumber: string): void {\n    this.iNumber = iNumber;\n  }\n\n  getINumber(): string {\n    return this.iNumber;\n  }\n\n  getName(): string {\n    if (this.name) {\n      return this.name;\n    } else {\n      return this.iNumber;\n    }\n  }\n\n  setName(name: string) {\n    this.name = name;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueueControlComponent.html":{"url":"components/QueueControlComponent.html","title":"component - QueueControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QueueControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/queue-control/queue-control.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queue-control\n            \n\n            \n                styleUrls\n                ./queue-control.component.css\n            \n\n\n\n            \n                templateUrl\n                ./queue-control.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _userList\n                            \n                            \n                                applicationChangeFlag\n                            \n                            \n                                errorMessage\n                            \n                            \n                                id$\n                            \n                            \n                                MAX_INCIDENTS\n                            \n                            \n                                paramId\n                            \n                            \n                                showSpinner\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                TIP_ADD_INCIDENT\n                            \n                            \n                                TIP_AVAILABLE\n                            \n                            \n                                TIP_BUSY\n                            \n                            \n                                TIP_FIREBALL\n                            \n                            \n                                TIP_REFRESH\n                            \n                            \n                                TIP_REMOVE_INCIDENT\n                            \n                            \n                                TIP_TOTAL_INCIDENTS\n                            \n                            \n                                todayUserIncidentDict\n                            \n                            \n                                totalIncidents\n                            \n                            \n                                totalIncidentsCtx\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                hardRefresh\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddIncident\n                            \n                            \n                                onRemoveIncident\n                            \n                            \n                                populateTodayIncident\n                            \n                            \n                                toggleAvailability\n                            \n                            \n                                updateSummary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, snackBar: MatSnackBar, modalService: BsModalService, queueStateService: QueueStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queueStateService\n                                                  \n                                                        \n                                                                        QueueStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardRefresh\n                        \n                        \n                    \n                \n            \n            \n                \nhardRefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddIncident\n                        \n                        \n                    \n                \n            \n            \n                \nonAddIncident(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemoveIncident\n                        \n                        \n                    \n                \n            \n            \n                \nonRemoveIncident(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateTodayIncident\n                        \n                        \n                    \n                \n            \n            \n                \npopulateTodayIncident(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleAvailability\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleAvailability(user: User, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSummary\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSummary()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _userList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applicationChangeFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_INCIDENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paramId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_ADD_INCIDENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Assign user an incident'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_AVAILABLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Ready for incident assignment'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_BUSY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Should ask user before assigning more'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_FIREBALL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `User is on fire and has taken more than ${this.MAX_INCIDENTS} incidents`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_REFRESH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Green check mark is up to date. Orange is out sync\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_REMOVE_INCIDENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Remove an incident from user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIP_TOTAL_INCIDENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Displays number of incidents assigned today\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todayUserIncidentDict\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalIncidents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalIncidentsCtx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/queue-control/queue-control.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {map, pluck, tap} from 'rxjs/operators';\nimport {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\n\nimport {UserService} from '../../core/user.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {User} from \"../../shared/model/user\";\nimport {BsModalService} from \"ngx-bootstrap/modal\";\nimport {ModalConfirmComponent} from \"../../shared/components/modals/modal-confirm/modal-confirm.component\";\nimport {ModalInterface} from \"../../shared/components/modals/modal-interface\";\nimport {Helper} from \"../../shared/helper/helper\";\nimport {QueueStateService} from \"../../core/queuestate.service\";\n\n@Component({\n  selector: 'app-queue-control',\n  templateUrl: './queue-control.component.html',\n  styleUrls: ['./queue-control.component.css']\n})\nexport class QueueControlComponent implements OnInit {\n  // alert variable\n\n  // users\n  users: Observable;\n  _userList: Array = [];\n\n  // Info variables\n  errorMessage: string;\n  showSpinner = true;\n  id$: Observable;\n  paramId: string;\n  totalIncidents: number;\n  totalIncidentsCtx: number;\n\n  todayUserIncidentDict: object = {};\n  // Refresh Button Variables\n  applicationChangeFlag = false;\n\n  // Fireball\n  MAX_INCIDENTS = 3;\n\n  // Tool Tip Definitions\n  TIP_TOTAL_INCIDENTS = \"Displays number of incidents assigned today\";\n  TIP_FIREBALL = `User is on fire and has taken more than ${this.MAX_INCIDENTS} incidents`;\n  TIP_BUSY = 'Should ask user before assigning more';\n  TIP_AVAILABLE = 'Ready for incident assignment';\n  TIP_ADD_INCIDENT = 'Assign user an incident';\n  TIP_REMOVE_INCIDENT = 'Remove an incident from user';\n  TIP_REFRESH = \"Green check mark is up to date. Orange is out sync\";\n\n  constructor(\n    private route: ActivatedRoute,\n    public userService: UserService,\n    public snackBar: MatSnackBar,\n    private modalService: BsModalService,\n    private queueStateService: QueueStateService) {\n  }\n\n  ngOnInit(): void {\n    this.applicationChangeFlag = false;\n\n    // Listen to changes from other clients\n    // this.webSocketService.connect().subscribe((data)=>{\n    //   if(data.socket_id !== this.webSocketService.socketId) {\n    //     this.applicationChangeFlag = true;\n    //   }\n    // });\n\n    this.queueStateService.state.subscribe(data => {\n      if (data.socket_id !== this.queueStateService.webSocketAbstractService.socket.id) {\n        this.applicationChangeFlag = true;\n      }\n    });\n\n    this.id$ = this.route.params.pipe(pluck('id'));\n    this.id$.subscribe(value => {\n      this.paramId = value;\n      this.showSpinner = true;\n      this.userService.getUsers().pipe(\n        tap((users: Array) => {\n          users.forEach(user => {\n            this.populateTodayIncident(user);\n          });\n        })\n      ).subscribe((users: Array) => {\n          this.showSpinner = false;\n          this._userList = users;\n          this.updateSummary();\n        },\n        (error) => {\n          this.errorHandler(error);\n        });\n    });\n  }\n\n  populateTodayIncident(user: User) {\n    return this.userService.getUserIncidents(user.iNumber).pipe(map((t: any) => {\n\n      return t.data.filter(i => {\n        return Helper.dateWithin(new Date(i.timestamp), 'day');\n      });\n    })).subscribe(res => this.todayUserIncidentDict[user.iNumber] = res);\n  }\n\n  onAddIncident(user: User) {\n    let amount = 1;\n    let bsModalRef: ModalInterface = this.modalService.show(ModalConfirmComponent);\n    bsModalRef.content.title = \"Incident Assignment\";\n    bsModalRef.content.message = `You are assigning +${amount} incident(s) to ${user.name()}(${user.iNumber})`;\n    bsModalRef.content.onCancel.subscribe(() => {\n    });\n    bsModalRef.content.onConfirm.subscribe(() => {\n      this.userService.addIncident(user, this.paramId).subscribe(() => {\n          this.snackBar.open('Incident Added', 'Close', {duration: 1000});\n          user.incidentCounts[this.paramId]++;\n          this.updateSummary();\n          this.populateTodayIncident(user);\n          this.queueStateService.modifyQueue();\n\n        },\n        error => {\n          this.errorHandler(error);\n        }\n      );\n    });\n  }\n\n  onRemoveIncident(user: User) {\n    let amount = -1;\n    let bsModalRef: ModalInterface = this.modalService.show(ModalConfirmComponent);\n    bsModalRef.content.title = \"Incident Removal\";\n    bsModalRef.content.message = `You are removing ${amount} incident(s) from ${user.name()}(${user.iNumber})`;\n    bsModalRef.content.onCancel.subscribe(() => {\n    });\n    bsModalRef.content.onConfirm.subscribe(() => {\n      this.userService.removeIncident(user, this.paramId).subscribe(() => {\n          this.snackBar.open('Incident Removed', 'Close', {duration: 1000});\n          user.incidentCounts[this.paramId]--;\n          this.updateSummary();\n          this.populateTodayIncident(user);\n          this.queueStateService.modifyQueue();\n\n        }, error => {\n          this.errorHandler(error);\n        }\n      );\n    });\n  }\n\n  toggleAvailability(user: User, event) {\n    // Send toggle\n    this.userService.updateAvailability(user, !user.isAvailable).subscribe(() => {\n      this.queueStateService.modifyQueue();\n      user.setStatus(!user.isAvailable);\n      this.snackBar.open(\"Toggle Successful\", \"Close\", {duration: 1000});\n    }, (error) => alert(error.message));\n  }\n\n  updateSummary() {\n\n    // total of all products\n    let totalA = 0;\n    this._userList.forEach(user => {\n      totalA += user.getIncidentTotal();\n    });\n    this.totalIncidents = totalA;\n\n    // total of product\n    let totalB = 0;\n    this._userList.forEach(element => {\n      if (element.incidentCounts[this.paramId]) {\n        totalB += element.incidentCounts[this.paramId];\n      }\n    });\n    this.totalIncidentsCtx = totalB;\n  }\n\n  hardRefresh() {\n    this.ngOnInit();\n    this.userService.logService.refresh();\n    this.snackBar.open(\"Refreshing...\", \"Close\", {duration: 3000});\n  }\n\n  private errorHandler(error) {\n    this.errorMessage = `Received an error: ${error.message}\\nConsider the following:\\n1.Are you using Chrome?\\n2.Please Restart the Database`;\n    this.snackBar.open(error.message, 'Close');\n  }\n}\n\n    \n\n    \n        {{ errorMessage }}\nQM: {{id$ | async }}\n  \n    \n    \n    Refresh\n  \n\n\n\n  {{ (_userList | isAvailable:paramId: true)?.length }} Available\n  \n    \n    \n      #\n      Name\n      Assign\n      Remove\n      {{ paramId }} Incidents\n      Total Incidents+24hrs\n      \n      AVG Q-DAY\n      Status\n      Actions\n    \n    \n    \n    \n      \n        \n      \n    \n    \n    \n    = user.iThreshold\">\n      \n        {{i + 1}}\n        = user.iThreshold\"\n             class=\"on-fire text-center\" src=\"../../../assets/fireball.gif\"\n             style=\"display: block\">\n      \n      {{user.name() + \"(\" + user.iNumber + \")\"}}\n      \n\n        \n          \n        \n      \n      \n        \n           \n        \n      \n      {{ user.getIncidentAmount(paramId) }}\n      {{ user.getIncidentTotal() }}\n        \n        \n         0,'badge-secondary': variable == 0, 'badge-danger' : variable \n           0\">+{{variable}}\n        \n      \n      {{ user.getAverageQDay() }}\n      \n        = user.iThreshold ? TIP_BUSY : TIP_AVAILABLE\"\n           [ngClass]=\"{'fa-check-circle': variable = user.iThreshold}\"\n           [ngStyle]=\"{'color' : variable \n        \n      \n      \n        Toggle-->\n        \n          Toggle\n        \n      \n    \n    \n  \n\n\n\n\n  {{ (_userList | isAvailable:paramId: false)?.length }}\n    Unavailable\n  \n    \n    \n      #\n      Name\n      {{ paramId }} Incidents\n      Total\n      AVG Q-DAY\n      Status\n      Actions\n    \n    \n    \n    \n      {{i + 1}}\n      {{bUser.name() + \"(\" + bUser.iNumber + \")\"}}\n      {{ bUser.getIncidentAmount(paramId) }}\n      {{ bUser.getIncidentTotal() }}\n      {{ bUser.getAverageQDay() }}\n      \n        \n      \n      \n        Toggle-->\n        \n          Toggle\n        \n      \n    \n    \n  \n\n\n\n{{id$ | async }} has\n  {{ totalIncidentsCtx }}\n  incidents. Sum is\n  {{ totalIncidents }}\n\n\n    \n\n    \n                \n                    ./queue-control.component.css\n                \n                #unavailable-title {\n  background-color: rgb(218, 38, 38);\n}\n\n#available-title {\n  background-color: #1d75bc;;\n}\n\n#available-title, #unavailable-title {\n  padding: 5px 14px;\n}\n\n.incident-detail {\n  background-color: white;\n  padding: 11px;\n  margin: auto;\n  width: 50%;\n  margin-bottom: 19px;\n}\n\n.assigned-twenty-four {\n  margin-left: 2px;\n}\n\n.on-fire {\n  width: 13.5px;\n  margin: auto;\n}\n\n\ntr.high-workload {\n  border-width: 5px;\n  border-left: solid red;\n}\n\n.qm-refresh {\n  float: right;\n  margin: 3px;\n}\n\n/* Tooltips */\n::ng-deep .mat-tooltip {\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ errorMessage }}QM: {{id$ | async }}              Refresh    {{ (_userList | isAvailable:paramId: true)?.length }} Available                #      Name      Assign      Remove      {{ paramId }} Incidents      Total Incidents+24hrs            AVG Q-DAY      Status      Actions                                                    = user.iThreshold\">              {{i + 1}}        = user.iThreshold\"             class=\"on-fire text-center\" src=\"../../../assets/fireball.gif\"             style=\"display: block\">            {{user.name() + \"(\" + user.iNumber + \")\"}}                                                                                   {{ user.getIncidentAmount(paramId) }}      {{ user.getIncidentTotal() }}                         0,\\'badge-secondary\\': variable == 0, \\'badge-danger\\' : variable            0\">+{{variable}}                    {{ user.getAverageQDay() }}              = user.iThreshold ? TIP_BUSY : TIP_AVAILABLE\"           [ngClass]=\"{\\'fa-check-circle\\': variable = user.iThreshold}\"           [ngStyle]=\"{\\'color\\' : variable                             Toggle-->                  Toggle                          {{ (_userList | isAvailable:paramId: false)?.length }}    Unavailable                #      Name      {{ paramId }} Incidents      Total      AVG Q-DAY      Status      Actions                      {{i + 1}}      {{bUser.name() + \"(\" + bUser.iNumber + \")\"}}      {{ bUser.getIncidentAmount(paramId) }}      {{ bUser.getIncidentTotal() }}      {{ bUser.getAverageQDay() }}                                  Toggle-->                  Toggle                        {{id$ | async }} has  {{ totalIncidentsCtx }}  incidents. Sum is  {{ totalIncidents }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueueControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueueDashboardComponent.html":{"url":"components/QueueDashboardComponent.html","title":"component - QueueDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QueueDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/queue-dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queue-dashboard\n            \n\n            \n                styleUrls\n                ./queue-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./queue-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/queue-dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/queue-dashboard.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-queue-dashboard',\n  templateUrl: './queue-dashboard.component.html',\n  styleUrls: ['./queue-dashboard.component.css']\n})\nexport class QueueDashboardComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n                \n                    ./queue-dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueueDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueDashboardModule.html":{"url":"modules/QueueDashboardModule.html","title":"module - QueueDashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueDashboardModule\n\n\n\ncluster_QueueDashboardModule_declarations\n\n\n\ncluster_QueueDashboardModule_imports\n\n\n\n\nClipboardComponent\n\nClipboardComponent\n\n\n\nQueueDashboardModule\n\nQueueDashboardModule\n\nQueueDashboardModule -->\n\nClipboardComponent->QueueDashboardModule\n\n\n\n\n\nComponentBarComponent\n\nComponentBarComponent\n\nQueueDashboardModule -->\n\nComponentBarComponent->QueueDashboardModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nQueueDashboardModule -->\n\nFilterPipe->QueueDashboardModule\n\n\n\n\n\nIsAvailable\n\nIsAvailable\n\nQueueDashboardModule -->\n\nIsAvailable->QueueDashboardModule\n\n\n\n\n\nQmInfoComponent\n\nQmInfoComponent\n\nQueueDashboardModule -->\n\nQmInfoComponent->QueueDashboardModule\n\n\n\n\n\nQueueControlComponent\n\nQueueControlComponent\n\nQueueDashboardModule -->\n\nQueueControlComponent->QueueDashboardModule\n\n\n\n\n\nQueueDashboardComponent\n\nQueueDashboardComponent\n\nQueueDashboardModule -->\n\nQueueDashboardComponent->QueueDashboardModule\n\n\n\n\n\nShiftInfoComponent\n\nShiftInfoComponent\n\nQueueDashboardModule -->\n\nShiftInfoComponent->QueueDashboardModule\n\n\n\n\n\nSortByAVGQDay\n\nSortByAVGQDay\n\nQueueDashboardModule -->\n\nSortByAVGQDay->QueueDashboardModule\n\n\n\n\n\nSortByAlpha\n\nSortByAlpha\n\nQueueDashboardModule -->\n\nSortByAlpha->QueueDashboardModule\n\n\n\n\n\nSortByPriority\n\nSortByPriority\n\nQueueDashboardModule -->\n\nSortByPriority->QueueDashboardModule\n\n\n\n\n\nQueueDashboardRoutingModule\n\nQueueDashboardRoutingModule\n\nQueueDashboardModule -->\n\nQueueDashboardRoutingModule->QueueDashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nQueueDashboardModule -->\n\nSharedModule->QueueDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/queue-dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClipboardComponent\n                        \n                        \n                            ComponentBarComponent\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            IsAvailable\n                        \n                        \n                            QmInfoComponent\n                        \n                        \n                            QueueControlComponent\n                        \n                        \n                            QueueDashboardComponent\n                        \n                        \n                            ShiftInfoComponent\n                        \n                        \n                            SortByAVGQDay\n                        \n                        \n                            SortByAlpha\n                        \n                        \n                            SortByPriority\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QueueDashboardRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {QueueDashboardComponent} from './queue-dashboard.component';\nimport {ClipboardComponent} from './clipboard/clipboard.component';\nimport {QueueControlComponent} from './queue-control/queue-control.component';\nimport {ClipboardModule} from 'ngx-clipboard';\nimport {SharedModule} from \"../shared/shared.module\";\nimport {ShiftInfoComponent} from './shift-info/shift-info.component';\nimport {ComponentBarComponent} from \"./component-bar/component-bar.component\";\nimport {QmInfoComponent} from \"./qm-info/qm-info.component\";\nimport {QueueDashboardRoutingModule} from \"./queue-dashboard-routing.module\";\nimport {FilterPipe, IsAvailable, SortByAlpha, SortByAVGQDay, SortByPriority} from './pipe/filter.pipe';\n\n@NgModule({\n  declarations: [\n    ComponentBarComponent,\n    QueueDashboardComponent,\n    ClipboardComponent,\n    QueueControlComponent,\n    ShiftInfoComponent,\n    QmInfoComponent,\n    FilterPipe,\n    IsAvailable,\n    SortByAVGQDay,\n    SortByAlpha,\n    SortByPriority\n  ],\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    SharedModule,\n    QueueDashboardRoutingModule\n  ]\n})\nexport class QueueDashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueDashboardRoutingModule.html":{"url":"modules/QueueDashboardRoutingModule.html","title":"module - QueueDashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueDashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/queue-dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {QueueDashboardComponent} from \"./queue-dashboard.component\";\n\nconst routes: Routes = [\n  {path: 'qm/:id', component: QueueDashboardComponent}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(\n      routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class QueueDashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueueStateService.html":{"url":"injectables/QueueStateService.html","title":"injectable - QueueStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueueStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/queuestate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                key\n                            \n                            \n                                state\n                            \n                            \n                                    Public\n                                webSocketAbstractService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                modifyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webSocketAbstractService: WebSocketAbstractService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/queuestate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webSocketAbstractService\n                                                  \n                                                        \n                                                                        WebSocketAbstractService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modifyQueue\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/queuestate.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"queue modified\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/queuestate.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/queuestate.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            webSocketAbstractService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WebSocketAbstractService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/queuestate.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {WebSocketAbstractService} from \"./websocketAbstract.service\";\nimport {Subject} from \"rxjs/index\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueueStateService {\n\n  state: Subject;\n  private key = \"queue modified\";\n\n  constructor(public webSocketAbstractService: WebSocketAbstractService) {\n    this.state = webSocketAbstractService\n      .connect(this.key);\n  }\n\n  modifyQueue() {\n    this.state.next({\n      \"socket_id\": this.webSocketAbstractService.socket.id\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RccDashboardComponent.html":{"url":"components/RccDashboardComponent.html","title":"component - RccDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RccDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rcc-dashboard/rcc-dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rcc-dashboard\n            \n\n            \n                styleUrls\n                ./rcc-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rcc-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/rcc-dashboard/rcc-dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-dashboard.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-rcc-dashboard',\n  templateUrl: './rcc-dashboard.component.html',\n  styleUrls: ['./rcc-dashboard.component.css']\n})\nexport class RccDashboardComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./rcc-dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RccDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RccDashboardModule.html":{"url":"modules/RccDashboardModule.html","title":"module - RccDashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    RccDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RccDashboardModule\n\n\n\ncluster_RccDashboardModule_declarations\n\n\n\ncluster_RccDashboardModule_imports\n\n\n\n\nRccDashboardComponent\n\nRccDashboardComponent\n\n\n\nRccDashboardModule\n\nRccDashboardModule\n\nRccDashboardModule -->\n\nRccDashboardComponent->RccDashboardModule\n\n\n\n\n\nRccManagementComponent\n\nRccManagementComponent\n\nRccDashboardModule -->\n\nRccManagementComponent->RccDashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRccDashboardModule -->\n\nSharedModule->RccDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/rcc-dashboard/rcc-dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RccDashboardComponent\n                        \n                        \n                            RccManagementComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RccDashboardComponent} from \"./rcc-dashboard.component\";\nimport {RccManagementComponent} from \"./rcc-management/rcc-management.component\";\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  declarations: [RccDashboardComponent, RccManagementComponent]\n})\nexport class RccDashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RccManagementComponent.html":{"url":"components/RccManagementComponent.html","title":"component - RccManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RccManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rcc-dashboard/rcc-management/rcc-management.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rcc-management\n            \n\n            \n                styleUrls\n                ./rcc-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rcc-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _userList\n                            \n                            \n                                actionEntryLogs\n                            \n                            \n                                currentDate\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                errorMessage\n                            \n                            \n                                lastQueueDayUpdateDict\n                            \n                            \n                                    Public\n                                matSnackBar\n                            \n                            \n                                    Public\n                                modalService\n                            \n                            \n                                showSpinner\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQueueDay\n                            \n                            \n                                daysLeftInQuarter\n                            \n                            \n                                getQuarter\n                            \n                            \n                                getResetDays\n                            \n                            \n                                logIt\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddQDay\n                            \n                            \n                                updateQueueDayDict\n                            \n                            \n                                updateQueueDays\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase, userService: UserService, matSnackBar: MatSnackBar, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matSnackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addQueueDay\n                        \n                        \n                    \n                \n            \n            \n                \naddQueueDay(user: User, addAmount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addAmount\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            daysLeftInQuarter\n                        \n                        \n                    \n                \n            \n            \n                \ndaysLeftInQuarter(d)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuarter\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuarter(d)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResetDays\n                        \n                        \n                    \n                \n            \n            \n                \ngetResetDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logIt\n                        \n                        \n                    \n                \n            \n            \n                \nlogIt(msg, t)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddQDay\n                        \n                        \n                    \n                \n            \n            \n                \nonAddQDay(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQueueDayDict\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQueueDayDict()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQueueDays\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQueueDays(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _userList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionEntryLogs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionEntryLog[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastQueueDayUpdateDict\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matSnackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rcc-dashboard/rcc-management/rcc-management.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AngularFireDatabase} from 'angularfire2/database';\nimport {Observable} from 'rxjs';\nimport {User} from '../../shared/model/user';\nimport {UserService} from '../../core/user.service';\nimport {MatSnackBar} from \"@angular/material\";\nimport * as $ from 'jquery';\nimport {BsModalService} from \"ngx-bootstrap\";\nimport {ModalInterface} from \"../../shared/components/modals/modal-interface\";\nimport {ModalInputComponent} from \"../../shared/components/modals/modal-input/modal-input.component\";\nimport {ActionEntryLog} from \"../../shared/model/actionEntryLog\";\n\n@Component({\n  selector: 'app-rcc-management',\n  templateUrl: './rcc-management.component.html',\n  styleUrls: ['./rcc-management.component.css']\n})\nexport class RccManagementComponent implements OnInit {\n\n  users: Observable;\n  showSpinner: boolean = true;\n  _userList: Array;\n  errorMessage: string;\n  currentDate: Date;\n\n  actionEntryLogs: ActionEntryLog[];\n  lastQueueDayUpdateDict = {};\n\n  constructor(public db: AngularFireDatabase,\n              public userService: UserService,\n              public matSnackBar: MatSnackBar,\n              public modalService: BsModalService) {\n\n  }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe((r: User[]) => {\n      this.showSpinner = false;\n      this._userList = r.filter((user: User) => user.iNumber.toUpperCase() !== \"I100000\");\n    }, error => {\n      this.errorMessage = error.message;\n    });\n    this.currentDate = new Date();\n\n    this.updateQueueDayDict();\n  }\n\n  onAddQDay(user: User) {\n    let bsModalRef: ModalInterface = this.modalService.show(ModalInputComponent);\n    bsModalRef.content.title = \"Add Queue Days\";\n    bsModalRef.content.message = `Enter the amount you want to add for ${user.name()}`;\n    bsModalRef.content.onConfirm.subscribe(val => {\n      let amount = parseFloat(val);\n      if (!isNaN(amount)) {\n        let newAmount = user.currentQDays + amount;\n        this.userService.updateQueueDays(user, newAmount).subscribe(r => {\n          user.currentQDays = newAmount;\n          let selector = `#${user.iNumber}.css-checkbox`;\n          $(selector).attr(\"checked\", \"checked\"); //jquery to check the box\n          this.matSnackBar.open(\"Update successful\", \"Close\", {duration: 2000});\n          this.updateQueueDayDict();\n        }, err => {\n          this.matSnackBar.open(\"Error occured: \" + err.message, \"Close\");\n        });\n      } else {\n        this.matSnackBar.open(`Invalid input: '${val}'`, \"Close\", {duration: 5000});\n      }\n    });\n  }\n\n  // Increment by one\n  addQueueDay(user: User, addAmount) {\n    // parseBody value\n    let amount = parseFloat(addAmount);\n    if (!isNaN(amount)) {\n      if (window.confirm(`${user.name()} will have ${user.currentQDays} increased by ${amount} to ${user.currentQDays + amount}. \\nClick okay to confirm`)) {\n        let newAmount = user.currentQDays + amount;\n        this.userService.updateQueueDays(user, newAmount).subscribe(r => {\n          user.currentQDays = newAmount;\n          let selector = `#${user.iNumber}.css-checkbox`;\n          $(selector).attr(\"checked\", \"checked\"); //jquery to check the box\n          this.matSnackBar.open(\"Update successful\", \"Close\", {duration: 2000});\n          this.updateQueueDayDict();\n        }, err => {\n          this.matSnackBar.open(\"Error occured: \" + err.message, \"Close\");\n        });\n      }\n    }\n  }\n\n  updateQueueDays(user) {\n    let pVal = prompt(`Enter the amount you want to overwrite for ${user.name()}. Again you are assigning this user the amount of queue days and not adding to them`);\n    // parseBody value\n    if (pVal && confirm(\"ARE YOU SURE? YOU ARE ABOUT THE OVERWRITE THE QUEUE DAY VALUE FOR \" + user.name() + \" to \" + pVal)) {\n      let amount = parseFloat(pVal);\n      if (!isNaN(amount)) {\n        if (window.confirm(`${user.name()} will have ${user.currentQDays} CHANGED TO ${amount}. \\nClick okay to confirm`)) {\n          this.userService.updateQueueDays(user, amount).subscribe(r => {\n            user.currentQDays = r;\n            this.matSnackBar.open(\"Update successful\", \"Close\", {duration: 2000});\n            this.updateQueueDayDict();\n          }, err => {\n            this.matSnackBar.open(\"Error occurred: \" + err.message, \"Close\");\n          });\n        }\n      }\n    }\n\n  }\n\n  // Oct-Dec = 1\n  // Jan-Mar = 2\n  // Apr-Jun = 3\n  // Jul-Sep = 4\n  getQuarter(d) {\n    d = d || new Date(); // If no date supplied, use today\n    let q = [2, 3, 4, 1];\n    return q[Math.floor(d.getMonth() / 3)];\n  }\n\n  daysLeftInQuarter(d) {\n    d = d || new Date();\n    // d.setDate(d.getDate() + 43)\n    const qEnd: any = new Date(d);\n    qEnd.setMonth(qEnd.getMonth() + 3 - qEnd.getMonth() % 3, 0);\n    return Math.floor((qEnd - d) / 8.64e7);\n  }\n\n  getResetDays() {\n    return this.daysLeftInQuarter(new Date());\n  }\n\n  logIt(msg, t) {\n    console.log(msg, t);\n  }\n\n  updateQueueDayDict() {\n    this.userService.getLastQueueDayChange().subscribe(res => {\n      this.lastQueueDayUpdateDict = res;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    KEY\n    Oct-Dec = 1 | Jan-Mar = 2 | Apr-Jun = 3 | Jul-Sep = 4\n  \n  \n    Current Date\n    {{ currentDate }}\n  \n  \n    Current Quarter\n    {{getQuarter(null)}}\n  \n  \n    Next Reset in Days\n    {{getResetDays(null)}}\n    \n      TODAY (END OF\n        QUARTER)\n      \n    \n  \n\n{{ errorMessage }}\nRCC Data\n\n  \n    \n    \n      Name\n      Current Queue Days\n      Action\n      Last Updated\n      Checklist\n    \n    \n    \n    \n      \n        \n      \n    \n    \n      {{user.name() + \"(\" + user.iNumber + \")\"}}\n      {{user.currentQDays}}\n      \n\n        \n          check_circle\n        \n        Add\n        +1\n        Edit\n      \n      {{lastQueueDayUpdateDict[user.iNumber] }}\n      \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./rcc-management.component.css\n                \n                #rcc-form {\n  background-color: #ffffff;\n  padding: 42px;\n}\n\n#rcc-management h1.qTable-title {\n  background-color: #e74c3c\n}\n\n#rcc-form {\n  margin-bottom: 20px;\n}\n\ndiv#rcc-info-panel {\n  background-color: #2c3e50;\n  color: white;\n  padding: 20px;\n  margin-bottom: 12px;\n}\n\n#reset-button-panel {\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n#rcc-component-header {\n  background-color: #e74c3c;\n}\n\ninput[type=checkbox].css-checkbox {\n  position: absolute;\n  z-index: -1000;\n  left: -1000px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\ninput[type=checkbox].css-checkbox + label.css-label {\n  padding-left: 30px;\n  height: 25px;\n  display: inline-block;\n  line-height: 25px;\n  background-repeat: no-repeat;\n  background-position: 0 0;\n  font-size: 25px;\n  vertical-align: middle;\n  cursor: pointer;\n\n}\n\ninput[type=checkbox].css-checkbox:checked + label.css-label {\n  background-position: 0 -25px;\n}\n\nlabel.css-label {\n  background-image: url(\"../../../assets/csscheckbox.png\");\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      KEY    Oct-Dec = 1 | Jan-Mar = 2 | Apr-Jun = 3 | Jul-Sep = 4        Current Date    {{ currentDate }}        Current Quarter    {{getQuarter(null)}}        Next Reset in Days    {{getResetDays(null)}}          TODAY (END OF        QUARTER)            {{ errorMessage }}RCC Data                Name      Current Queue Days      Action      Last Updated      Checklist                                                  {{user.name() + \"(\" + user.iNumber + \")\"}}      {{user.currentQDays}}                        check_circle                Add        +1        Edit            {{lastQueueDayUpdateDict[user.iNumber] }}                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RccManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                            \n                                    Public\n                                matSnackBar\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, matSnackBar: MatSnackBar, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matSnackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matSnackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../core/user.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AngularFireDatabase} from 'angularfire2/database';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n\n  constructor(\n    public  userService: UserService,\n    public  matSnackBar: MatSnackBar,\n    public db: AngularFireDatabase) {\n  }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  Settings\n    Work In Progress\n  \n  \n    \n      \n    \n  \n  \n  \n    \n      \n    \n  \n  \n  \n  \n\n\n\n\n  \n    \n      \n        Master Reset\n        \n          \n        \n      \n      \n        Not Operational\n      \n    \n\n    \n      \n        Incident Reset\n        \n          \n        \n      \n      \n        Operational\n      \n    \n\n    \n      \n        RCC Reset\n        \n          \n        \n      \n      \n        Operational\n      \n    \n\n    \n      \n        Activity Log Reset\n        \n          \n        \n      \n      \n        Operational\n      \n    \n\n  \n -->\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                .section {\n  padding: 1.5rem;\n  margin-right: 0;\n  margin-left: 0;\n  border: .2rem solid #f7f7f9;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Settings    Work In Progress                                                                  Master Reset                                              Not Operational                            Incident Reset                                              Operational                            RCC Reset                                              Operational                            Activity Log Reset                                              Operational             -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nApplicationSettingsComponent\n\nApplicationSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nApplicationSettingsComponent->SettingsModule\n\n\n\n\n\nComponentSettingsComponent\n\nComponentSettingsComponent\n\nSettingsModule -->\n\nComponentSettingsComponent->SettingsModule\n\n\n\n\n\nNoticeBoardSettingComponent\n\nNoticeBoardSettingComponent\n\nSettingsModule -->\n\nNoticeBoardSettingComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSettingsModule -->\n\nSharedModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApplicationSettingsComponent\n                        \n                        \n                            ComponentSettingsComponent\n                        \n                        \n                            NoticeBoardSettingComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsComponent} from \"./settings.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {NoticeBoardSettingComponent} from './notice-board-setting/notice-board-setting.component';\nimport {ApplicationSettingsComponent} from './application-settings/application-settings.component';\nimport {ComponentSettingsComponent} from './product-settings/component-settings.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [SettingsComponent, NoticeBoardSettingComponent, ApplicationSettingsComponent, ComponentSettingsComponent]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nLoadingSpinnerComponent->SharedModule\n\n\n\n\n\nModalConfirmComponent\n\nModalConfirmComponent\n\nSharedModule -->\n\nModalConfirmComponent->SharedModule\n\n\n\n\n\nModalInfoComponent\n\nModalInfoComponent\n\nSharedModule -->\n\nModalInfoComponent->SharedModule\n\n\n\n\n\nModalInputComponent\n\nModalInputComponent\n\nSharedModule -->\n\nModalInputComponent->SharedModule\n\n\n\n\n\nModalServerErrorComponent\n\nModalServerErrorComponent\n\nSharedModule -->\n\nModalServerErrorComponent->SharedModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nSharedModule -->\n\nNavbarComponent->SharedModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nSharedModule -->\n\nNotificationComponent->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent  -->\n\nSharedModule->LoadingSpinnerComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nSharedModule->NavbarComponent \n\n\n\n\n\nNotificationComponent \n\nNotificationComponent \n\nNotificationComponent  -->\n\nSharedModule->NotificationComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            ModalConfirmComponent\n                        \n                        \n                            ModalInfoComponent\n                        \n                        \n                            ModalInputComponent\n                        \n                        \n                            ModalServerErrorComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ModalConfirmComponent\n                        \n                        \n                            ModalInfoComponent\n                        \n                        \n                            ModalInputComponent\n                        \n                        \n                            ModalServerErrorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingSpinnerComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoadingSpinnerComponent} from \"./components/loading-spinner/loading-spinner.component\";\nimport {NotificationComponent} from \"./components/notification/notification.component\";\nimport {NavbarComponent} from \"./components/navbar/navbar.component\";\nimport {AppRoutingModule} from \"../app-routing.module\";\nimport {SidebarComponent} from \"./components/sidebar/sidebar.component\";\nimport {ModalConfirmComponent} from './components/modals/modal-confirm/modal-confirm.component';\nimport {ModalInfoComponent} from './components/modals/modal-info/modal-info.component';\nimport {ModalInputComponent} from './components/modals/modal-input/modal-input.component';\nimport {ModalServerErrorComponent} from './components/modals/modal-server-error/modal-server-error.component';\nimport {ModalModule} from \"ngx-bootstrap/modal\";\nimport {MaterialModule} from \"./material\";\n\n/*\n* entryComponents: Modal components need to be here or they won't work\n* */\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AppRoutingModule,\n    // TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  declarations: [\n    SidebarComponent,\n    LoadingSpinnerComponent,\n    NotificationComponent,\n    NavbarComponent,\n    ModalConfirmComponent,\n    ModalInfoComponent,\n    ModalInputComponent,\n    ModalServerErrorComponent,\n  ],\n  exports: [\n    SidebarComponent,\n    LoadingSpinnerComponent,\n    NotificationComponent,\n    NavbarComponent,\n    // TooltipModule,\n    MaterialModule\n  ],\n  entryComponents: [\n    ModalConfirmComponent,\n    ModalInfoComponent,\n    ModalInputComponent,\n    ModalServerErrorComponent\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShiftInfoComponent.html":{"url":"components/ShiftInfoComponent.html","title":"component - ShiftInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShiftInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/queue-dashboard/shift-info/shift-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shift-info\n            \n\n            \n                styleUrls\n                ./shift-info.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shift-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                SHIFT_BRAZIL\n                            \n                            \n                                SHIFT_EAST\n                            \n                            \n                                SHIFT_WEST\n                            \n                            \n                                SHIFTS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SHIFT_BRAZIL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WorkShift('Brazil', new Date('December 31, 1995 04:30:00'), new Date('December 31, 1995 14:00:00'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SHIFT_EAST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WorkShift('East', new Date('December 31, 1995 06:00:00'), new Date('December 31, 1995 15:00:00'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SHIFT_WEST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WorkShift('West', new Date('December 31, 1995 08:00:00'), new Date('December 31, 1995 17:00:00'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SHIFTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.SHIFT_EAST, this.SHIFT_WEST, this.SHIFT_BRAZIL]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/queue-dashboard/shift-info/shift-info.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {WorkShift} from \"../../shared/model/work_shift\";\n\n@Component({\n  selector: 'app-shift-info',\n  templateUrl: './shift-info.component.html',\n  styleUrls: ['./shift-info.component.css']\n})\nexport class ShiftInfoComponent implements OnInit {\n\n  SHIFT_WEST = new WorkShift('West', new Date('December 31, 1995 08:00:00'), new Date('December 31, 1995 17:00:00'));\n  SHIFT_EAST = new WorkShift('East', new Date('December 31, 1995 06:00:00'), new Date('December 31, 1995 15:00:00'));\n  SHIFT_BRAZIL = new WorkShift('Brazil', new Date('December 31, 1995 04:30:00'), new Date('December 31, 1995 14:00:00'));\n\n  SHIFTS = [this.SHIFT_EAST, this.SHIFT_WEST, this.SHIFT_BRAZIL];\n\n  // SHIFT_BRAZIL = new WorkShift();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    // this.SHIFT_WEST.start = new Date('December 31, 1995 05:00:00');\n    // console.log(new Date('December 31, 1995 17:00:00').getTime())\n  }\n\n\n}\n\n    \n\n    \n        *Testing, use for reference\n\n  {{shift.location}}{{shift.getStatus()}}\n  \n\n\n\n    \n\n    \n                \n                    ./shift-info.component.css\n                \n                .shift-light {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '*Testing, use for reference  {{shift.location}}{{shift.getStatus()}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShiftInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appLastUpdate\n                            \n                            \n                                appVersion\n                            \n                            \n                                qmdoclink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/sidebar/sidebar.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appLastUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.last_updated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.appVersion\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            qmdoclink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://queuemanagerdocumentation-p2000140239trial.dispatcher.hanatrial.ondemand.com/changelog.html\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {environment} from \"../../../../environments/environment\";\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  appVersion = environment.appVersion;\n  appLastUpdate = environment.last_updated;\n  qmdoclink = \"https://queuemanagerdocumentation-p2000140239trial.dispatcher.hanatrial.ondemand.com/changelog.html\";\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          QM Procedure\n        \n        1. Change Queue Manager\n        2. Update user's queue days\n        3. Find and assign tickets to users\n        4. Check component and increment incident count for assigned user in the QM Tool\n      \n    \n    \n    \n      Tool Updates\n      Last Updated: {{ appLastUpdate}}\n      App Version: {{ appVersion }}\n      Change Log\n    \n  \n\n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                #sidebar-wrapper {\n  height: 100%;\n  /*background-color: #2c3e50;*/\n  /*background: linear-gradient(180deg, #2c3e50 0, #43586d 100%);*/\n  background: linear-gradient(180deg, #3a5066 0, #43586d 100%);\n  font-weight: 400;\n}\n\n#sidebar-wrapper hr {\n  border-top: 7px solid rgba(255, 255, 255, 0.4);\n}\n\n#sidebar-nav {\n  width: 16.67%;\n  position: fixed;\n  z-index: 1;\n  top: 46px;\n  overflow-x: hidden;\n}\n\n.sidebar-card:after {\n  background-color: #ffffff;\n  content: '';\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: -1;\n}\n\n.sidebar-card {\n  padding: 13px 5px;\n  background: linear-gradient(135deg, #f2f2f2 94%, #464446 10%);\n  border: 5px solid #464446;\n}\n\n#sidebar-quick-notes {\n  background: linear-gradient(135deg, #C73F40 94%, #9a3636 10%);\n  border: 5px solid #9a3636;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              QM Procedure                1. Change Queue Manager        2. Update user\\'s queue days        3. Find and assign tickets to users        4. Check component and increment incident count for assigned user in the QM Tool                        Tool Updates      Last Updated: {{ appLastUpdate}}      App Version: {{ appVersion }}      Change Log      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByAVGQDay.html":{"url":"pipes/SortByAVGQDay.html","title":"pipe - SortByAVGQDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByAVGQDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/pipe/filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortByAVGQDay\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {User} from \"../../shared/model/user\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAlpha',\n  pure: false\n})\nexport class SortByAlpha implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value.sort(\n      function (a, b) {\n        if (a.name  b.name) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAVGQDay',\n  pure: false\n})\n\nexport class SortByAVGQDay implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value\n      .sort(\n        function (a, b) {\n          if (a.getAverageQDay()  b.getAverageQDay()) {\n            return 1;\n          }\n          return 0;\n        });\n  }\n\n}\n\n\n@Pipe({\n  name: 'isAvailable',\n  pure: false\n})\nexport class IsAvailable implements PipeTransform {\n  transform(value: any, component: string, availability: boolean): any {\n    if (!value) {\n      return [];\n    }\n    return value.filter((t: User) => {\n      return t.supportedProducts[component] && t.isAvailable == availability;\n    });\n  }\n}\n\n@Pipe({\n  name: 'sortByPriority',\n  pure: false\n})\nexport class SortByPriority implements PipeTransform {\n  private groupByUsage(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.usagePercent.toString()]) {\n        object[user.usagePercent.toString()] = [];\n      }\n      object[user.usagePercent.toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private groupByAQD(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.getAverageQDay().toString()]) {\n        object[user.getAverageQDay().toString()] = [];\n      }\n      object[user.getAverageQDay().toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private rankGroup(group: any[], totalIncidents: number, membersAvailable: number) {\n    let usagePercent = group[0].usagePercent;\n    return (1 / (totalIncidents * usagePercent / membersAvailable)).toFixed(4);\n  }\n\n  private merge(arr) {\n    let tmp = [];\n    arr.forEach(r => {\n      tmp = tmp.concat(r);\n    });\n    return tmp;\n  }\n\n  private sortByIncidents(group) {\n    return group.sort(\n      function (a: User, b: User) {\n        if (a.getIncidentTotal()  b.getIncidentTotal()) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n\n  transform(value: any, totalIncidents: number): any {\n    if (!value) {\n      return [];\n    }\n\n    let t = this.groupByAQD(value).map(el => {\n      return this.sortByIncidents(el);\n    });\n\n    // this.sinkHeavy(this.merge(value), max);\n    // console.log(this.group(value));\n    // console.log(value);\n    // console.log(this.merge(value));\n    return this.merge(t);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByAlpha.html":{"url":"pipes/SortByAlpha.html","title":"pipe - SortByAlpha","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByAlpha\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/pipe/filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortByAlpha\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {User} from \"../../shared/model/user\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAlpha',\n  pure: false\n})\nexport class SortByAlpha implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value.sort(\n      function (a, b) {\n        if (a.name  b.name) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAVGQDay',\n  pure: false\n})\n\nexport class SortByAVGQDay implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value\n      .sort(\n        function (a, b) {\n          if (a.getAverageQDay()  b.getAverageQDay()) {\n            return 1;\n          }\n          return 0;\n        });\n  }\n\n}\n\n\n@Pipe({\n  name: 'isAvailable',\n  pure: false\n})\nexport class IsAvailable implements PipeTransform {\n  transform(value: any, component: string, availability: boolean): any {\n    if (!value) {\n      return [];\n    }\n    return value.filter((t: User) => {\n      return t.supportedProducts[component] && t.isAvailable == availability;\n    });\n  }\n}\n\n@Pipe({\n  name: 'sortByPriority',\n  pure: false\n})\nexport class SortByPriority implements PipeTransform {\n  private groupByUsage(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.usagePercent.toString()]) {\n        object[user.usagePercent.toString()] = [];\n      }\n      object[user.usagePercent.toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private groupByAQD(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.getAverageQDay().toString()]) {\n        object[user.getAverageQDay().toString()] = [];\n      }\n      object[user.getAverageQDay().toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private rankGroup(group: any[], totalIncidents: number, membersAvailable: number) {\n    let usagePercent = group[0].usagePercent;\n    return (1 / (totalIncidents * usagePercent / membersAvailable)).toFixed(4);\n  }\n\n  private merge(arr) {\n    let tmp = [];\n    arr.forEach(r => {\n      tmp = tmp.concat(r);\n    });\n    return tmp;\n  }\n\n  private sortByIncidents(group) {\n    return group.sort(\n      function (a: User, b: User) {\n        if (a.getIncidentTotal()  b.getIncidentTotal()) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n\n  transform(value: any, totalIncidents: number): any {\n    if (!value) {\n      return [];\n    }\n\n    let t = this.groupByAQD(value).map(el => {\n      return this.sortByIncidents(el);\n    });\n\n    // this.sinkHeavy(this.merge(value), max);\n    // console.log(this.group(value));\n    // console.log(value);\n    // console.log(this.merge(value));\n    return this.merge(t);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByPriority.html":{"url":"pipes/SortByPriority.html","title":"pipe - SortByPriority","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByPriority\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/queue-dashboard/pipe/filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortByPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            groupByAQD\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    groupByAQD(user: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            groupByUsage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    groupByUsage(user: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            merge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    merge(arr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            rankGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rankGroup(group: any[], totalIncidents: number, membersAvailable: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    totalIncidents\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    membersAvailable\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortByIncidents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortByIncidents(group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, totalIncidents: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/queue-dashboard/pipe/filter.pipe.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    totalIncidents\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {User} from \"../../shared/model/user\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return null;\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAlpha',\n  pure: false\n})\nexport class SortByAlpha implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value.sort(\n      function (a, b) {\n        if (a.name  b.name) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n}\n\n\n@Pipe({\n  name: 'sortByAVGQDay',\n  pure: false\n})\n\nexport class SortByAVGQDay implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return [];\n    }\n    return value\n      .sort(\n        function (a, b) {\n          if (a.getAverageQDay()  b.getAverageQDay()) {\n            return 1;\n          }\n          return 0;\n        });\n  }\n\n}\n\n\n@Pipe({\n  name: 'isAvailable',\n  pure: false\n})\nexport class IsAvailable implements PipeTransform {\n  transform(value: any, component: string, availability: boolean): any {\n    if (!value) {\n      return [];\n    }\n    return value.filter((t: User) => {\n      return t.supportedProducts[component] && t.isAvailable == availability;\n    });\n  }\n}\n\n@Pipe({\n  name: 'sortByPriority',\n  pure: false\n})\nexport class SortByPriority implements PipeTransform {\n  private groupByUsage(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.usagePercent.toString()]) {\n        object[user.usagePercent.toString()] = [];\n      }\n      object[user.usagePercent.toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private groupByAQD(user: User[]) {\n    let object = {};\n    user.forEach((user: User) => {\n      if (!object[user.getAverageQDay().toString()]) {\n        object[user.getAverageQDay().toString()] = [];\n      }\n      object[user.getAverageQDay().toString()].push(user);\n    });\n    let arr = [];\n    let i = 0;\n    Object.keys(object).forEach(key => {\n      arr[i] = object[key];\n      i++;\n    });\n    return arr;\n  }\n\n  private rankGroup(group: any[], totalIncidents: number, membersAvailable: number) {\n    let usagePercent = group[0].usagePercent;\n    return (1 / (totalIncidents * usagePercent / membersAvailable)).toFixed(4);\n  }\n\n  private merge(arr) {\n    let tmp = [];\n    arr.forEach(r => {\n      tmp = tmp.concat(r);\n    });\n    return tmp;\n  }\n\n  private sortByIncidents(group) {\n    return group.sort(\n      function (a: User, b: User) {\n        if (a.getIncidentTotal()  b.getIncidentTotal()) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n\n  transform(value: any, totalIncidents: number): any {\n    if (!value) {\n      return [];\n    }\n\n    let t = this.groupByAQD(value).map(el => {\n      return this.sortByIncidents(el);\n    });\n\n    // this.sinkHeavy(this.merge(value), max);\n    // console.log(this.group(value));\n    // console.log(value);\n    // console.log(this.merge(value));\n    return this.merge(t);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamDashboardComponent.html":{"url":"components/TeamDashboardComponent.html","title":"component - TeamDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team-dashboard/team-dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-dashboard\n            \n\n            \n                styleUrls\n                ./team-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/team-dashboard/team-dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-dashboard.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-team-dashboard',\n  templateUrl: './team-dashboard.component.html',\n  styleUrls: ['./team-dashboard.component.css']\n})\nexport class TeamDashboardComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n-->\n\n    \n\n    \n                \n                    ./team-dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamDashboardModule.html":{"url":"modules/TeamDashboardModule.html","title":"module - TeamDashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamDashboardModule\n\n\n\ncluster_TeamDashboardModule_declarations\n\n\n\ncluster_TeamDashboardModule_imports\n\n\n\n\nAddUserFormComponent\n\nAddUserFormComponent\n\n\n\nTeamDashboardModule\n\nTeamDashboardModule\n\nTeamDashboardModule -->\n\nAddUserFormComponent->TeamDashboardModule\n\n\n\n\n\nTeamDashboardComponent\n\nTeamDashboardComponent\n\nTeamDashboardModule -->\n\nTeamDashboardComponent->TeamDashboardModule\n\n\n\n\n\nTeamManagerComponent\n\nTeamManagerComponent\n\nTeamDashboardModule -->\n\nTeamManagerComponent->TeamDashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamDashboardModule -->\n\nSharedModule->TeamDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/team-dashboard/team-dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserFormComponent\n                        \n                        \n                            TeamDashboardComponent\n                        \n                        \n                            TeamManagerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TeamDashboardComponent} from \"./team-dashboard.component\";\nimport {TeamManagerComponent} from \"./team-manager/team-manager.component\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AddUserFormComponent} from './add-user-form/add-user-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule\n  ],\n  declarations: [TeamDashboardComponent, TeamManagerComponent, AddUserFormComponent]\n})\nexport class TeamDashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamManagerComponent.html":{"url":"components/TeamManagerComponent.html","title":"component - TeamManagerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamManagerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team-dashboard/team-manager/team-manager.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-manager\n            \n\n            \n                styleUrls\n                ./team-manager.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team-manager.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                            \n                                errorMessage\n                            \n                            \n                                itemsRef\n                            \n                            \n                                productList\n                            \n                            \n                                    Public\n                                productService\n                            \n                            \n                                showSpinner\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                userList\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                fetchProducts\n                            \n                            \n                                onAddUser\n                            \n                            \n                                toggleRole\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase, userService: UserService, productService: ProductService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchProducts\n                        \n                        \n                    \n                \n            \n            \n                \nfetchProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddUser\n                        \n                        \n                    \n                \n            \n            \n                \nonAddUser(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleRole\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleRole(user: User, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User, name: string, iNumber: string, usage: string, i_threshold: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i_threshold\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team-dashboard/team-manager/team-manager.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from 'angularfire2/database';\nimport {Observable} from 'rxjs';\nimport {User} from '../../shared/model/user';\nimport {UserService} from '../../core/user.service';\nimport {NgForm} from '@angular/forms';\nimport {ProductService} from \"../../core/product.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-team-manager',\n  templateUrl: './team-manager.component.html',\n  styleUrls: ['./team-manager.component.css']\n})\nexport class TeamManagerComponent {\n  showSpinner: boolean = true;\n  itemsRef: AngularFireList;\n  users: Observable;\n  userList: Array;\n  errorMessage: string;\n\n  productList: string[];\n\n  constructor(public db: AngularFireDatabase, public userService: UserService, public productService: ProductService, public snackBar: MatSnackBar) {\n    this.fetchProducts();\n    // Get Users\n    this.users = userService.getUsers();\n    this.users.subscribe(r => {\n      this.showSpinner = false;\n      this.userList = r.sort(\n        function (a, b) {\n          if (a.firstName  b.firstName) {\n            return 1;\n          }\n          return 0;\n        });\n    }, error => {\n      this.errorMessage = error.message;\n    });\n  }\n\n  fetchProducts() {\n    this.productService.getProducts().subscribe(r => {\n      this.productList = r;\n    });\n  }\n\n  updateUser(user: User, name: string, iNumber: string, usage: string, i_threshold: string) {\n    if (user && name && iNumber && usage && i_threshold) {\n      user.firstName = name;\n      user.iNumber = iNumber;\n      user.usagePercent = parseFloat(usage);\n      user.iThreshold = parseInt(i_threshold);\n      this.userService.updateUserMeta(user).subscribe(r => {\n        this.snackBar.open(\"Update successful\", \"Close\", {duration: 3000});\n      });\n    }\n\n  }\n\n  deleteItem(user: User) {\n    let prompt = window.confirm(\"Are you sure you want to delete: \" + user.name() + \"(\" + user.iNumber + \")\" + \"?\");\n    if (prompt) {\n      this.userService.deleteUser(user.iNumber).subscribe((res: any) => {\n        if (res.code == 200) {\n          this.userService.getUsers().subscribe(user => {\n            this.userList = user;\n          });\n        }\n      });\n    }\n  }\n\n  toggleRole(user: User, role: string) {\n    if (window.confirm(`Are you sure you want to toggle '${role}' for ${user.name()}`)) {\n      let currBool = user.hasRole(role);\n      this.userService.updateSupport(user, role, !currBool).subscribe(t => {\n        user.supportedProducts[role] = !currBool;\n      });\n    }\n  }\n\n  onAddUser(f: NgForm) {\n    if (f.valid && f.value.name.trim() && f.value.iNumber.trim()) {\n      this.userService.addUser(f.value.name, f.value.iNumber).subscribe((user: User) => {\n        this.userList.push(user);\n        f.resetForm();\n      }, error => {\n        this.snackBar.open(error.message, \"Close\", {duration: 3000});\n      });\n    } else {\n      this.snackBar.open(\"Please enter valid inputs\", \"Close\", {duration: 3000})\n    }\n  }\n\n}\n\n    \n\n    \n        {{ errorMessage }}\n\n  Team Management\n  \n  \n    \n    \n      #\n      Name\n      INumber\n      Threshold\n      % Usage\n      Actions\n    \n    \n    \n    \n      \n        {{index}}\n        \n        \n        \n        \n        \n          \n            Update\n          \n          Delete\n        \n      \n      \n        Supported Products: {{tmp}}\n        Toggle Products\n        \n          {{ product }}\n          \n        \n      \n    \n    \n  \n\n\n\n  \n    \n      Name\n      \n      \n        \n          Name is required\n        \n        \n          Name must be at least 3 characters long.\n        \n      \n    \n    \n      iNumber\n      \n      \n        \n          iNumber is required.\n        \n        \n          iNumber must be at least 7 characters long.\n        \n      \n    \n  \n  Add User\n\n\n    \n\n    \n                \n                    ./team-manager.component.css\n                \n                div#add-user-form {\n  background-color: white;\n  padding: 16px;\n}\n\n.qm-tbl {\n  padding-bottom: 10px;\n  margin-bottom: 15px;\n}\n\n.qm-tbl-header, .qm-tbl-row {\n  background-color: white;\n  border-bottom: 0.5px solid #c8cacc;\n}\n\n.qm-tbl-header {\n  padding: 16px 0px;\n  font-weight: bold;\n}\n\n.qm-tbl-row {\n  padding: 6px 0px\n}\n\n.row.qm-tbl-detail {\n  padding: 10px 0px 4px 21px;\n}\n\n.row.qm-tbl-detail .btn {\n  margin: 0px 2px;\n  padding: 0px 15px;\n}\n\n\n.row.qm-tbl-detail button.badge {\n  padding: 4px 10px;\n  margin: 0px 2px;\n}\n\n.row.qm-tbl-detail span.badge {\n  padding: 6px 15px;\n  margin: 3px;\n}\n\n.btn-circle {\n  width: 30px;\n  height: 30px;\n  text-align: center;\n  padding: 6px 0;\n  font-size: 12px;\n  line-height: 1.428571429;\n  border-radius: 15px;\n}\n\n.roll-change-panel {\n  float: right;\n}\n\n#team-manger-component-header {\n  background-color: #1d75bc;\n  /*margin-bottom: 15px;*/\n  /*-webkit-box-shadow: 10px 10px grey;*/\n  /*box-shadow: 6px 6px #0d62a7;*/\n}\n\n\n#add-user-form {\n  margin-bottom: 20px\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ errorMessage }}  Team Management                  #      Name      INumber      Threshold      % Usage      Actions                              {{index}}                                                              Update                    Delete                            Supported Products: {{tmp}}        Toggle Products                  {{ product }}                                              Name                              Name is required                          Name must be at least 3 characters long.                            iNumber                              iNumber is required.                          iNumber must be at least 7 characters long.                      Add User'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AddUserFormComponent', 'selector': 'app-add-user-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationSettingsComponent', 'selector': 'app-application-settings'},{'name': 'ClipboardComponent', 'selector': 'app-clipboard'},{'name': 'ComponentBarComponent', 'selector': 'app-component-bar'},{'name': 'ComponentSettingsComponent', 'selector': 'app-component-settings'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmComponent', 'selector': 'app-modal-confirm'},{'name': 'ModalInfoComponent', 'selector': 'app-modal-info'},{'name': 'ModalInputComponent', 'selector': 'app-modal-input'},{'name': 'ModalServerErrorComponent', 'selector': 'app-modal-server-error'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoticeBoardComponent', 'selector': 'app-notice-board'},{'name': 'NoticeBoardSettingComponent', 'selector': 'app-notice-board-setting'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PatchNotesComponent', 'selector': 'app-patch-notes'},{'name': 'QmInfoComponent', 'selector': 'app-qm-info'},{'name': 'QueueControlComponent', 'selector': 'app-queue-control'},{'name': 'QueueDashboardComponent', 'selector': 'app-queue-dashboard'},{'name': 'RccDashboardComponent', 'selector': 'app-rcc-dashboard'},{'name': 'RccManagementComponent', 'selector': 'app-rcc-management'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'ShiftInfoComponent', 'selector': 'app-shift-info'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TeamDashboardComponent', 'selector': 'app-team-dashboard'},{'name': 'TeamManagerComponent', 'selector': 'app-team-manager'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamManagerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentQDays\n                            \n                            \n                                firstName\n                            \n                            \n                                incidentCounts\n                            \n                            \n                                iNumber\n                            \n                            \n                                isAvailable\n                            \n                            \n                                iThreshold\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                            \n                                supportedProducts\n                            \n                            \n                                usagePercent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAvailability\n                            \n                            \n                                    Static\n                                copy\n                            \n                            \n                                generateMetaBody\n                            \n                            \n                                getAverageQDay\n                            \n                            \n                                getIncidentAmount\n                            \n                            \n                                getIncidentTotal\n                            \n                            \n                                getRoleList\n                            \n                            \n                                getStatus\n                            \n                            \n                                getSupportedProductList\n                            \n                            \n                                hasRole\n                            \n                            \n                                setStatus\n                            \n                            \n                                setSupportProudct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iNumber, firstName, lastName, isAvailable, currentQDays, iThreshold, usagePercent, objIncidentCount, objSupportProducts)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/user.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iNumber\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isAvailable\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currentQDays\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iThreshold\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usagePercent\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objIncidentCount\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objSupportProducts\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentQDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            incidentCounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAvailable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usagePercent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAvailability\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAvailability()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateMetaBody\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateMetaBody()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { user_id: string; first_name: string; last_name: string; is_available: any; usage_percent: numbe...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAverageQDay\n                        \n                        \n                    \n                \n            \n            \n                \ngetAverageQDay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIncidentAmount\n                        \n                        \n                    \n                \n            \n            \n                \ngetIncidentAmount(productShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIncidentTotal\n                        \n                        \n                    \n                \n            \n            \n                \ngetIncidentTotal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRoleList\n                        \n                        \n                    \n                \n            \n            \n                \ngetRoleList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSupportedProductList\n                        \n                        \n                    \n                \n            \n            \n                \ngetSupportedProductList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \nhasRole(shortProductName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shortProductName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSupportProudct\n                        \n                        \n                    \n                \n            \n            \n                \nsetSupportProudct(objSupportProducts)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objSupportProducts\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  iNumber: string;\n  firstName: string;\n  lastName: string;\n  isAvailable: any;\n  usagePercent: number;\n  currentQDays: number;\n  iThreshold: number;\n  supportedProducts: object;\n  incidentCounts: object;\n  name: () => string;\n\n  constructor(iNumber, firstName, lastName, isAvailable, currentQDays, iThreshold, usagePercent, objIncidentCount, objSupportProducts) {\n    this.iNumber = iNumber;\n    this.usagePercent = usagePercent;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.isAvailable = isAvailable;\n    this.currentQDays = currentQDays;\n    this.iThreshold = iThreshold;\n    this.incidentCounts = objIncidentCount;\n    this.supportedProducts = this.setSupportProudct(objSupportProducts);\n    this.name = function () {\n      return `${firstName} ${lastName}`.trim();\n    };\n  }\n\n  checkAvailability() {\n    return this.isAvailable != 0;\n  }\n\n  getStatus(): string {\n    if (this.isAvailable) {\n      return \"AVAILABLE\";\n    } else {\n      return \"BUSY\";\n    }\n  }\n\n  setStatus(bool: boolean): void {\n    this.isAvailable = bool;\n  }\n\n  getIncidentTotal(): number {\n    let count = 0;\n    Object.keys(this.incidentCounts).forEach(key => {\n      count += this.incidentCounts[key];\n    });\n    return count;\n  }\n\n  getIncidentAmount(productShortName: string): number {\n    return this.incidentCounts[productShortName];\n  }\n\n  getSupportedProductList(): Array {\n    let arr = [];\n    Object.keys(this.supportedProducts).forEach(key => {\n      if (this.supportedProducts[key] != false) {\n        arr.push(key);\n      }\n    });\n    return arr;\n  }\n\n  hasRole(shortProductName: string): boolean {\n    return this.supportedProducts[shortProductName];\n  }\n\n  getRoleList(): Array {\n    return [];\n  }\n\n  getAverageQDay(): any {\n    let avg;\n    if (this.usagePercent && this.currentQDays) {\n      avg = this.getIncidentTotal() / (this.usagePercent * this.currentQDays);\n    } else {\n      avg = 0;\n    }\n    return parseFloat(avg).toFixed(3);\n  }\n\n  setSupportProudct(objSupportProducts) {\n    if (objSupportProducts) {\n      Object.keys(objSupportProducts).forEach(key => {\n        if (objSupportProducts[key] == null) {\n          objSupportProducts[key] = false;\n        } else {\n          objSupportProducts[key] = true;\n        }\n      });\n    }\n    return objSupportProducts;\n  }\n\n  // Call this for saving the meta body to database. The database expects this body\n  generateMetaBody() {\n    return {\n      user_id: this.iNumber,\n      first_name: this.firstName,\n      last_name: this.lastName,\n      is_available: this.isAvailable,\n      usage_percent: this.usagePercent,\n      current_q_days: this.currentQDays,\n      incident_threshold: this.iThreshold\n    };\n  }\n\n  static copy(user: User) {\n    return new User(user.iNumber, user.firstName, user.lastName, user.isAvailable, user.currentQDays, user.iThreshold, user.usagePercent, user.incidentCounts, user.supportedProducts);\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                incidentapi\n                            \n                            \n                                    Public\n                                logService\n                            \n                            \n                                    Private\n                                productapi\n                            \n                            \n                                    Private\n                                qmapi\n                            \n                            \n                                USER_NOT_FOUND\n                            \n                            \n                                    Private\n                                userapi\n                            \n                            \n                                    Private\n                                userSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIncident\n                            \n                            \n                                addUser\n                            \n                            \n                                    Private\n                                buildBodyFromUserObject\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getLastQueueDayChange\n                            \n                            \n                                getQM\n                            \n                            \n                                getUserByNumber\n                            \n                            \n                                getUserIncidents\n                            \n                            \n                                getUsers\n                            \n                            \n                                removeIncident\n                            \n                            \n                                resetAllUser\n                            \n                            \n                                restQueueDays\n                            \n                            \n                                setQM\n                            \n                            \n                                updateAvailability\n                            \n                            \n                                updateQueueDays\n                            \n                            \n                                updateSupport\n                            \n                            \n                                updateUserMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase, http: HttpClient, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIncident\n                        \n                        \n                    \n                \n            \n            \n                \naddIncident(user: User, productShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \naddUser(firstName: string, iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildBodyFromUserObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBodyFromUserObject(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { \"user_id\": any; \"first_name\": any; \"last_name\": any; \"is_available\": any; \"usage_percent\": any;...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastQueueDayChange\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastQueueDayChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQM\n                        \n                        \n                    \n                \n            \n            \n                \ngetQM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserByNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserByNumber(iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserIncidents\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserIncidents(iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeIncident\n                        \n                        \n                    \n                \n            \n            \n                \nremoveIncident(user: User, productShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAllUser\n                        \n                        \n                    \n                \n            \n            \n                \nresetAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restQueueDays\n                        \n                        \n                    \n                \n            \n            \n                \nrestQueueDays(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQM\n                        \n                        \n                    \n                \n            \n            \n                \nsetQM(iNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAvailability\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAvailability(user: User, bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQueueDays\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQueueDays(user, amount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSupport\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSupport(user: User, productShortName: string, bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserMeta\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserMeta(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            incidentapi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.api + '/incidents'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            productapi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.api + '/products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            qmapi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.api + '/users/qm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"USER NOT FOUND\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userapi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.api + '/users'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {BehaviorSubject, forkJoin, Observable, of, throwError} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {AngularFireDatabase} from 'angularfire2/database';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {LogService} from './log.service';\nimport {environment} from \"../../environments/environment\";\nimport {User} from \"../shared/model/user\";\nimport {Helper} from \"../shared/helper/helper\";\nimport {ActiondId, ActionEntryLog} from \"../shared/model/actionEntryLog\";\nimport {Detail} from \"../shared/model/detail\";\n\n@Injectable()\nexport class UserService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n  /* ERROR MESSAGES */\n  USER_NOT_FOUND = \"USER NOT FOUND\";\n  private userapi: string = environment.api + '/users';\n  private qmapi: string = environment.api + '/users/qm';\n  private incidentapi: string = environment.api + '/incidents';\n  private productapi: string = environment.api + '/products';\n  private userSource = new BehaviorSubject([]);\n\n  constructor(public db: AngularFireDatabase,\n              public http: HttpClient,\n              public logService: LogService,) {\n  }\n\n  getUsers(): Observable {\n    return this.http.get(this.userapi).pipe(\n      map((resp: any) => {\n          // verify response\n          if (resp.code === 200) {\n            return resp.data.map(el =>\n              // populate the User Model\n              new User(el.user_id, el.first_name, el.last_name, el.is_available,\n                el.current_q_days, el.incident_threshold, el.usage_percent,\n                el.incident_counts, el.supported_products)\n            ).sort(function (a, b) {\n              if (a.firstName  b.firstName) {\n                return 1;\n              }\n              return 0;\n            });\n          }\n          throw new Error(resp.code);\n        }\n      ),\n      catchError((e) => Helper.handleError(e, \"Failed to get users\"))\n    );\n  }\n\n  getUserByNumber(iNumber: string): Observable {\n    if (!iNumber) {\n      throw new Error(\"Empty Argument\");\n    }\n    const url = `${this.userapi}/${iNumber}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        if (resp.code === 200) {\n          return new User(resp.data.user_id, resp.data.first_name, resp.data.last_name,\n            resp.data.is_available, resp.data.current_q_days, resp.data.incident_threshold,\n            resp.usage_perecent, resp.data.incident_counts, resp.data.supported_products);\n        }\n        throw new Error(\"User not found\");\n      }),\n      catchError((e) => Helper.handleError(e, \"Failed to get user\"))\n    );\n  }\n\n  addUser(firstName: string, iNumber: string): Observable {\n    const body = {\n      \"user_id\": iNumber,\n      \"first_name\": firstName,\n      \"last_name\": \"\"\n    };\n    return this.http.post(this.userapi, body, this.httpOptions)\n      .pipe(\n        switchMap((resp: any) => {\n          if (resp.code == 201) {\n            return this.getUserByNumber(iNumber);\n          }\n          return throwError(new Error(\"User does not exist\"));\n        }),\n        catchError(e => Helper.handleError(e, \"Failed to Add User\"))\n      );\n  }\n\n  updateUserMeta(user: User) {\n    const body = user.generateMetaBody();\n    return this.http.put(`${this.userapi}/${user.iNumber}`, body, this.httpOptions)\n      .pipe(\n        catchError(e => Helper.handleError(e, \"Update User Meta Failed\"))\n      );\n  }\n\n  updateAvailability(user: User, bool: boolean): Observable {\n    const body = this.buildBodyFromUserObject(user);\n    body.is_available = bool;\n\n    return this.http.put(this.userapi + '/' + user.iNumber, body, this.httpOptions)\n      .pipe(\n        tap(() => this.logService.addLog(user, ActiondId.AVAILABILITY_CHANGED,\n          new Detail(user.getStatus(), user.isAvailable ? \"BUSY\" : \"AVAILABLE\", \"\"))),\n        catchError(e => Helper.handleError(e, \"Update Availability Failed\"))\n      );\n  }\n\n  deleteUser(iNumber: string) {\n    return this.http.delete(`${this.userapi}/${iNumber}`)\n      .pipe(\n        catchError(e => Helper.handleError(e, \"Failed to delete user\"))\n      );\n  }\n\n  updateSupport(user: User, productShortName: string, bool: boolean) {\n    const body = {\n      \"supported\": bool\n    };\n    return this.http.put(`${this.userapi}/${user.iNumber}/${productShortName}`, body, this.httpOptions)\n      .pipe(\n        map((res: any) => {\n          if (res.code === 200) {\n            return res;\n          }\n          throw new Error(\"User not found\");\n        }),\n        tap(() => this.logService.addLog(user, ActiondId.PRDOUCT_SUPPORT_CHANGED,\n          new Detail().addCustomDetail(user.hasRole(productShortName) ? \"Removed \" + productShortName : \"Added \" + productShortName))),\n        catchError(e => Helper.handleError(e, \"Failed to update support\"))\n      );\n\n  }\n\n  addIncident(user: User, productShortName: string): Observable {\n    const body = {\n      \"product_short_name\": productShortName,\n      \"user_id\": user.iNumber\n    };\n    return this.http.post(this.incidentapi, body, this.httpOptions)\n      .pipe(\n        tap(() => this.logService.addLog(user, ActiondId.INCIDENT_ASSIGNED,\n          new Detail(user.incidentCounts[productShortName], user.incidentCounts[productShortName] + 1, productShortName))),\n        catchError(e => Helper.handleError(e, \"Add Incident Failed\")));\n  }\n\n  removeIncident(user: User, productShortName: string): Observable {\n    const body = {\n      \"user_id\": user.iNumber,\n      \"product_short_name\": productShortName\n    };\n    return this.http.delete(this.incidentapi + `/${user.iNumber}/${productShortName}`, this.httpOptions)\n      .pipe(\n        tap(() => this.logService.addLog(user, ActiondId.INCIDENT_UNASSIGNED,\n          new Detail(user.incidentCounts[productShortName], user.incidentCounts[productShortName] - 1, productShortName))),\n        catchError(e => Helper.handleError(e, \"Remove Incident Failed\")));\n  }\n\n  /** @deprecated do not use this */\n  restQueueDays(user: User) {\n    return of(5);\n  }\n\n  resetAllUser() {\n    return forkJoin(\n      [\n        this.http.post(this.incidentapi + '/reset', {'reset_boolean': true}, this.httpOptions),\n        this.http.post(this.userapi + '/reset', {'reset_boolean': true}, this.httpOptions)\n      ]\n    ).pipe(\n      catchError(e => Helper.handleError(e, \"Reset User Failed\"))\n    );\n  }\n\n  updateQueueDays(user, amount) {\n    const requestUser = User.copy(user);\n    requestUser.currentQDays = amount;\n    return this.updateUserMeta(requestUser)\n      .pipe(\n        map(() => amount),\n        tap(() => this.logService.addLog(user, ActiondId.QUEUE_DAYS_CHANGED,\n          new Detail(user.currentQDays, amount, \"Queue Days\"))),\n        catchError(e => Helper.handleError(e, \"Update Queue Days Failed\"))\n      );\n  }\n\n\n  getQM(): Observable {\n    return this.http.get(this.qmapi).pipe(\n      map((r: any) => {\n        if (r.code !== 200) {\n          throw new Error(\"error\");\n        }\n        return new User(r.data.user_id, r.data.first_name, r.data.last_name,\n          r.data.is_available, r.data.current_q_days, r.data.incident_threshold,\n          r.usage_percent, r.data.incident_counts, r.data.supported_products);\n      }),\n      catchError((e: any) => Helper.handleError(e, \"Failed to get QM\"))\n    );\n  }\n\n  setQM(iNumber: string) {\n    let user;\n    return this.getUserByNumber(iNumber).pipe(switchMap(\n      (u: User) => {\n        user = u;\n        // noinspection SpellCheckingInspection\n        const body = {\n          \"user_id\": u.iNumber\n        };\n        return this.http.put(this.qmapi, body, this.httpOptions);\n      }\n    )).pipe(\n      tap(() => this.logService.addLog(user, ActiondId.QM_CHANGED,\n        new Detail().addCustomDetail(\"QM Changed to \" + user.name()))),\n      catchError(e => Helper.handleError(e, \"Failed to set QM\")));\n  }\n\n  getUserIncidents(iNumber: string) {\n    return this.http.get(this.userapi + `/${iNumber}/incidents`).pipe(catchError(e => Helper.handleError(e, \"Failed to get Incidents\")));\n  }\n\n  private buildBodyFromUserObject(user: User) {\n    return {\n      \"user_id\": user.iNumber,\n      \"first_name\": user.firstName,\n      \"last_name\": user.lastName,\n      \"is_available\": user.isAvailable,\n      \"usage_percent\": user.usagePercent,\n      \"current_q_days\": user.currentQDays,\n      \"incident_threshold\": user.iThreshold\n    };\n  }\n\n\n  getLastQueueDayChange() {\n    return forkJoin([this.logService.getLogsAsObservable(), this.getUsers()]).pipe(map((res) => {\n        let users = res[1], logs = res[0];\n        let obj = {}; // stores date of last queue day change\n        users.forEach((u: User) => {\n          let userLog = logs.find((log: ActionEntryLog) => log.actionId === ActiondId.QUEUE_DAYS_CHANGED && u.iNumber === log.affectedInumber);\n          obj[u.iNumber] = userLog ? `${userLog.getDateFormatted()} ${userLog.getTimeFormatted()}` : \"\";\n        });\n        return obj;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebSocketAbstractService.html":{"url":"injectables/WebSocketAbstractService.html","title":"injectable - WebSocketAbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebSocketAbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/websocketabstract.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                socket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/websocketabstract.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/websocketabstract.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/websocketabstract.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport io from 'socket.io-client';\nimport {Observable, Subject} from 'rxjs';\nimport {environment} from \"../../environments/environment\";\n\n\n// TERRIBLE NEEDS REFACTORING\n// OPERATING AS PROOF OF CONCEPT\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketAbstractService {\n\n  // Our socket connection\n  socket;\n\n\n  constructor() {\n    this.socket = io.connect(environment.ws_url);\n  }\n\n  connect(key: string): Subject {\n    // If you aren't familiar with environment variables then\n    // you can hard code `environment.ws_url` as `http://localhost:5000`\n    // this.socket = io.connect(environment.ws_url);\n\n    this.socket.on(\"connect\", () => {\n    });\n    // We define our observable which will observe any incoming messages\n    // from our socket.io server.\n    let observable = new Observable(observer => {\n      this.socket.on(key, (data) => {\n        // console.log(\"Received message from Websocket Server\");\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n    // We define our Observer which will listen to messages\n    // from our other components and send messages back to our\n    // socket server whenever the `next()` method is called.\n    let observer = {\n      next: (data: Object) => {\n        this.socket.emit(key, JSON.stringify(data));\n      },\n    };\n    // we return our Subject which is a combination\n    // of both an observer and observable.\n    return Subject.create(observer, observable);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkShift.html":{"url":"classes/WorkShift.html","title":"class - WorkShift","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkShift\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/work_shift.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                end\n                            \n                            \n                                location\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToMinutes\n                            \n                            \n                                getStatus\n                            \n                            \n                                isOnline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location: string, start: Date, end: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/work_shift.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/work_shift.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/work_shift.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/work_shift.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToMinutes\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToMinutes(hours)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/work_shift.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hours\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/work_shift.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"Online\" | \"Offline\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOnline\n                        \n                        \n                    \n                \n            \n            \n                \nisOnline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/work_shift.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class WorkShift {\n  location: string;\n  private start: Date;\n  private end: Date;\n\n  constructor(location: string, start: Date, end: Date) {\n    this.start = start;\n    this.end = end;\n    this.location = location;\n  }\n\n  isOnline() {\n    let today = new Date();\n    let tMinutes = this.convertToMinutes(today.getHours()) + today.getMinutes();\n    let sMinutes = this.convertToMinutes(this.start.getHours()) + this.start.getMinutes();\n    let eMinutes = this.convertToMinutes(this.end.getHours()) + this.end.getMinutes();\n    return sMinutes \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nQueue Manager Web App 2.0 Patch Notes\nQM v2.3.1\nCustom Thresholds, patches, improvements\n*  Support for custom incident thresholds (maximum incidents assigned per day)\n*  Confirmation before changing roles in Team Manager\n*  Quick add +1 when doing queue days\nQM v2.20\n\nSupport for adding new components\niNumbers are no longer case sensitive\nNew Settings sections to maintain the tool.\nTime shift info\n\nQM v2.11\n\nRefactor services\n\nQM v2.10\n\nImproved UI\nCleaner code\nWorks only in Chrome\nBroken in IE (It worked at a moment in time)\nResolved HTTP Error when refreshing the page\n\nQM Dashboard Updated\n\nThe number next to Total Incidents in green shows the incident counter assigned to an engineer in the last 24 hours.\nfont-awesome icons\nLittle indication that pops up, notifying an incident assignment\n\nRCC\n\nHouses the reset buttons\nNew panel that tells us the next reset date\n\nActivity Log\n\nAll actions and updates to the system will be logged in activity log! Except for resets...\n\nQuick Notes Sidebar\n\nWIP but present\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/archive.service.ts\n            \n            injectable\n            ArchiveService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/core/log.service.ts\n            \n            injectable\n            LogService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/core/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/core/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/queuestate.service.ts\n            \n            injectable\n            QueueStateService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/core/websocketabstract.service.ts\n            \n            injectable\n            WebSocketAbstractService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/notice-board/notice-board.component.ts\n            \n            component\n            NoticeBoardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/patch-notes/patch-notes.component.ts\n            \n            component\n            PatchNotesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/clipboard/clipboard.component.ts\n            \n            component\n            ClipboardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/component-bar/component-bar.component.ts\n            \n            component\n            ComponentBarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/pipe/filter.pipe.ts\n            \n            pipe\n            FilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/pipe/filter.pipe.ts\n            \n            pipe\n            IsAvailable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/pipe/filter.pipe.ts\n            \n            pipe\n            SortByAlpha\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/pipe/filter.pipe.ts\n            \n            pipe\n            SortByAVGQDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/pipe/filter.pipe.ts\n            \n            pipe\n            SortByPriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/qm-info/qm-info.component.ts\n            \n            component\n            QmInfoComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/queue-control/queue-control.component.ts\n            \n            component\n            QueueControlComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/queue-dashboard.component.ts\n            \n            component\n            QueueDashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/queue-dashboard/shift-info/shift-info.component.ts\n            \n            component\n            ShiftInfoComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/rcc-dashboard/rcc-dashboard.component.ts\n            \n            component\n            RccDashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/rcc-dashboard/rcc-management/rcc-management.component.ts\n            \n            component\n            RccManagementComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/settings/application-settings/application-settings.component.ts\n            \n            component\n            ApplicationSettingsComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/settings/notice-board-setting/notice-board-setting.component.ts\n            \n            component\n            NoticeBoardSettingComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/settings/product-settings/component-settings.component.ts\n            \n            component\n            ComponentSettingsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/activity-log/activity-log.component.ts\n            \n            component\n            ActivityLogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/loading-spinner/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/modals/modal-confirm/modal-confirm.component.ts\n            \n            component\n            ModalConfirmComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/modals/modal-info/modal-info.component.ts\n            \n            component\n            ModalInfoComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/modals/modal-input/modal-input.component.ts\n            \n            component\n            ModalInputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/modals/modal-interface.ts\n            \n            interface\n            ModalInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/modals/modal-server-error/modal-server-error.component.ts\n            \n            component\n            ModalServerErrorComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/helper/bodyParser.ts\n            \n            class\n            BodyParser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/helper/helper.ts\n            \n            class\n            Helper\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/model/actionEntryLog.ts\n            \n            class\n            ActionEntryLog\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/model/detail.ts\n            \n            class\n            Detail\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/model/notification.ts\n            \n            class\n            Notification\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/model/qmuser.ts\n            \n            class\n            QmUser\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/model/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/shared/model/work_shift.ts\n            \n            class\n            WorkShift\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/team-dashboard/add-user-form/add-user-form.component.ts\n            \n            component\n            AddUserFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/team-dashboard/team-dashboard.component.ts\n            \n            component\n            TeamDashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team-dashboard/team-manager/team-manager.component.ts\n            \n            component\n            TeamManagerComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.vm.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.2\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.2\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.7\n        \n            firebase : ^5.3.0\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            hoek : ^5.0.3\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            ngx-bootstrap : ^3.0.1\n        \n            ngx-clipboard : ^11.1.1\n        \n            node-sass : ^4.11.0\n        \n            rxjs : ^6.2.2\n        \n            socket.io-client : ^2.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiondId   (src/.../actionEntryLog.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/model/actionEntryLog.ts\n    \n        \n            \n                \n                    \n                        \n                        ActiondId\n                    \n                \n                        \n                            \n                                 CUSTOM_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INCIDENT_ASSIGNED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 INCIDENT_UNASSIGNED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 AVAILABILITY_CHANGED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 QUEUE_DAYS_CHANGED\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 PRDOUCT_SUPPORT_CHANGED\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 QM_CHANGED\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQueue Manager Web App 3.0\nThis is the frontend client that connects to a Node.js server\nThe application servers as work distribution tool that tracks tickets, users, logs. It will organize the queue such that\nthe work load is evenly distributed.\nSetup Front end (Angular 6)\nGetting Started\nThese instructions will get you a copy of the project up and running on your local machine for development. For deployment, refer to the deployment section below.\nPrerequisites\nThings you need to install on your machine\n\nNode.js (https://nodejs.org/en/)\nGit (https://git-scm.com/)\n\nInstalling\nThrough the Node.js command line run:\nnpm install // This will install all dependencies\nCreate a file \"qmtoolconfig.ts\" on the same level of 'angular.json'. Paste the following \n```angular2html\nlet VMIP = \"\" // VIRTUAL MACHINE IP ADDRESS\nexport const qmtoolconfig = {\n  'prod' : {\n    api: VMIP + ':8081/api',\n    ws_url : VMIP + ':8081',\n  },\n  'dev' : {\n    api: VMIP + ':8082/api',\n    ws_url : VMIP + ':8082',\n  },\n  'sandbox':{\n    api: VMIP + ':8083/api',\n    ws_url : VMIP + ':8083',\n  }\n};\n```\nStart the application : Development and Productions Environments\nEnvironments\nThese are following environments set up to be used for this project. Treat these environment as separate entities. No data is shared between them.\nAll connections are managed in the src/environments folder separated by prod, dev, and sandbox\nDEVELOPMENT:\nDevelopment Environment with local Database\n- requires MySQL database on local machine\n$xslt\nng serve OR npm run start\nDevelopment Environment with VM Database\n- connects local front-end application to MySQL development database located on VM\n- Backend server located on VM PORT 8082 i.e http://:8082\n$xslt\nnpm run start-vm\nPRODUCTION:\nProduction Environment with VM Database - For production use.\n- do not develop on this\n$xslt\nnpm run build-prod // compiles the project for production. Outputs folder 'build-prod'\nCompile Production or Development Application for Deployment\nCompile the application into static folder with static files to server by an HTTP server. \nCurrently an IIS server should be pointed to 'build-prod'\n- this folder contains the production application users will see\nThe following commands will compile the project files to served to the clients.\n```\n**For prod\nnpm run build-prod // outputs 'build-prod'\n**For dev\nnpm run build-dev //ouputs 'build-dev'\n```\nIncluded Bash Commands that can be ran:\nUpdate.sh - Resets the project state and pulls the updates project files\nDeploy.sh - Compiles the production version of the app. Outputs \"build-prod folder\"\n=======================================\nBackend End\nThe front end needs a backend to talk to. Here it is. The backend with process the requests and query the database as needed.\nGetting Started\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\nPrerequisites\nWhat things you need to install the software and how to install them\n\nNodeJs\nGit Bash\nMySQL Community Server\n\nInstalling\nInstall MySQL Community Server & Workbench\nThe files are present in the generate folder.\n- model.mwb: The containing the database structure for prod,dev,sandbox\n- initialize db tables.sql: Pure sql that creates the tables needed for application\n- generate.sql: Run this to initialize application with standard data. User: i100000\n- generate_test.sql: Run this to populate application with dummy data\n\nInstall (https://dev.mysql.com/downloads/installer/)\n\nCreate a fie named \"SECRET.JS\" with the following\nangular2html\n// 3 databases must exist on mysql dev,prod,sandbox\nconst config = {\n \"dev\": {\n   host     : 'localhost',\n   user     : 'root',\n   password : 'password',\n   database : 'qmtooldb_dev'\n },\n \"prod\" : {\n   host     : 'localhost',\n   user     : 'root',\n   password : 'password',\n   database : 'qmtooldb_prod'\n },\n 'sandbox' : {\n   host     : 'localhost',\n   user     : 'root',\n   password : 'password',\n   database : 'qmtooldb'\n }\n}\nmodule.exports = config\n\n\nInstall dependencies\n\nInstall Node.js\nThrough the Node Js command line run:\n\nnpm install // This will install all dependencies\n\nCreate a file in backend directory on the same level of app.js named \"SECRET.js\" (no quotes)\n\npaste the following \nStarting Production Server\nnpm run start-prod\nStarting Development Server\nnpm run start-dev\nBuilt With\n\nGoogle Firebase - Realtime Actions\nAngularFire2\nAngular - Front-end web framework\nNodeJs - Dependency Management\nBootstrap - Styling\nFont-Awesome - Styling\nMySQL - Relational Database\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md file for details\nAcknowledgments\n\nhttps://github.com/qianyilun\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Jonathan Tang\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueDashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RccDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_QueueDashboardModule\n\n\n\ncluster_QueueDashboardModule_declarations\n\n\n\ncluster_QueueDashboardModule_imports\n\n\n\ncluster_RccDashboardModule\n\n\n\ncluster_RccDashboardModule_declarations\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TeamDashboardModule\n\n\n\ncluster_TeamDashboardModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nActivityLogComponent\n\nActivityLogComponent\n\nAppModule -->\n\nActivityLogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNoticeBoardComponent\n\nNoticeBoardComponent\n\nAppModule -->\n\nNoticeBoardComponent->AppModule\n\n\n\n\n\nPatchNotesComponent\n\nPatchNotesComponent\n\nAppModule -->\n\nPatchNotesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nQueueDashboardModule\n\nQueueDashboardModule\n\nAppModule -->\n\nQueueDashboardModule->AppModule\n\n\n\n\n\nRccDashboardModule\n\nRccDashboardModule\n\nAppModule -->\n\nRccDashboardModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nQueueDashboardModule -->\n\nSharedModule->QueueDashboardModule\n\n\n\nRccDashboardModule -->\n\nSharedModule->RccDashboardModule\n\n\n\nSettingsModule -->\n\nSharedModule->SettingsModule\n\n\n\n\n\nTeamDashboardModule\n\nTeamDashboardModule\n\nTeamDashboardModule -->\n\nSharedModule->TeamDashboardModule\n\n\n\n\n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent \n\nLoadingSpinnerComponent  -->\n\nSharedModule->LoadingSpinnerComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nSharedModule->NavbarComponent \n\n\n\n\n\nNotificationComponent \n\nNotificationComponent \n\nNotificationComponent  -->\n\nSharedModule->NotificationComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\nAppModule -->\n\nTeamDashboardModule->AppModule\n\n\n\n\n\nArchiveService\n\nArchiveService\n\nCoreModule -->\n\nArchiveService->CoreModule\n\n\n\n\n\nLogService\n\nLogService\n\nCoreModule -->\n\nLogService->CoreModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nCoreModule -->\n\nLoginService->CoreModule\n\n\n\n\n\nProductService\n\nProductService\n\nCoreModule -->\n\nProductService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nClipboardComponent\n\nClipboardComponent\n\nQueueDashboardModule -->\n\nClipboardComponent->QueueDashboardModule\n\n\n\n\n\nComponentBarComponent\n\nComponentBarComponent\n\nQueueDashboardModule -->\n\nComponentBarComponent->QueueDashboardModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nQueueDashboardModule -->\n\nFilterPipe->QueueDashboardModule\n\n\n\n\n\nIsAvailable\n\nIsAvailable\n\nQueueDashboardModule -->\n\nIsAvailable->QueueDashboardModule\n\n\n\n\n\nQmInfoComponent\n\nQmInfoComponent\n\nQueueDashboardModule -->\n\nQmInfoComponent->QueueDashboardModule\n\n\n\n\n\nQueueControlComponent\n\nQueueControlComponent\n\nQueueDashboardModule -->\n\nQueueControlComponent->QueueDashboardModule\n\n\n\n\n\nQueueDashboardComponent\n\nQueueDashboardComponent\n\nQueueDashboardModule -->\n\nQueueDashboardComponent->QueueDashboardModule\n\n\n\n\n\nShiftInfoComponent\n\nShiftInfoComponent\n\nQueueDashboardModule -->\n\nShiftInfoComponent->QueueDashboardModule\n\n\n\n\n\nSortByAVGQDay\n\nSortByAVGQDay\n\nQueueDashboardModule -->\n\nSortByAVGQDay->QueueDashboardModule\n\n\n\n\n\nSortByAlpha\n\nSortByAlpha\n\nQueueDashboardModule -->\n\nSortByAlpha->QueueDashboardModule\n\n\n\n\n\nSortByPriority\n\nSortByPriority\n\nQueueDashboardModule -->\n\nSortByPriority->QueueDashboardModule\n\n\n\n\n\nQueueDashboardRoutingModule\n\nQueueDashboardRoutingModule\n\nQueueDashboardModule -->\n\nQueueDashboardRoutingModule->QueueDashboardModule\n\n\n\n\n\nRccDashboardComponent\n\nRccDashboardComponent\n\nRccDashboardModule -->\n\nRccDashboardComponent->RccDashboardModule\n\n\n\n\n\nRccManagementComponent\n\nRccManagementComponent\n\nRccDashboardModule -->\n\nRccManagementComponent->RccDashboardModule\n\n\n\n\n\nApplicationSettingsComponent\n\nApplicationSettingsComponent\n\nSettingsModule -->\n\nApplicationSettingsComponent->SettingsModule\n\n\n\n\n\nComponentSettingsComponent\n\nComponentSettingsComponent\n\nSettingsModule -->\n\nComponentSettingsComponent->SettingsModule\n\n\n\n\n\nNoticeBoardSettingComponent\n\nNoticeBoardSettingComponent\n\nSettingsModule -->\n\nNoticeBoardSettingComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLoadingSpinnerComponent\n\nLoadingSpinnerComponent\n\nSharedModule -->\n\nLoadingSpinnerComponent->SharedModule\n\n\n\n\n\nModalConfirmComponent\n\nModalConfirmComponent\n\nSharedModule -->\n\nModalConfirmComponent->SharedModule\n\n\n\n\n\nModalInfoComponent\n\nModalInfoComponent\n\nSharedModule -->\n\nModalInfoComponent->SharedModule\n\n\n\n\n\nModalInputComponent\n\nModalInputComponent\n\nSharedModule -->\n\nModalInputComponent->SharedModule\n\n\n\n\n\nModalServerErrorComponent\n\nModalServerErrorComponent\n\nSharedModule -->\n\nModalServerErrorComponent->SharedModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nSharedModule -->\n\nNavbarComponent->SharedModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nSharedModule -->\n\nNotificationComponent->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nAddUserFormComponent\n\nAddUserFormComponent\n\nTeamDashboardModule -->\n\nAddUserFormComponent->TeamDashboardModule\n\n\n\n\n\nTeamDashboardComponent\n\nTeamDashboardComponent\n\nTeamDashboardModule -->\n\nTeamDashboardComponent->TeamDashboardModule\n\n\n\n\n\nTeamManagerComponent\n\nTeamManagerComponent\n\nTeamDashboardModule -->\n\nTeamManagerComponent->TeamDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.dev.vm.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.dev.vm.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n\n  // Meta Data\n  enableDemo: false,\n  enableAuth: true,\n  appVersion: '3.0',\n  last_updated: 'July 2018',\n  appName: 'Queue Manager Cloud Dispatcher',\n  appShort: 'QMCD',\n  production: false,   // Compile for production: npm run build-prod\n\n  // VM QM API\n  api: qmtoolconfig.dev.api,\n  ws_url: qmtoolconfig.dev.ws_url,\n  doc_url: 'https://queuemanagerdocumentation-p2000140239trial.dispatcher.hanatrial.ondemand.com/additional-documentation/introduction.html',\n\n  /* Firebase, realtime functionality */\n  firebaseRootUrl: 'dev',\n  firebase: {\n    apiKey: \"AIzaSyCoesP_YkwMmpJaGWO3PO7A9VgjnrrmlxQ\",\n    authDomain: \"queue-manager-fb-ajs.firebaseapp.com\",\n    databaseURL: \"https://queue-manager-fb-ajs.firebaseio.com\",\n    projectId: \"queue-manager-fb-ajs\",\n    storageBucket: \"queue-manager-fb-ajs.appspot.com\",\n    messagingSenderId: \"1044152156042\"\n  },\n\n  // Local Storage Variable\n  KEY_CACHE_INUMBER: 'USER_INUMBER'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n\n  // Meta Data\n  enableDemo: false,\n  enableAuth: true,\n  appVersion: '3.0',\n  last_updated: 'July 2018',\n  appName: 'Queue Manager Cloud Dispatcher',\n  appShort: 'QMCD',\n  production: true,   // Compile for production: npm run build-prod\n\n  // VM QM API\n  api: qmtoolconfig.prod.api,\n  ws_url: qmtoolconfig.prod.ws_url,\n  doc_url: 'https://queuemanagerdocumentation-p2000140239trial.dispatcher.hanatrial.ondemand.com/additional-documentation/introduction.html',\n\n  /* Firebase, realtime functionality */\n  firebaseRootUrl: 'prod',\n  firebase: {\n    apiKey: \"AIzaSyCoesP_YkwMmpJaGWO3PO7A9VgjnrrmlxQ\",\n    authDomain: \"queue-manager-fb-ajs.firebaseapp.com\",\n    databaseURL: \"https://queue-manager-fb-ajs.firebaseio.com\",\n    projectId: \"queue-manager-fb-ajs\",\n    storageBucket: \"queue-manager-fb-ajs.appspot.com\",\n    messagingSenderId: \"1044152156042\"\n  },\n\n  // Local Storage Variable\n  KEY_CACHE_INUMBER: 'USER_INUMBER'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Meta Data\n  enableDemo: true,\n  enableAuth: false,\n  appVersion: 'v3.0',\n  last_updated: 'July 2018',\n  appName: 'Queue Manager Cloud Dispatcher',\n  appShort: 'QMCD',\n  production: false,\n\n  // LOCAL QM API\n  api: 'http://localhost:8082/api',\n  ws_url: 'http://localhost:8082',\n  doc_url: 'https://queuemanagerdocumentation-p2000140239trial.dispatcher.hanatrial.ondemand.com/additional-documentation/introduction.html',\n\n  // Firebase config and api\n  firebaseRootUrl: 'dev',\n  firebase: {\n    apiKey: \"AIzaSyCoesP_YkwMmpJaGWO3PO7A9VgjnrrmlxQ\",\n    authDomain: \"queue-manager-fb-ajs.firebaseapp.com\",\n    databaseURL: \"https://queue-manager-fb-ajs.firebaseio.com\",\n    projectId: \"queue-manager-fb-ajs\",\n    storageBucket: \"queue-manager-fb-ajs.appspot.com\",\n    messagingSenderId: \"1044152156042\"\n  },\n\n  // Local Storage Variable\n  KEY_CACHE_INUMBER: 'USER_INUMBER'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nWelcome to the EPM Queue Manager Tool Documentation!\nThe goal of the tool is help the EPM Queue Manager distribute the incident workload more efficiently to individual engineers. It highlights the next available engineer that should receive another incident for processing\nThe tool also attempts to balance work distribution in fair and transparent way.\nHana Cloud Cockpit Management [Docs]\n\nHow to restart the database\nHow to deploy application\n\nApplication Features\nClick on [Docs] to find out more info on these features\nManual Queue Dispatcher [Docs]\nManually dispatch incidents with the guidance of this tool. The Home tab.\n*  Assign / Remove incidents from users\n*  Component navigator to find available support engineers\n*  Toggle support availabilty\n*  Priority sorting\n*  Custom threshold reached warnings\n*  24 hour incident assignment counter\n*  Quick copy of incident assigned message\n*  Display of current queue manager\n*  Online / Offline reference board (testing)\nTeam Manager [Docs]\nManage the team and team member details. The Manage Team tab.\n*  add / remove / edit users\n*  toggle user roles\nManual RCC Manager [Docs]\nManage rcc like data. The RCC tab.\n*  add / update / quick add queue days\nActivity Log\nDisplays logged user actions on the tool\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/manual-queue-dispatcher.html":{"url":"additional-documentation/manual-queue-dispatcher.html","title":"additional-page - Manual Queue Dispatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSymbols and Icons\n| Symbols|Description|\n|:-------------: |-------------|\n|| User is available|\n|| User is not available or offline|\n|  | User has reached incident threshold|\n|| User has been assigned 2 incidents today|\n\nChange QM\nChange the QM with your I-Number to let other know you are QM.\n\n\n\nChange Components\nSwitch component views to see the available engineers that support it.\n\n\n\nAssign / Remove Incidents\nIncrement and decriment incident counts\n\n\n\nToggle User\nSwitch user availability\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/manage-team.html":{"url":"additional-documentation/manage-team.html","title":"additional-page - Manage Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToggle Roles\nClick component to enable role. This will determine who shows up through component navigator when assigning incidents.\nRED : DISABLED\nGREEN : ENABLED\n\nChange / Update User Meta Data\nClick the component to add / remove user from component. \n| Variables     | Description\n| ------------- | -------------|\n| NAME      | The user's first name |\n| I-NUMBER  | The user's I-Number      |\n| Threshold | The user's maxiumum amount of incidents assignable per day      |\n| % Usage   | The amount of time dedicated to incident handling per day. (0 to 1.0)      |\n\nAdd New User\nTo add a new user give the user a name and a I-Number. Remember to assign the user roles. Otherwise they will not\nshow in the queue manager.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rcc.html":{"url":"additional-documentation/rcc.html","title":"additional-page - RCC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDays Left in Quarter\n\n| Variables     | Description\n| ------------- | -------------|\n| KEY      | The quarter of the year |\n|  Current Date | The current date    |\n| Current Quarter | See KEY definition      |\n| Next Reset in Days   | The number of days left in the quarter. After quarter ends the tool should be reset     |\nActions\n\nAdd Queue Day\nClick \"Add\" button to add to current queue day.\nIf current queue day is 25, adding 5 will become 30.\n\nUpdate Queue Day\nClick \"Update\" to override the current queue day value.\nIf current is 25, updating will override to current queue days to 25\n\nQuick Add Queue Day\nClick +1. This will quickly add 1 queue day to the user.\nChecklist\nSimply for keeping track of whether the user's queue day has been updated. This check mark will not remain on the page\nwhen refreshing or navigating away from the page\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/settings.html":{"url":"additional-documentation/settings.html","title":"additional-page - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotice Board\nManage the real-time notice board that will be displayed through the application.\nToggle the noticeboard to display.\n\nIncident Number Overwrite\nOvewrite a users incident count.\n**Example** Incident Type: NW | iNumber i123123 | Amount: 10\n\nApplication Settings\n| Buttons|Description| \n|:-------------: |-------------|\n| Easy One Click Button | This will archive, reset queue days, reset incident count, and reset log entries|\n| Advanced | Display single operations |\n| Archive | Outputs all application data into JSON file |\n| Reset Queue Days | Sets all queue days to zero |\n| Reset Incidents | Sets all incident counts to zero |\n| Reset Log Entries | Removes all log entries. Note: doing so may increase application performance |\n\n\nAdd a Product Support Area / Component\nView and manage available components / products supported. To add a component enter the name of the product.\nTo delete click the red '-' sign\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/hana-cloud-cockpit.html":{"url":"additional-documentation/hana-cloud-cockpit.html","title":"additional-page - Hana Cloud Cockpit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to restart the database\n\nOpen Firefox or a Vitrual Machine [IMPORTANT STEP] Won't be able to logon to correct acount without this step.\nGo to (https://account.hanatrial.ondemand.com)\nLogin with user: p2000140239trial. Find password on Microsoft Teams.\nClick Neo Trial -> SAP HANA / SAP ASE Dropdown -> Databases and Schemas -> Click the 'qmdatabase'\n\n-> Start\n\nHow to Deploy Application\n\nGo to (https://account.hanatrial.ondemand.com)\nApplications Tab\nHTML5 Applcations\nUnder actions. Edit application online using the SAP Web IDE\nHit cancel on everything until you reach a screen\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
